

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Mar 09 17:18:36 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51   000000                     
    52                           ; Generated 06/04/2022 GMT
    53                           ; 
    54                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F67K40 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86   000000                     _RC4STAbits	set	3815
    87   000000                     _SP4BRGH	set	3814
    88   000000                     _SP4BRGL	set	3813
    89   000000                     _TX4STAbits	set	3816
    90   000000                     _BAUD4CONbits	set	3817
    91   000000                     _TX4REG	set	3812
    92   000000                     _LATFbits	set	3966
    93   000000                     _TRISFbits	set	3974
    94   000000                     _LATGbits	set	3967
    95   000000                     _TRISGbits	set	3975
    96   000000                     _TRISEbits	set	3973
    97   000000                     _SSP2CON2bits	set	3802
    98   000000                     _RX4PPS	set	3605
    99   000000                     _SSP2CLKPPS	set	3612
   100   000000                     _SSP2DATPPS	set	3613
   101   000000                     _ANSELDbits	set	3751
   102   000000                     _SSP2ADD	set	3798
   103   000000                     _SSP2CON1bits	set	3801
   104   000000                     _RC4REG	set	3811
   105   000000                     _LATCbits	set	3963
   106   000000                     _LATEbits	set	3965
   107   000000                     _TRISCbits	set	3971
   108   000000                     _SSP2CON2	set	3802
   109   000000                     _TRISDbits	set	3972
   110   000000                     _CCPR4H	set	3873
   111   000000                     _CCPR3H	set	3877
   112   000000                     _SSP2STAT	set	3800
   113   000000                     _ANSELFbits	set	3764
   114   000000                     _SSP2BUF	set	3797
   115   000000                     _PIE4bits	set	3629
   116   000000                     _RC7PPS	set	3689
   117   000000                     _RD5PPS	set	3695
   118   000000                     _RE2PPS	set	3700
   119   000000                     _RD6PPS	set	3696
   120   000000                     _PORTFbits	set	3982
   121   000000                     _T2PR	set	4028
   122   000000                     _T2CONbits	set	4029
   123   000000                     _CCPR2H	set	4006
   124   000000                     _CCPR1H	set	4010
   125   000000                     _TRISAbits	set	3969
   126   000000                     _RE4PPS	set	3702
   127   000000                     _RG6PPS	set	3720
   128   000000                     _INTCONbits	set	4082
   129   000000                     _T2CLKCONbits	set	4031
   130   000000                     _T2HLTbits	set	4030
   131   000000                     _CCP1CONbits	set	4011
   132   000000                     _CCPTMRS0bits	set	4013
   133   000000                     _CCP2CONbits	set	4007
   134   000000                     _LATAbits	set	3961
   135   000000                     _CCP3CONbits	set	3878
   136   000000                     _CCP4CONbits	set	3874
   137   000000                     _PIR4bits	set	3639
   138   000000                     _RC0PPS	set	3682
   139                           
   140                           	psect	smallconst
   141   000E00                     __psmallconst:
   142                           	callstack 0
   143   000E00  00                 	db	0
   144   000E01                     STR_1:
   145   000E01  25                 	db	37
   146   000E02  64                 	db	100	;'d'
   147   000E03  20                 	db	32
   148   000E04  25                 	db	37
   149   000E05  64                 	db	100	;'d'
   150   000E06  20                 	db	32
   151   000E07  25                 	db	37
   152   000E08  64                 	db	100	;'d'
   153   000E09  20                 	db	32
   154   000E0A  25                 	db	37
   155   000E0B  64                 	db	100	;'d'
   156   000E0C  20                 	db	32
   157   000E0D  0D                 	db	13
   158   000E0E  0A                 	db	10
   159   000E0F  00                 	db	0
   160   000E10  00                 	db	0	; dummy byte at the end
   161   000000                     
   162                           ; #config settings
   163                           
   164                           	psect	cinit
   165   001A92                     __pcinit:
   166                           	callstack 0
   167   001A92                     start_initialization:
   168                           	callstack 0
   169   001A92                     __initialization:
   170                           	callstack 0
   171                           
   172                           ; Clear objects allocated to BANK1 (60 bytes)
   173   001A92  EE01  F000         	lfsr	0,__pbssBANK1
   174   001A96  0E3C               	movlw	60
   175   001A98                     clear_0:
   176   001A98  6AEE               	clrf	postinc0,c
   177   001A9A  06E8               	decf	wreg,f,c
   178   001A9C  E1FD               	bnz	clear_0
   179                           
   180                           ; Clear objects allocated to BANK0 (57 bytes)
   181   001A9E  EE00  F0C3         	lfsr	0,__pbssBANK0
   182   001AA2  0E39               	movlw	57
   183   001AA4                     clear_1:
   184   001AA4  6AEE               	clrf	postinc0,c
   185   001AA6  06E8               	decf	wreg,f,c
   186   001AA8  E1FD               	bnz	clear_1
   187                           
   188                           ; Clear objects allocated to COMRAM (4 bytes)
   189   001AAA  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   190   001AAC  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   191   001AAE  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   192   001AB0  6A57               	clrf	__pbssCOMRAM& (0+255),c
   193   001AB2                     end_of_initialization:
   194                           	callstack 0
   195   001AB2                     __end_of__initialization:
   196                           	callstack 0
   197   001AB2  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   198   001AB4  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   199   001AB6  0E00               	movlw	low (__Lsmallconst shr (0+16))
   200   001AB8  6EF8               	movwf	tblptru,c
   201   001ABA  0E0E               	movlw	high __Lsmallconst
   202   001ABC  6EF7               	movwf	tblptrh,c
   203   001ABE  0100               	movlb	0
   204   001AC0  EF64  F00A         	goto	_main	;jump to C main() function
   205                           
   206                           	psect	bssCOMRAM
   207   000057                     __pbssCOMRAM:
   208                           	callstack 0
   209   000057                     _TxBufReadCnt:
   210                           	callstack 0
   211   000057                     	ds	1
   212   000058                     _TxBufWriteCnt:
   213                           	callstack 0
   214   000058                     	ds	1
   215   000059                     _RxBufReadCnt:
   216                           	callstack 0
   217   000059                     	ds	1
   218   00005A                     _RxBufWriteCnt:
   219                           	callstack 0
   220   00005A                     	ds	1
   221                           
   222                           	psect	bssBANK0
   223   0000C3                     __pbssBANK0:
   224                           	callstack 0
   225   0000C3                     _EUSART4RXbuf:
   226                           	callstack 0
   227   0000C3                     	ds	20
   228   0000D7                     _width:
   229                           	callstack 0
   230   0000D7                     	ds	2
   231   0000D9                     _prec:
   232                           	callstack 0
   233   0000D9                     	ds	2
   234   0000DB                     _flags:
   235                           	callstack 0
   236   0000DB                     	ds	1
   237   0000DC                     _dbuf:
   238                           	callstack 0
   239   0000DC                     	ds	32
   240                           
   241                           	psect	bssBANK1
   242   000100                     __pbssBANK1:
   243                           	callstack 0
   244   000100                     _EUSART4TXbuf:
   245                           	callstack 0
   246   000100                     	ds	60
   247                           
   248                           	psect	cstackBANK0
   249   000060                     __pcstackBANK0:
   250                           	callstack 0
   251   000060                     ?_vfprintf:
   252                           	callstack 0
   253   000060                     vfprintf@fp:
   254                           	callstack 0
   255                           
   256                           ; 2 bytes @ 0x0
   257   000060                     	ds	2
   258   000062                     vfprintf@fmt:
   259                           	callstack 0
   260                           
   261                           ; 2 bytes @ 0x2
   262   000062                     	ds	2
   263   000064                     vfprintf@ap:
   264                           	callstack 0
   265                           
   266                           ; 2 bytes @ 0x4
   267   000064                     	ds	2
   268   000066                     ?_sprintf:
   269                           	callstack 0
   270   000066                     sprintf@s:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x6
   274   000066                     	ds	2
   275   000068                     sprintf@fmt:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x8
   279   000068                     	ds	10
   280   000072                     sprintf@ap:
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0x12
   284   000072                     	ds	2
   285   000074                     sprintf@f:
   286                           	callstack 0
   287                           
   288                           ; 11 bytes @ 0x14
   289   000074                     	ds	11
   290   00007F                     ??_main:
   291                           
   292                           ; 1 bytes @ 0x1F
   293   00007F                     	ds	2
   294   000081                     main@buf:
   295                           	callstack 0
   296                           
   297                           ; 40 bytes @ 0x21
   298   000081                     	ds	40
   299   0000A9                     main@R:
   300                           	callstack 0
   301                           
   302                           ; 2 bytes @ 0x49
   303   0000A9                     	ds	2
   304   0000AB                     main@B:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0x4B
   308   0000AB                     	ds	2
   309   0000AD                     main@G:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x4D
   313   0000AD                     	ds	2
   314   0000AF                     main@C:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x4F
   318   0000AF                     	ds	2
   319   0000B1                     main@motorL:
   320                           	callstack 0
   321                           
   322                           ; 9 bytes @ 0x51
   323   0000B1                     	ds	9
   324   0000BA                     main@motorR:
   325                           	callstack 0
   326                           
   327                           ; 9 bytes @ 0x5A
   328   0000BA                     	ds	9
   329                           
   330                           	psect	cstackCOMRAM
   331   000001                     __pcstackCOMRAM:
   332                           	callstack 0
   333   000001                     ??_getCharFromTxBuf:
   334   000001                     putCharToRxBuf@byte:
   335                           	callstack 0
   336   000001                     
   337                           ; 1 bytes @ 0x0
   338   000001                     	ds	2
   339   000003                     ??_HighISR:
   340                           
   341                           ; 1 bytes @ 0x2
   342   000003                     	ds	2
   343   000005                     ??_I2C_2_Master_Idle:
   344   000005                     ?___aodiv:
   345                           	callstack 0
   346   000005                     ?___aomod:
   347                           	callstack 0
   348   000005                     sendCharSerial4@charToSend:
   349                           	callstack 0
   350   000005                     initDCmotorsPWM@PWMperiod:
   351                           	callstack 0
   352   000005                     fputc@c:
   353                           	callstack 0
   354   000005                     ___aodiv@dividend:
   355                           	callstack 0
   356   000005                     ___aomod@dividend:
   357                           	callstack 0
   358                           
   359                           ; 8 bytes @ 0x4
   360   000005                     	ds	1
   361   000006                     ??_I2C_2_Master_Read:
   362   000006                     I2C_2_Master_Write@data_byte:
   363                           	callstack 0
   364   000006                     sendStringSerial4@string:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0x5
   368   000006                     	ds	1
   369   000007                     color_writetoaddr@value:
   370                           	callstack 0
   371   000007                     I2C_2_Master_Read@ack:
   372                           	callstack 0
   373   000007                     fputc@fp:
   374                           	callstack 0
   375                           
   376                           ; 2 bytes @ 0x6
   377   000007                     	ds	1
   378   000008                     color_writetoaddr@address:
   379                           	callstack 0
   380   000008                     I2C_2_Master_Read@tmp:
   381                           	callstack 0
   382                           
   383                           ; 1 bytes @ 0x7
   384   000008                     	ds	1
   385   000009                     ??_fputc:
   386   000009                     ??_color_click_init:
   387   000009                     ?_color_read_Red:
   388                           	callstack 0
   389   000009                     ?_color_read_Blue:
   390                           	callstack 0
   391   000009                     ?_color_read_Green:
   392                           	callstack 0
   393   000009                     ?_color_read_Clear:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x8
   397   000009                     	ds	2
   398   00000B                     ??_color_read_Red:
   399   00000B                     ??_color_read_Blue:
   400   00000B                     ??_color_read_Green:
   401   00000B                     ??_color_read_Clear:
   402                           
   403                           ; 1 bytes @ 0xA
   404   00000B                     	ds	2
   405   00000D                     ___aodiv@divisor:
   406                           	callstack 0
   407   00000D                     ___aomod@divisor:
   408                           	callstack 0
   409                           
   410                           ; 8 bytes @ 0xC
   411   00000D                     	ds	1
   412   00000E                     color_read_Red@tmp:
   413                           	callstack 0
   414   00000E                     color_read_Blue@tmp:
   415                           	callstack 0
   416   00000E                     color_read_Green@tmp:
   417                           	callstack 0
   418   00000E                     color_read_Clear@tmp:
   419                           	callstack 0
   420   00000E                     fputs@s:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0xD
   424   00000E                     	ds	2
   425   000010                     fputs@fp:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0xF
   429   000010                     	ds	2
   430   000012                     fputs@c:
   431                           	callstack 0
   432                           
   433                           ; 1 bytes @ 0x11
   434   000012                     	ds	1
   435   000013                     fputs@i:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0x12
   439   000013                     	ds	2
   440   000015                     ___aodiv@counter:
   441                           	callstack 0
   442   000015                     ___aomod@counter:
   443                           	callstack 0
   444   000015                     pad@fp:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x14
   448   000015                     	ds	1
   449   000016                     ___aodiv@sign:
   450                           	callstack 0
   451   000016                     ___aomod@sign:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0x15
   455   000016                     	ds	1
   456   000017                     ?_abs:
   457                           	callstack 0
   458   000017                     pad@buf:
   459                           	callstack 0
   460   000017                     abs@a:
   461                           	callstack 0
   462   000017                     ___aodiv@quotient:
   463                           	callstack 0
   464                           
   465                           ; 8 bytes @ 0x16
   466   000017                     	ds	2
   467   000019                     ??_abs:
   468   000019                     pad@p:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x18
   472   000019                     	ds	2
   473   00001B                     ??_pad:
   474                           
   475                           ; 1 bytes @ 0x1A
   476   00001B                     	ds	1
   477   00001C                     pad@i:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x1B
   481   00001C                     	ds	2
   482   00001E                     pad@w:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x1D
   486   00001E                     	ds	2
   487   000020                     dtoa@fp:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x1F
   491   000020                     	ds	2
   492   000022                     dtoa@d:
   493                           	callstack 0
   494                           
   495                           ; 8 bytes @ 0x21
   496   000022                     	ds	8
   497   00002A                     ??_dtoa:
   498                           
   499                           ; 1 bytes @ 0x29
   500   00002A                     	ds	8
   501   000032                     _dtoa$2146:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x31
   505   000032                     	ds	2
   506   000034                     dtoa@p:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x33
   510   000034                     	ds	2
   511   000036                     dtoa@w:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x35
   515   000036                     	ds	2
   516   000038                     dtoa@n:
   517                           	callstack 0
   518                           
   519                           ; 8 bytes @ 0x37
   520   000038                     	ds	8
   521   000040                     dtoa@s:
   522                           	callstack 0
   523                           
   524                           ; 1 bytes @ 0x3F
   525   000040                     	ds	1
   526   000041                     dtoa@i:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x40
   530   000041                     	ds	2
   531   000043                     vfpfcnvrt@fp:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x42
   535   000043                     	ds	2
   536   000045                     vfpfcnvrt@fmt:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x44
   540   000045                     	ds	2
   541   000047                     vfpfcnvrt@ap:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x46
   545   000047                     	ds	2
   546   000049                     ??_vfpfcnvrt:
   547                           
   548                           ; 1 bytes @ 0x48
   549   000049                     	ds	2
   550   00004B                     vfpfcnvrt@convarg:
   551                           	callstack 0
   552                           
   553                           ; 8 bytes @ 0x4A
   554   00004B                     	ds	8
   555   000053                     vfpfcnvrt@cp:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x52
   559   000053                     	ds	2
   560   000055                     vfprintf@cfmt:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x54
   564   000055                     	ds	2
   565   000057                     
   566                           ; 1 bytes @ 0x56
   567 ;;
   568 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   569 ;;
   570 ;; *************** function _main *****************
   571 ;; Defined at:
   572 ;;		line 19 in file "../main.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;		None
   575 ;; Auto vars:     Size  Location     Type
   576 ;;  buf            40   33[BANK0 ] unsigned char [40]
   577 ;;  C               2   79[BANK0 ] unsigned int 
   578 ;;  G               2   77[BANK0 ] unsigned int 
   579 ;;  B               2   75[BANK0 ] unsigned int 
   580 ;;  R               2   73[BANK0 ] unsigned int 
   581 ;;  motorR          9   90[BANK0 ] struct DC_motor
   582 ;;  motorL          9   81[BANK0 ] struct DC_motor
   583 ;; Return value:  Size  Location     Type
   584 ;;                  1    wreg      void 
   585 ;; Registers used:
   586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   593 ;;      Locals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   594 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   595 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   596 ;;Total ram usage:       68 bytes
   597 ;; Hardware stack levels required when called: 10
   598 ;; This function calls:
   599 ;;		_I2C_2_Master_Init
   600 ;;		_Interrupts_init
   601 ;;		_color_click_init
   602 ;;		_color_read_Blue
   603 ;;		_color_read_Clear
   604 ;;		_color_read_Green
   605 ;;		_color_read_Red
   606 ;;		_initDCmotorsPWM
   607 ;;		_initUSART4
   608 ;;		_sendStringSerial4
   609 ;;		_sprintf
   610 ;; This function is called by:
   611 ;;		Startup code after reset
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           	psect	text0
   616   0014C8                     __ptext0:
   617                           	callstack 0
   618   0014C8                     _main:
   619                           	callstack 21
   620   0014C8                     
   621                           ;../main.c: 21:     initDCmotorsPWM(99);
   622   0014C8  0E00               	movlw	0
   623   0014CA  6E06               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   624   0014CC  0E63               	movlw	99
   625   0014CE  6E05               	movwf	initDCmotorsPWM@PWMperiod^0,c
   626   0014D0  EC56  F00B         	call	_initDCmotorsPWM	;wreg free
   627   0014D4                     
   628                           ;../main.c: 23:     struct DC_motor motorL, motorR;;../main.c: 25:     motorL.power=0;
   629   0014D4  0E00               	movlw	0
   630   0014D6  0100               	movlb	0	; () banked
   631   0014D8  6FB1               	movwf	main@motorL& (0+255),b
   632   0014DA                     
   633                           ; BSR set to: 0
   634                           ;../main.c: 26:     motorL.direction=1;
   635   0014DA  0E01               	movlw	1
   636   0014DC  6FB2               	movwf	(main@motorL+1)& (0+255),b
   637   0014DE                     
   638                           ; BSR set to: 0
   639                           ;../main.c: 27:     motorL.brakemode=1;
   640   0014DE  0E01               	movlw	1
   641   0014E0  6FB3               	movwf	(main@motorL+2)& (0+255),b
   642   0014E2                     
   643                           ; BSR set to: 0
   644                           ;../main.c: 28:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   645   0014E2  0EAA               	movlw	170
   646   0014E4  6FB6               	movwf	(main@motorL+5)& (0+255),b
   647   0014E6  0E0F               	movlw	15
   648   0014E8  6FB7               	movwf	(main@motorL+6)& (0+255),b
   649   0014EA                     
   650                           ; BSR set to: 0
   651                           ;../main.c: 29:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   652   0014EA  0EA6               	movlw	166
   653   0014EC  6FB8               	movwf	(main@motorL+7)& (0+255),b
   654   0014EE  0E0F               	movlw	15
   655   0014F0  6FB9               	movwf	(main@motorL+8)& (0+255),b
   656   0014F2                     
   657                           ; BSR set to: 0
   658                           ;../main.c: 30:     motorL.PWMperiod=99;
   659   0014F2  0E00               	movlw	0
   660   0014F4  6FB5               	movwf	(main@motorL+4)& (0+255),b
   661   0014F6  0E63               	movlw	99
   662   0014F8  6FB4               	movwf	(main@motorL+3)& (0+255),b
   663   0014FA                     
   664                           ; BSR set to: 0
   665                           ;../main.c: 32:     motorR.power=0;
   666   0014FA  0E00               	movlw	0
   667   0014FC  6FBA               	movwf	main@motorR& (0+255),b
   668   0014FE                     
   669                           ; BSR set to: 0
   670                           ;../main.c: 33:     motorR.direction=1;
   671   0014FE  0E01               	movlw	1
   672   001500  6FBB               	movwf	(main@motorR+1)& (0+255),b
   673   001502                     
   674                           ; BSR set to: 0
   675                           ;../main.c: 34:     motorR.brakemode=1;
   676   001502  0E01               	movlw	1
   677   001504  6FBC               	movwf	(main@motorR+2)& (0+255),b
   678   001506                     
   679                           ; BSR set to: 0
   680                           ;../main.c: 35:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   681   001506  0E25               	movlw	37
   682   001508  6FBF               	movwf	(main@motorR+5)& (0+255),b
   683   00150A  0E0F               	movlw	15
   684   00150C  6FC0               	movwf	(main@motorR+6)& (0+255),b
   685   00150E                     
   686                           ; BSR set to: 0
   687                           ;../main.c: 36:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   688   00150E  0E21               	movlw	33
   689   001510  6FC1               	movwf	(main@motorR+7)& (0+255),b
   690   001512  0E0F               	movlw	15
   691   001514  6FC2               	movwf	(main@motorR+8)& (0+255),b
   692   001516                     
   693                           ; BSR set to: 0
   694                           ;../main.c: 37:     motorR.PWMperiod=99;
   695   001516  0E00               	movlw	0
   696   001518  6FBE               	movwf	(main@motorR+4)& (0+255),b
   697   00151A  0E63               	movlw	99
   698   00151C  6FBD               	movwf	(main@motorR+3)& (0+255),b
   699                           
   700                           ;../main.c: 41:     initUSART4();
   701   00151E  ECCE  F00D         	call	_initUSART4	;wreg free
   702   001522                     
   703                           ;../main.c: 42:     color_click_init();
   704   001522  EC2F  F00D         	call	_color_click_init	;wreg free
   705   001526                     
   706                           ;../main.c: 43:     Interrupts_init();
   707   001526  EC0C  F00E         	call	_Interrupts_init	;wreg free
   708   00152A                     
   709                           ;../main.c: 44:     I2C_2_Master_Init();
   710   00152A  EC90  F00D         	call	_I2C_2_Master_Init	;wreg free
   711   00152E                     
   712                           ;../main.c: 48:     TRISGbits.TRISG1 = 0;
   713   00152E  9287               	bcf	135,1,c	;volatile
   714   001530                     
   715                           ;../main.c: 49:     TRISAbits.TRISA4 = 0;
   716   001530  9881               	bcf	129,4,c	;volatile
   717   001532                     
   718                           ;../main.c: 50:     TRISFbits.TRISF7 = 0;
   719   001532  9E86               	bcf	134,7,c	;volatile
   720   001534                     
   721                           ;../main.c: 52:     LATGbits.LATG1 = 1;
   722   001534  827F               	bsf	127,1,c	;volatile
   723   001536                     
   724                           ;../main.c: 53:     LATAbits.LATA4 = 1;
   725   001536  8879               	bsf	121,4,c	;volatile
   726   001538                     
   727                           ;../main.c: 54:     LATFbits.LATF7 = 1;
   728   001538  8E7E               	bsf	126,7,c	;volatile
   729   00153A                     
   730                           ;../main.c: 56:     TRISFbits.TRISF2 = 1;
   731   00153A  8486               	bsf	134,2,c	;volatile
   732   00153C                     
   733                           ;../main.c: 57:     ANSELFbits.ANSELF2=0;
   734   00153C  010E               	movlb	14	; () banked
   735   00153E  95B4               	bcf	180,2,b	;volatile
   736   001540                     l235:
   737   001540  B48E               	btfsc	142,2,c	;volatile
   738   001542  EFA5  F00A         	goto	u1501
   739   001546  EFA7  F00A         	goto	u1500
   740   00154A                     u1501:
   741   00154A  EFA0  F00A         	goto	l235
   742   00154E                     u1500:
   743   00154E                     
   744                           ;../main.c: 61:         unsigned int R = color_read_Red();
   745   00154E  EC2C  F00C         	call	_color_read_Red	;wreg free
   746   001552  C009  F0A9         	movff	?_color_read_Red,main@R
   747   001556  C00A  F0AA         	movff	?_color_read_Red+1,main@R+1
   748                           
   749                           ;../main.c: 62:         unsigned int B = color_read_Blue();
   750   00155A  ECA4  F00C         	call	_color_read_Blue	;wreg free
   751   00155E  C009  F0AB         	movff	?_color_read_Blue,main@B
   752   001562  C00A  F0AC         	movff	?_color_read_Blue+1,main@B+1
   753                           
   754                           ;../main.c: 63:         unsigned int G = color_read_Green();
   755   001566  EC54  F00C         	call	_color_read_Green	;wreg free
   756   00156A  C009  F0AD         	movff	?_color_read_Green,main@G
   757   00156E  C00A  F0AE         	movff	?_color_read_Green+1,main@G+1
   758                           
   759                           ;../main.c: 64:         unsigned int C = color_read_Clear();
   760   001572  EC7C  F00C         	call	_color_read_Clear	;wreg free
   761   001576  C009  F0AF         	movff	?_color_read_Clear,main@C
   762   00157A  C00A  F0B0         	movff	?_color_read_Clear+1,main@C+1
   763   00157E                     
   764                           ;../main.c: 66:         char buf[40];;../main.c: 67:         sprintf(buf,"%d %d %d %d \r
      +                          \n",R,B,G,C);
   765   00157E  0E81               	movlw	low main@buf
   766   001580  0100               	movlb	0	; () banked
   767   001582  6F66               	movwf	sprintf@s& (0+255),b
   768   001584  0E00               	movlw	high main@buf
   769   001586  6F67               	movwf	(sprintf@s+1)& (0+255),b
   770   001588  0E01               	movlw	low STR_1
   771   00158A  6F68               	movwf	sprintf@fmt& (0+255),b
   772   00158C  0E0E               	movlw	high STR_1
   773   00158E  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
   774   001590  C0A9  F06A         	movff	main@R,?_sprintf+4
   775   001594  C0AA  F06B         	movff	main@R+1,?_sprintf+5
   776   001598  C0AB  F06C         	movff	main@B,?_sprintf+6
   777   00159C  C0AC  F06D         	movff	main@B+1,?_sprintf+7
   778   0015A0  C0AD  F06E         	movff	main@G,?_sprintf+8
   779   0015A4  C0AE  F06F         	movff	main@G+1,?_sprintf+9
   780   0015A8  C0AF  F070         	movff	main@C,?_sprintf+10
   781   0015AC  C0B0  F071         	movff	main@C+1,?_sprintf+11
   782   0015B0  ECDB  F00B         	call	_sprintf	;wreg free
   783   0015B4                     
   784                           ;../main.c: 68:         sendStringSerial4(buf);
   785   0015B4  0E81               	movlw	low main@buf
   786   0015B6  6E06               	movwf	sendStringSerial4@string^0,c
   787   0015B8  0E00               	movlw	high main@buf
   788   0015BA  6E07               	movwf	(sendStringSerial4@string+1)^0,c
   789   0015BC  EC62  F00D         	call	_sendStringSerial4	;wreg free
   790   0015C0                     
   791                           ;../main.c: 69:         _delay((unsigned long)((100)*(64000000/4000.0)));
   792   0015C0  0E09               	movlw	9
   793   0015C2  0100               	movlb	0	; () banked
   794   0015C4  6F80               	movwf	(??_main+1)& (0+255),b
   795   0015C6  0E1E               	movlw	30
   796   0015C8  6F7F               	movwf	??_main& (0+255),b
   797   0015CA  0EE4               	movlw	228
   798   0015CC                     u1517:
   799   0015CC  2EE8               	decfsz	wreg,f,c
   800   0015CE  D7FE               	bra	u1517
   801   0015D0  2F7F               	decfsz	??_main& (0+255),f,b
   802   0015D2  D7FC               	bra	u1517
   803   0015D4  2F80               	decfsz	(??_main+1)& (0+255),f,b
   804   0015D6  D7FA               	bra	u1517
   805   0015D8  F000               	nop	
   806   0015DA  EFA0  F00A         	goto	l235
   807   0015DE  EF3B  F000         	goto	start
   808   0015E2                     __end_of_main:
   809                           	callstack 0
   810                           
   811 ;; *************** function _sprintf *****************
   812 ;; Defined at:
   813 ;;		line 9 in file "D:\ECM\pic\sources\c99\common\nf_sprintf.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;  s               2    6[BANK0 ] PTR unsigned char 
   816 ;;		 -> main@buf(40), 
   817 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
   818 ;;		 -> STR_1(15), 
   819 ;; Auto vars:     Size  Location     Type
   820 ;;  f              11   20[BANK0 ] struct _IO_FILE
   821 ;;  ap              2   18[BANK0 ] PTR void [1]
   822 ;;		 -> ?_sprintf(2), 
   823 ;;  ret             2    0        int 
   824 ;; Return value:  Size  Location     Type
   825 ;;                  2    6[BANK0 ] int 
   826 ;; Registers used:
   827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   833 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   834 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   836 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   837 ;;Total ram usage:       25 bytes
   838 ;; Hardware stack levels used: 1
   839 ;; Hardware stack levels required when called: 9
   840 ;; This function calls:
   841 ;;		_vfprintf
   842 ;; This function is called by:
   843 ;;		_main
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847                           	psect	text1
   848   0017B6                     __ptext1:
   849                           	callstack 0
   850   0017B6                     _sprintf:
   851                           	callstack 21
   852   0017B6  0E6A               	movlw	low (?_sprintf+4)
   853   0017B8  0100               	movlb	0	; () banked
   854   0017BA  6F72               	movwf	sprintf@ap& (0+255),b
   855   0017BC  0E00               	movlw	high (?_sprintf+4)
   856   0017BE  6F73               	movwf	(sprintf@ap+1)& (0+255),b
   857   0017C0  C066  F074         	movff	sprintf@s,sprintf@f
   858   0017C4  C067  F075         	movff	sprintf@s+1,sprintf@f+1
   859   0017C8                     
   860                           ; BSR set to: 0
   861   0017C8  0E00               	movlw	0
   862   0017CA  6F78               	movwf	(sprintf@f+4)& (0+255),b
   863   0017CC  0E00               	movlw	0
   864   0017CE  6F77               	movwf	(sprintf@f+3)& (0+255),b
   865   0017D0                     
   866                           ; BSR set to: 0
   867   0017D0  0E00               	movlw	0
   868   0017D2  6F7E               	movwf	(sprintf@f+10)& (0+255),b
   869   0017D4  0E00               	movlw	0
   870   0017D6  6F7D               	movwf	(sprintf@f+9)& (0+255),b
   871   0017D8                     
   872                           ; BSR set to: 0
   873   0017D8  0E74               	movlw	low sprintf@f
   874   0017DA  6F60               	movwf	vfprintf@fp& (0+255),b
   875   0017DC  0E00               	movlw	high sprintf@f
   876   0017DE  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
   877   0017E0  C068  F062         	movff	sprintf@fmt,vfprintf@fmt
   878   0017E4  C069  F063         	movff	sprintf@fmt+1,vfprintf@fmt+1
   879   0017E8  0E72               	movlw	low sprintf@ap
   880   0017EA  6F64               	movwf	vfprintf@ap& (0+255),b
   881   0017EC  0E00               	movlw	high sprintf@ap
   882   0017EE  6F65               	movwf	(vfprintf@ap+1)& (0+255),b
   883   0017F0  EC04  F00C         	call	_vfprintf	;wreg free
   884   0017F4  0100               	movlb	0	; () banked
   885   0017F6  5177               	movf	(sprintf@f+3)& (0+255),w,b
   886   0017F8  2566               	addwf	sprintf@s& (0+255),w,b
   887   0017FA  6ED9               	movwf	fsr2l,c
   888   0017FC  5178               	movf	(sprintf@f+4)& (0+255),w,b
   889   0017FE  2167               	addwfc	(sprintf@s+1)& (0+255),w,b
   890   001800  6EDA               	movwf	fsr2h,c
   891   001802  0E00               	movlw	0
   892   001804  6EDF               	movwf	indf2,c
   893   001806                     
   894                           ; BSR set to: 0
   895   001806  0012               	return		;funcret
   896   001808                     __end_of_sprintf:
   897                           	callstack 0
   898                           
   899 ;; *************** function _vfprintf *****************
   900 ;; Defined at:
   901 ;;		line 1520 in file "D:\ECM\pic\sources\c99\common\doprnt.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
   904 ;;		 -> sprintf@f(11), 
   905 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   906 ;;		 -> STR_1(15), 
   907 ;;  ap              2    4[BANK0 ] PTR PTR void 
   908 ;;		 -> sprintf@ap(2), 
   909 ;; Auto vars:     Size  Location     Type
   910 ;;  cfmt            2   84[COMRAM] PTR unsigned char 
   911 ;;		 -> STR_1(15), 
   912 ;; Return value:  Size  Location     Type
   913 ;;                  2    0[BANK0 ] int 
   914 ;; Registers used:
   915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   916 ;; Tracked objects:
   917 ;;		On entry : 0/0
   918 ;;		On exit  : 0/0
   919 ;;		Unchanged: 0/0
   920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   921 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   922 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   924 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   925 ;;Total ram usage:        8 bytes
   926 ;; Hardware stack levels used: 1
   927 ;; Hardware stack levels required when called: 8
   928 ;; This function calls:
   929 ;;		_vfpfcnvrt
   930 ;; This function is called by:
   931 ;;		_sprintf
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           	psect	text2
   936   001808                     __ptext2:
   937                           	callstack 0
   938   001808                     _vfprintf:
   939                           	callstack 21
   940   001808                     
   941                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1520: int vfprintf(FILE *fp, const char *fmt, v
      +                          a_list ap);D:\ECM\pic\sources\c99\common\doprnt.c: 1521: {;D:\ECM\pic\sources\c99\common
      +                          \doprnt.c: 1523:     char *cfmt;;D:\ECM\pic\sources\c99\common\doprnt.c: 1525:     cfmt 
      +                          = (char *)fmt;
   942   001808  C062  F055         	movff	vfprintf@fmt,vfprintf@cfmt
   943   00180C  C063  F056         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   944                           
   945                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1529:     while (*cfmt) {
   946   001810  EF18  F00C         	goto	l2380
   947   001814                     l2378:
   948                           
   949                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvrt(fp, &cfmt, ap);
   950   001814  C060  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
   951   001818  C061  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   952   00181C  0E55               	movlw	low vfprintf@cfmt
   953   00181E  6E45               	movwf	vfpfcnvrt@fmt^0,c
   954   001820  0E00               	movlw	high vfprintf@cfmt
   955   001822  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
   956   001824  C064  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
   957   001828  C065  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   958   00182C  ECBD  F009         	call	_vfpfcnvrt	;wreg free
   959   001830                     l2380:
   960                           
   961                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1529:     while (*cfmt) {
   962   001830  C055  FFF6         	movff	vfprintf@cfmt,tblptrl
   963   001834  C056  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   964   001838                     	if	0	;tblptru may be non-zero
   965   001838                     	endif
   966   001838                     	if	0	;tblptru may be non-zero
   967   001838                     	endif
   968   001838  0008               	tblrd		*
   969   00183A  50F5               	movf	tablat,w,c
   970   00183C  0900               	iorlw	0
   971   00183E  A4D8               	btfss	status,2,c
   972   001840  EF24  F00C         	goto	u1491
   973   001844  EF26  F00C         	goto	u1490
   974   001848                     u1491:
   975   001848  EF0A  F00C         	goto	l2378
   976   00184C                     u1490:
   977   00184C                     
   978                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1538:  return 0;
   979   00184C  0E00               	movlw	0
   980   00184E  0100               	movlb	0	; () banked
   981   001850  6F61               	movwf	(?_vfprintf+1)& (0+255),b
   982   001852  0E00               	movlw	0
   983   001854  6F60               	movwf	?_vfprintf& (0+255),b
   984   001856                     
   985                           ; BSR set to: 0
   986   001856  0012               	return		;funcret
   987   001858                     __end_of_vfprintf:
   988                           	callstack 0
   989                           
   990 ;; *************** function _vfpfcnvrt *****************
   991 ;; Defined at:
   992 ;;		line 1007 in file "D:\ECM\pic\sources\c99\common\doprnt.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
   995 ;;		 -> sprintf@f(11), 
   996 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
   997 ;;		 -> vfprintf@cfmt(2), 
   998 ;;  ap              2   70[COMRAM] PTR PTR void 
   999 ;;		 -> sprintf@ap(2), 
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;  convarg         8   74[COMRAM] struct .
  1002 ;;  cp              2   82[COMRAM] PTR unsigned char 
  1003 ;;		 -> STR_1(15), 
  1004 ;;  i               2    0        int 
  1005 ;;  done            2    0        int 
  1006 ;;  c               1    0        unsigned char 
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1016 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1017 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1018 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1019 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1020 ;;Total ram usage:       18 bytes
  1021 ;; Hardware stack levels used: 1
  1022 ;; Hardware stack levels required when called: 7
  1023 ;; This function calls:
  1024 ;;		_dtoa
  1025 ;;		_fputc
  1026 ;; This function is called by:
  1027 ;;		_vfprintf
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           	psect	text3
  1032   00137A                     __ptext3:
  1033                           	callstack 0
  1034   00137A                     _vfpfcnvrt:
  1035                           	callstack 21
  1036   00137A                     
  1037                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(FILE *fp, char *fmt[], va_list 
      +                          ap);D:\ECM\pic\sources\c99\common\doprnt.c: 1008: {;D:\ECM\pic\sources\c99\common\doprnt
      +                          .c: 1009:     char c, *cp;;D:\ECM\pic\sources\c99\common\doprnt.c: 1010:     int done, i
      +                          ;;D:\ECM\pic\sources\c99\common\doprnt.c: 1016:  } convarg;;D:\ECM\pic\sources\c99\commo
      +                          n\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1038   00137A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1039   00137E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1040   001382  CFDE FFF6          	movff	postinc2,tblptrl
  1041   001386  CFDD FFF7          	movff	postdec2,tblptrh
  1042   00138A                     	if	0	;tblptru may be non-zero
  1043   00138A                     	endif
  1044   00138A                     	if	0	;tblptru may be non-zero
  1045   00138A                     	endif
  1046   00138A  0008               	tblrd		*
  1047   00138C  50F5               	movf	tablat,w,c
  1048   00138E  0A25               	xorlw	37
  1049   001390  A4D8               	btfss	status,2,c
  1050   001392  EFCD  F009         	goto	u1461
  1051   001396  EFCF  F009         	goto	u1460
  1052   00139A                     u1461:
  1053   00139A  EF4F  F00A         	goto	l2370
  1054   00139E                     u1460:
  1055   00139E                     
  1056                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1020:         ++*fmt;
  1057   00139E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1058   0013A2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1059   0013A6  2ADE               	incf	postinc2,f,c
  1060   0013A8  0E00               	movlw	0
  1061   0013AA  22DD               	addwfc	postdec2,f,c
  1062   0013AC                     
  1063                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1022:         flags = width = 0;
  1064   0013AC  0E00               	movlw	0
  1065   0013AE  0100               	movlb	0	; () banked
  1066   0013B0  6FD8               	movwf	(_width+1)& (0+255),b
  1067   0013B2  0E00               	movlw	0
  1068   0013B4  6FD7               	movwf	_width& (0+255),b
  1069   0013B6  C0D7  F0DB         	movff	_width,_flags
  1070   0013BA                     
  1071                           ; BSR set to: 0
  1072                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1023:         prec = -1;
  1073   0013BA  69D9               	setf	_prec& (0+255),b
  1074   0013BC  69DA               	setf	(_prec+1)& (0+255),b
  1075   0013BE                     
  1076                           ; BSR set to: 0
  1077                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt;
  1078   0013BE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1079   0013C2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1080   0013C6  CFDE F053          	movff	postinc2,vfpfcnvrt@cp
  1081   0013CA  CFDD F054          	movff	postdec2,vfpfcnvrt@cp+1
  1082   0013CE                     
  1083                           ; BSR set to: 0
  1084                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1187:   if (*cp == 'd' || *cp == 'i') {
  1085   0013CE  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1086   0013D2  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1087   0013D6                     	if	0	;tblptru may be non-zero
  1088   0013D6                     	endif
  1089   0013D6                     	if	0	;tblptru may be non-zero
  1090   0013D6                     	endif
  1091   0013D6  0008               	tblrd		*
  1092   0013D8  50F5               	movf	tablat,w,c
  1093   0013DA  0A64               	xorlw	100
  1094   0013DC  B4D8               	btfsc	status,2,c
  1095   0013DE  EFF3  F009         	goto	u1471
  1096   0013E2  EFF5  F009         	goto	u1470
  1097   0013E6                     u1471:
  1098   0013E6  EF03  F00A         	goto	l2360
  1099   0013EA                     u1470:
  1100   0013EA                     
  1101                           ; BSR set to: 0
  1102   0013EA  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1103   0013EE  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1104   0013F2                     	if	0	;tblptru may be non-zero
  1105   0013F2                     	endif
  1106   0013F2                     	if	0	;tblptru may be non-zero
  1107   0013F2                     	endif
  1108   0013F2  0008               	tblrd		*
  1109   0013F4  50F5               	movf	tablat,w,c
  1110   0013F6  0A69               	xorlw	105
  1111   0013F8  A4D8               	btfss	status,2,c
  1112   0013FA  EF01  F00A         	goto	u1481
  1113   0013FE  EF03  F00A         	goto	u1480
  1114   001402                     u1481:
  1115   001402  EF46  F00A         	goto	l2366
  1116   001406                     u1480:
  1117   001406                     l2360:
  1118                           
  1119                           ; BSR set to: 0
  1120                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1230:    convarg.ll = (long long)(int)(*(int *)
      +                          __va_arg(*(int **)ap, (int)0));
  1121   001406  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1122   00140A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1123   00140E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1124   001412  0E02               	movlw	2
  1125   001414  26DE               	addwf	postinc2,f,c
  1126   001416  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1127   00141A  0E00               	movlw	0
  1128   00141C  22DD               	addwfc	postdec2,f,c
  1129   00141E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1130   001422  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1131   001426  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg
  1132   00142A  CFDD F04C          	movff	postdec2,vfpfcnvrt@convarg+1
  1133   00142E  0E00               	movlw	0
  1134   001430  BE4C               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1135   001432  0EFF               	movlw	-1
  1136   001434  6E4D               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1137   001436  6E4E               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1138   001438  6E4F               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1139   00143A  6E50               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1140   00143C  6E51               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1141   00143E  6E52               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1142                           
  1143                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1232:    *fmt = cp+1;
  1144   001440  0E01               	movlw	1
  1145   001442  2453               	addwf	vfpfcnvrt@cp^0,w,c
  1146   001444  6E49               	movwf	??_vfpfcnvrt^0,c
  1147   001446  0E00               	movlw	0
  1148   001448  2054               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1149   00144A  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1150   00144C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1151   001450  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1152   001454  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  1153   001458  C04A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1154   00145C                     
  1155                           ; BSR set to: 0
  1156                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1233:    return (void) dtoa(fp, convarg.ll);;	R
      +                          eturn value of _vfpfcnvrt is never used
  1157   00145C  C043  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  1158   001460  C044  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1159   001464  C04B  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  1160   001468  C04C  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1161   00146C  C04D  F024         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1162   001470  C04E  F025         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1163   001474  C04F  F026         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1164   001478  C050  F027         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1165   00147C  C051  F028         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1166   001480  C052  F029         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1167   001484  EC09  F007         	call	_dtoa	;wreg free
  1168   001488  EF63  F00A         	goto	l1102
  1169   00148C                     l2366:
  1170                           
  1171                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1509:         ++*fmt;
  1172   00148C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1173   001490  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1174   001494  2ADE               	incf	postinc2,f,c
  1175   001496  0E00               	movlw	0
  1176   001498  22DD               	addwfc	postdec2,f,c
  1177   00149A  EF63  F00A         	goto	l1102
  1178   00149E                     l2370:
  1179                           
  1180                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1514:     fputc((int)(*fmt)[0], fp);
  1181   00149E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1182   0014A2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1183   0014A6  CFDE FFF6          	movff	postinc2,tblptrl
  1184   0014AA  CFDD FFF7          	movff	postdec2,tblptrh
  1185   0014AE                     	if	0	;tblptru may be non-zero
  1186   0014AE                     	endif
  1187   0014AE                     	if	0	;tblptru may be non-zero
  1188   0014AE                     	endif
  1189   0014AE  0008               	tblrd		*
  1190   0014B0  50F5               	movf	tablat,w,c
  1191   0014B2  6E05               	movwf	fputc@c^0,c
  1192   0014B4  6A06               	clrf	(fputc@c+1)^0,c
  1193   0014B6  C043  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1194   0014BA  C044  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1195   0014BE  ECF1  F00A         	call	_fputc	;wreg free
  1196   0014C2  EF46  F00A         	goto	l2366
  1197   0014C6                     l1102:
  1198   0014C6  0012               	return		;funcret
  1199   0014C8                     __end_of_vfpfcnvrt:
  1200                           	callstack 0
  1201                           
  1202 ;; *************** function _dtoa *****************
  1203 ;; Defined at:
  1204 ;;		line 443 in file "D:\ECM\pic\sources\c99\common\doprnt.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  1207 ;;		 -> sprintf@f(11), 
  1208 ;;  d               8   33[COMRAM] long long 
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;  n               8   55[COMRAM] long long 
  1211 ;;  i               2   64[COMRAM] int 
  1212 ;;  w               2   53[COMRAM] int 
  1213 ;;  p               2   51[COMRAM] int 
  1214 ;;  s               1   63[COMRAM] unsigned char 
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      void 
  1217 ;; Registers used:
  1218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1224 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1225 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1226 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1227 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1228 ;;Total ram usage:       35 bytes
  1229 ;; Hardware stack levels used: 1
  1230 ;; Hardware stack levels required when called: 6
  1231 ;; This function calls:
  1232 ;;		___aodiv
  1233 ;;		___aomod
  1234 ;;		_abs
  1235 ;;		_pad
  1236 ;; This function is called by:
  1237 ;;		_vfpfcnvrt
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           	psect	text4
  1242   000E12                     __ptext4:
  1243                           	callstack 0
  1244   000E12                     _dtoa:
  1245                           	callstack 21
  1246   000E12                     
  1247                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 443: static void dtoa(FILE *fp, long long d);D:
      +                          \ECM\pic\sources\c99\common\doprnt.c: 444: {;D:\ECM\pic\sources\c99\common\doprnt.c: 445
      +                          :  char s;;D:\ECM\pic\sources\c99\common\doprnt.c: 446:     int i, p, w;;D:\ECM\pic\sour
      +                          ces\c99\common\doprnt.c: 447:     long long n;;D:\ECM\pic\sources\c99\common\doprnt.c: 4
      +                          50:     n = d;
  1248   000E12  C022  F038         	movff	dtoa@d,dtoa@n
  1249   000E16  C023  F039         	movff	dtoa@d+1,dtoa@n+1
  1250   000E1A  C024  F03A         	movff	dtoa@d+2,dtoa@n+2
  1251   000E1E  C025  F03B         	movff	dtoa@d+3,dtoa@n+3
  1252   000E22  C026  F03C         	movff	dtoa@d+4,dtoa@n+4
  1253   000E26  C027  F03D         	movff	dtoa@d+5,dtoa@n+5
  1254   000E2A  C028  F03E         	movff	dtoa@d+6,dtoa@n+6
  1255   000E2E  C029  F03F         	movff	dtoa@d+7,dtoa@n+7
  1256   000E32                     
  1257                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 451:     s = n < 0 ? 1 : 0;
  1258   000E32  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  1259   000E34  EF1E  F007         	goto	u1361
  1260   000E38  EF21  F007         	goto	u1360
  1261   000E3C                     u1361:
  1262   000E3C  0E01               	movlw	1
  1263   000E3E  EF22  F007         	goto	u1370
  1264   000E42                     u1360:
  1265   000E42  0E00               	movlw	0
  1266   000E44                     u1370:
  1267   000E44  6E40               	movwf	dtoa@s^0,c
  1268   000E46                     
  1269                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1270   000E46  5040               	movf	dtoa@s^0,w,c
  1271   000E48  B4D8               	btfsc	status,2,c
  1272   000E4A  EF29  F007         	goto	u1381
  1273   000E4E  EF2B  F007         	goto	u1380
  1274   000E52                     u1381:
  1275   000E52  EF3B  F007         	goto	l2302
  1276   000E56                     u1380:
  1277   000E56                     
  1278                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 453:         n = -n;
  1279   000E56  1E3F               	comf	(dtoa@n+7)^0,f,c
  1280   000E58  1E3E               	comf	(dtoa@n+6)^0,f,c
  1281   000E5A  1E3D               	comf	(dtoa@n+5)^0,f,c
  1282   000E5C  1E3C               	comf	(dtoa@n+4)^0,f,c
  1283   000E5E  1E3B               	comf	(dtoa@n+3)^0,f,c
  1284   000E60  1E3A               	comf	(dtoa@n+2)^0,f,c
  1285   000E62  1E39               	comf	(dtoa@n+1)^0,f,c
  1286   000E64  6C38               	negf	dtoa@n^0,c
  1287   000E66  0E00               	movlw	0
  1288   000E68  2239               	addwfc	(dtoa@n+1)^0,f,c
  1289   000E6A  223A               	addwfc	(dtoa@n+2)^0,f,c
  1290   000E6C  223B               	addwfc	(dtoa@n+3)^0,f,c
  1291   000E6E  223C               	addwfc	(dtoa@n+4)^0,f,c
  1292   000E70  223D               	addwfc	(dtoa@n+5)^0,f,c
  1293   000E72  223E               	addwfc	(dtoa@n+6)^0,f,c
  1294   000E74  223F               	addwfc	(dtoa@n+7)^0,f,c
  1295   000E76                     l2302:
  1296                           
  1297                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 462:     p = (0 < prec) ? prec : 1;
  1298   000E76  0100               	movlb	0	; () banked
  1299   000E78  BFDA               	btfsc	(_prec+1)& (0+255),7,b
  1300   000E7A  EF49  F007         	goto	u1390
  1301   000E7E  51DA               	movf	(_prec+1)& (0+255),w,b
  1302   000E80  E106               	bnz	u1391
  1303   000E82  05D9               	decf	_prec& (0+255),w,b
  1304   000E84  B0D8               	btfsc	status,0,c
  1305   000E86  EF47  F007         	goto	u1391
  1306   000E8A  EF49  F007         	goto	u1390
  1307   000E8E                     u1391:
  1308   000E8E  EF4F  F007         	goto	l1081
  1309   000E92                     u1390:
  1310   000E92                     
  1311                           ; BSR set to: 0
  1312   000E92  0E00               	movlw	0
  1313   000E94  6E35               	movwf	(dtoa@p+1)^0,c
  1314   000E96  0E01               	movlw	1
  1315   000E98  6E34               	movwf	dtoa@p^0,c
  1316   000E9A  EF53  F007         	goto	l1083
  1317   000E9E                     l1081:
  1318                           
  1319                           ; BSR set to: 0
  1320   000E9E  C0D9  F034         	movff	_prec,dtoa@p
  1321   000EA2  C0DA  F035         	movff	_prec+1,dtoa@p+1
  1322   000EA6                     l1083:
  1323                           
  1324                           ; BSR set to: 0
  1325                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 463:     w = width;
  1326   000EA6  C0D7  F036         	movff	_width,dtoa@w
  1327   000EAA  C0D8  F037         	movff	_width+1,dtoa@w+1
  1328   000EAE                     
  1329                           ; BSR set to: 0
  1330                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 464:     if (s
  1331   000EAE  5040               	movf	dtoa@s^0,w,c
  1332   000EB0  B4D8               	btfsc	status,2,c
  1333   000EB2  EF5D  F007         	goto	u1401
  1334   000EB6  EF5F  F007         	goto	u1400
  1335   000EBA                     u1401:
  1336   000EBA  EF76  F007         	goto	l1084
  1337   000EBE                     u1400:
  1338   000EBE                     
  1339                           ; BSR set to: 0
  1340                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 468:     ) {;D:\ECM\pic\sources\c99\common\dopr
      +                          nt.c: 469:         --w;
  1341   000EBE  0636               	decf	dtoa@w^0,f,c
  1342   000EC0  A0D8               	btfss	status,0,c
  1343   000EC2  0637               	decf	(dtoa@w+1)^0,f,c
  1344   000EC4                     
  1345                           ; BSR set to: 0
  1346                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-' : '+';
  1347   000EC4  5040               	movf	dtoa@s^0,w,c
  1348   000EC6  A4D8               	btfss	status,2,c
  1349   000EC8  EF68  F007         	goto	u1411
  1350   000ECC  EF6A  F007         	goto	u1410
  1351   000ED0                     u1411:
  1352   000ED0  EF70  F007         	goto	l2314
  1353   000ED4                     u1410:
  1354   000ED4                     
  1355                           ; BSR set to: 0
  1356   000ED4  0E00               	movlw	0
  1357   000ED6  6E33               	movwf	(_dtoa$2146+1)^0,c
  1358   000ED8  0E2B               	movlw	43
  1359   000EDA  6E32               	movwf	_dtoa$2146^0,c
  1360   000EDC  EF74  F007         	goto	l2316
  1361   000EE0                     l2314:
  1362                           
  1363                           ; BSR set to: 0
  1364   000EE0  0E00               	movlw	0
  1365   000EE2  6E33               	movwf	(_dtoa$2146+1)^0,c
  1366   000EE4  0E2D               	movlw	45
  1367   000EE6  6E32               	movwf	_dtoa$2146^0,c
  1368   000EE8                     l2316:
  1369                           
  1370                           ; BSR set to: 0
  1371   000EE8  C032  F040         	movff	_dtoa$2146,dtoa@s
  1372   000EEC                     l1084:
  1373                           
  1374                           ; BSR set to: 0
  1375                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 480:     i = sizeof(dbuf) - 1;
  1376   000EEC  0E00               	movlw	0
  1377   000EEE  6E42               	movwf	(dtoa@i+1)^0,c
  1378   000EF0  0E1F               	movlw	31
  1379   000EF2  6E41               	movwf	dtoa@i^0,c
  1380   000EF4                     
  1381                           ; BSR set to: 0
  1382                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] = '\0';
  1383   000EF4  0E00               	movlw	0
  1384   000EF6  6FFB               	movwf	(_dbuf+31)& (0+255),b
  1385                           
  1386                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 482:     while (!(i < 1) && (n || (0 < p)
  1387   000EF8  EFFA  F007         	goto	l2330
  1388   000EFC                     l2320:
  1389                           
  1390                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 486:     )) {;D:\ECM\pic\sources\c99\common\dop
      +                          rnt.c: 487:         --i;
  1391   000EFC  0641               	decf	dtoa@i^0,f,c
  1392   000EFE  A0D8               	btfss	status,0,c
  1393   000F00  0642               	decf	(dtoa@i+1)^0,f,c
  1394   000F02                     
  1395                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 488:         dbuf[i] = (char)((int)'0' + abs(n 
      +                          % 10));
  1396   000F02  0EDC               	movlw	low _dbuf
  1397   000F04  2441               	addwf	dtoa@i^0,w,c
  1398   000F06  6ED9               	movwf	fsr2l,c
  1399   000F08  0E00               	movlw	high _dbuf
  1400   000F0A  2042               	addwfc	(dtoa@i+1)^0,w,c
  1401   000F0C  6EDA               	movwf	fsr2h,c
  1402   000F0E  C038  F005         	movff	dtoa@n,___aomod@dividend
  1403   000F12  C039  F006         	movff	dtoa@n+1,___aomod@dividend+1
  1404   000F16  C03A  F007         	movff	dtoa@n+2,___aomod@dividend+2
  1405   000F1A  C03B  F008         	movff	dtoa@n+3,___aomod@dividend+3
  1406   000F1E  C03C  F009         	movff	dtoa@n+4,___aomod@dividend+4
  1407   000F22  C03D  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  1408   000F26  C03E  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  1409   000F2A  C03F  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  1410   000F2E  0E0A               	movlw	10
  1411   000F30  6E0D               	movwf	___aomod@divisor^0,c
  1412   000F32  0E00               	movlw	0
  1413   000F34  6E0E               	movwf	(___aomod@divisor+1)^0,c
  1414   000F36  0E00               	movlw	0
  1415   000F38  6E0F               	movwf	(___aomod@divisor+2)^0,c
  1416   000F3A  0E00               	movlw	0
  1417   000F3C  6E10               	movwf	(___aomod@divisor+3)^0,c
  1418   000F3E  0E00               	movlw	0
  1419   000F40  6E11               	movwf	(___aomod@divisor+4)^0,c
  1420   000F42  0E00               	movlw	0
  1421   000F44  6E12               	movwf	(___aomod@divisor+5)^0,c
  1422   000F46  0E00               	movlw	0
  1423   000F48  6E13               	movwf	(___aomod@divisor+6)^0,c
  1424   000F4A  0E00               	movlw	0
  1425   000F4C  6E14               	movwf	(___aomod@divisor+7)^0,c
  1426   000F4E  EC0B  F009         	call	___aomod	;wreg free
  1427   000F52  C005  F02A         	movff	?___aomod,??_dtoa
  1428   000F56  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  1429   000F5A  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  1430   000F5E  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  1431   000F62  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  1432   000F66  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  1433   000F6A  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  1434   000F6E  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  1435   000F72  C02A  F017         	movff	??_dtoa,abs@a
  1436   000F76  C02B  F018         	movff	??_dtoa+1,abs@a+1
  1437   000F7A  EC0F  F00D         	call	_abs	;wreg free
  1438   000F7E  5017               	movf	?_abs^0,w,c
  1439   000F80  0F30               	addlw	48
  1440   000F82  6EDF               	movwf	indf2,c
  1441   000F84                     
  1442                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 489:         --p;
  1443   000F84  0634               	decf	dtoa@p^0,f,c
  1444   000F86  A0D8               	btfss	status,0,c
  1445   000F88  0635               	decf	(dtoa@p+1)^0,f,c
  1446   000F8A                     
  1447                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 490:         --w;
  1448   000F8A  0636               	decf	dtoa@w^0,f,c
  1449   000F8C  A0D8               	btfss	status,0,c
  1450   000F8E  0637               	decf	(dtoa@w+1)^0,f,c
  1451   000F90                     
  1452                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 491:         n = n / 10;
  1453   000F90  C038  F005         	movff	dtoa@n,___aodiv@dividend
  1454   000F94  C039  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  1455   000F98  C03A  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  1456   000F9C  C03B  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  1457   000FA0  C03C  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  1458   000FA4  C03D  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  1459   000FA8  C03E  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  1460   000FAC  C03F  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  1461   000FB0  0E0A               	movlw	10
  1462   000FB2  6E0D               	movwf	___aodiv@divisor^0,c
  1463   000FB4  0E00               	movlw	0
  1464   000FB6  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  1465   000FB8  0E00               	movlw	0
  1466   000FBA  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  1467   000FBC  0E00               	movlw	0
  1468   000FBE  6E10               	movwf	(___aodiv@divisor+3)^0,c
  1469   000FC0  0E00               	movlw	0
  1470   000FC2  6E11               	movwf	(___aodiv@divisor+4)^0,c
  1471   000FC4  0E00               	movlw	0
  1472   000FC6  6E12               	movwf	(___aodiv@divisor+5)^0,c
  1473   000FC8  0E00               	movlw	0
  1474   000FCA  6E13               	movwf	(___aodiv@divisor+6)^0,c
  1475   000FCC  0E00               	movlw	0
  1476   000FCE  6E14               	movwf	(___aodiv@divisor+7)^0,c
  1477   000FD0  EC47  F008         	call	___aodiv	;wreg free
  1478   000FD4  C005  F038         	movff	?___aodiv,dtoa@n
  1479   000FD8  C006  F039         	movff	?___aodiv+1,dtoa@n+1
  1480   000FDC  C007  F03A         	movff	?___aodiv+2,dtoa@n+2
  1481   000FE0  C008  F03B         	movff	?___aodiv+3,dtoa@n+3
  1482   000FE4  C009  F03C         	movff	?___aodiv+4,dtoa@n+4
  1483   000FE8  C00A  F03D         	movff	?___aodiv+5,dtoa@n+5
  1484   000FEC  C00B  F03E         	movff	?___aodiv+6,dtoa@n+6
  1485   000FF0  C00C  F03F         	movff	?___aodiv+7,dtoa@n+7
  1486   000FF4                     l2330:
  1487                           
  1488                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 482:     while (!(i < 1) && (n || (0 < p)
  1489   000FF4  BE42               	btfsc	(dtoa@i+1)^0,7,c
  1490   000FF6  EF05  F008         	goto	u1421
  1491   000FFA  5042               	movf	(dtoa@i+1)^0,w,c
  1492   000FFC  E108               	bnz	u1420
  1493   000FFE  0441               	decf	dtoa@i^0,w,c
  1494   001000  A0D8               	btfss	status,0,c
  1495   001002  EF05  F008         	goto	u1421
  1496   001006  EF07  F008         	goto	u1420
  1497   00100A                     u1421:
  1498   00100A  EF23  F008         	goto	l2336
  1499   00100E                     u1420:
  1500   00100E  5038               	movf	dtoa@n^0,w,c
  1501   001010  1039               	iorwf	(dtoa@n+1)^0,w,c
  1502   001012  103A               	iorwf	(dtoa@n+2)^0,w,c
  1503   001014  103B               	iorwf	(dtoa@n+3)^0,w,c
  1504   001016  103C               	iorwf	(dtoa@n+4)^0,w,c
  1505   001018  103D               	iorwf	(dtoa@n+5)^0,w,c
  1506   00101A  103E               	iorwf	(dtoa@n+6)^0,w,c
  1507   00101C  103F               	iorwf	(dtoa@n+7)^0,w,c
  1508   00101E  A4D8               	btfss	status,2,c
  1509   001020  EF14  F008         	goto	u1431
  1510   001024  EF16  F008         	goto	u1430
  1511   001028                     u1431:
  1512   001028  EF7E  F007         	goto	l2320
  1513   00102C                     u1430:
  1514   00102C  BE35               	btfsc	(dtoa@p+1)^0,7,c
  1515   00102E  EF23  F008         	goto	u1440
  1516   001032  5035               	movf	(dtoa@p+1)^0,w,c
  1517   001034  E106               	bnz	u1441
  1518   001036  0434               	decf	dtoa@p^0,w,c
  1519   001038  B0D8               	btfsc	status,0,c
  1520   00103A  EF21  F008         	goto	u1441
  1521   00103E  EF23  F008         	goto	u1440
  1522   001042                     u1441:
  1523   001042  EF7E  F007         	goto	l2320
  1524   001046                     u1440:
  1525   001046                     l2336:
  1526                           
  1527                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 495:     if (s != 0) {
  1528   001046  5040               	movf	dtoa@s^0,w,c
  1529   001048  B4D8               	btfsc	status,2,c
  1530   00104A  EF29  F008         	goto	u1451
  1531   00104E  EF2B  F008         	goto	u1450
  1532   001052                     u1451:
  1533   001052  EF36  F008         	goto	l2342
  1534   001056                     u1450:
  1535   001056                     
  1536                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 496:         --i;
  1537   001056  0641               	decf	dtoa@i^0,f,c
  1538   001058  A0D8               	btfss	status,0,c
  1539   00105A  0642               	decf	(dtoa@i+1)^0,f,c
  1540   00105C                     
  1541                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 497:         dbuf[i] = s;
  1542   00105C  0EDC               	movlw	low _dbuf
  1543   00105E  2441               	addwf	dtoa@i^0,w,c
  1544   001060  6ED9               	movwf	fsr2l,c
  1545   001062  0E00               	movlw	high _dbuf
  1546   001064  2042               	addwfc	(dtoa@i+1)^0,w,c
  1547   001066  6EDA               	movwf	fsr2h,c
  1548   001068  C040  FFDF         	movff	dtoa@s,indf2
  1549   00106C                     l2342:
  1550                           
  1551                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 501:     return (void) pad(fp, &dbuf[i], w);
  1552   00106C  C020  F015         	movff	dtoa@fp,pad@fp
  1553   001070  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  1554   001074  0EDC               	movlw	low _dbuf
  1555   001076  2441               	addwf	dtoa@i^0,w,c
  1556   001078  6E17               	movwf	pad@buf^0,c
  1557   00107A  0E00               	movlw	high _dbuf
  1558   00107C  2042               	addwfc	(dtoa@i+1)^0,w,c
  1559   00107E  6E18               	movwf	(pad@buf+1)^0,c
  1560   001080  C036  F019         	movff	dtoa@w,pad@p
  1561   001084  C037  F01A         	movff	dtoa@w+1,pad@p+1
  1562   001088  EC9E  F00B         	call	_pad	;wreg free
  1563   00108C  0012               	return		;funcret
  1564   00108E                     __end_of_dtoa:
  1565                           	callstack 0
  1566                           
  1567 ;; *************** function _pad *****************
  1568 ;; Defined at:
  1569 ;;		line 133 in file "D:\ECM\pic\sources\c99\common\doprnt.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  1572 ;;		 -> sprintf@f(11), 
  1573 ;;  buf             2   22[COMRAM] PTR unsigned char 
  1574 ;;		 -> dbuf(32), 
  1575 ;;  p               2   24[COMRAM] int 
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;  w               2   29[COMRAM] int 
  1578 ;;  i               2   27[COMRAM] int 
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      void 
  1581 ;; Registers used:
  1582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1588 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1589 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1590 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1591 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1592 ;;Total ram usage:       11 bytes
  1593 ;; Hardware stack levels used: 1
  1594 ;; Hardware stack levels required when called: 5
  1595 ;; This function calls:
  1596 ;;		_fputc
  1597 ;;		_fputs
  1598 ;; This function is called by:
  1599 ;;		_dtoa
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           	psect	text5
  1604   00173C                     __ptext5:
  1605                           	callstack 0
  1606   00173C                     _pad:
  1607                           	callstack 21
  1608   00173C                     
  1609                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 133: static void pad(FILE *fp, char *buf, int p
      +                          );D:\ECM\pic\sources\c99\common\doprnt.c: 134: {;D:\ECM\pic\sources\c99\common\doprnt.c:
      +                           135:     int i, w;;D:\ECM\pic\sources\c99\common\doprnt.c: 145:     w = (p < 0) ? 0 : p
      +                          ;
  1610   00173C  BE1A               	btfsc	(pad@p+1)^0,7,c
  1611   00173E  EFA3  F00B         	goto	u1331
  1612   001742  EFA5  F00B         	goto	u1330
  1613   001746                     u1331:
  1614   001746  EFAB  F00B         	goto	l2280
  1615   00174A                     u1330:
  1616   00174A  C019  F01E         	movff	pad@p,pad@w
  1617   00174E  C01A  F01F         	movff	pad@p+1,pad@w+1
  1618   001752  EFAF  F00B         	goto	l1072
  1619   001756                     l2280:
  1620   001756  0E00               	movlw	0
  1621   001758  6E1F               	movwf	(pad@w+1)^0,c
  1622   00175A  0E00               	movlw	0
  1623   00175C  6E1E               	movwf	pad@w^0,c
  1624   00175E                     l1072:
  1625                           
  1626                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1627   00175E  0E00               	movlw	0
  1628   001760  6E1D               	movwf	(pad@i+1)^0,c
  1629   001762  0E00               	movlw	0
  1630   001764  6E1C               	movwf	pad@i^0,c
  1631                           
  1632                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 147:     while (i < w) {
  1633   001766  EFC1  F00B         	goto	l2286
  1634   00176A                     l2282:
  1635                           
  1636                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 148:         fputc(' ', fp);
  1637   00176A  0E00               	movlw	0
  1638   00176C  6E06               	movwf	(fputc@c+1)^0,c
  1639   00176E  0E20               	movlw	32
  1640   001770  6E05               	movwf	fputc@c^0,c
  1641   001772  C015  F007         	movff	pad@fp,fputc@fp
  1642   001776  C016  F008         	movff	pad@fp+1,fputc@fp+1
  1643   00177A  ECF1  F00A         	call	_fputc	;wreg free
  1644   00177E                     
  1645                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1646   00177E  4A1C               	infsnz	pad@i^0,f,c
  1647   001780  2A1D               	incf	(pad@i+1)^0,f,c
  1648   001782                     l2286:
  1649                           
  1650                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 147:     while (i < w) {
  1651   001782  501E               	movf	pad@w^0,w,c
  1652   001784  5C1C               	subwf	pad@i^0,w,c
  1653   001786  501D               	movf	(pad@i+1)^0,w,c
  1654   001788  0A80               	xorlw	128
  1655   00178A  6E1B               	movwf	??_pad^0,c
  1656   00178C  501F               	movf	(pad@w+1)^0,w,c
  1657   00178E  0A80               	xorlw	128
  1658   001790  581B               	subwfb	??_pad^0,w,c
  1659   001792  A0D8               	btfss	status,0,c
  1660   001794  EFCE  F00B         	goto	u1341
  1661   001798  EFD0  F00B         	goto	u1340
  1662   00179C                     u1341:
  1663   00179C  EFB5  F00B         	goto	l2282
  1664   0017A0                     u1340:
  1665   0017A0                     
  1666                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 156:         fputs((const char *)buf, fp);
  1667   0017A0  C017  F00E         	movff	pad@buf,fputs@s
  1668   0017A4  C018  F00F         	movff	pad@buf+1,fputs@s+1
  1669   0017A8  C015  F010         	movff	pad@fp,fputs@fp
  1670   0017AC  C016  F011         	movff	pad@fp+1,fputs@fp+1
  1671   0017B0  ECCC  F00C         	call	_fputs	;wreg free
  1672   0017B4  0012               	return		;funcret
  1673   0017B6                     __end_of_pad:
  1674                           	callstack 0
  1675                           
  1676 ;; *************** function _fputs *****************
  1677 ;; Defined at:
  1678 ;;		line 8 in file "D:\ECM\pic\sources\c99\common\nf_fputs.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;  s               2   13[COMRAM] PTR const unsigned char 
  1681 ;;		 -> dbuf(32), 
  1682 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1683 ;;		 -> sprintf@f(11), 
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;  i               2   18[COMRAM] int 
  1686 ;;  c               1   17[COMRAM] unsigned char 
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  2   13[COMRAM] int 
  1689 ;; Registers used:
  1690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1696 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1697 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1699 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1700 ;;Total ram usage:        7 bytes
  1701 ;; Hardware stack levels used: 1
  1702 ;; Hardware stack levels required when called: 4
  1703 ;; This function calls:
  1704 ;;		_fputc
  1705 ;; This function is called by:
  1706 ;;		_pad
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           	psect	text6
  1711   001998                     __ptext6:
  1712                           	callstack 0
  1713   001998                     _fputs:
  1714                           	callstack 21
  1715   001998  0E00               	movlw	0
  1716   00199A  6E14               	movwf	(fputs@i+1)^0,c
  1717   00199C  0E00               	movlw	0
  1718   00199E  6E13               	movwf	fputs@i^0,c
  1719   0019A0  EFDD  F00C         	goto	l2194
  1720   0019A4                     l2190:
  1721   0019A4  C012  F005         	movff	fputs@c,fputc@c
  1722   0019A8  6A06               	clrf	(fputc@c+1)^0,c
  1723   0019AA  C010  F007         	movff	fputs@fp,fputc@fp
  1724   0019AE  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  1725   0019B2  ECF1  F00A         	call	_fputc	;wreg free
  1726   0019B6  4A13               	infsnz	fputs@i^0,f,c
  1727   0019B8  2A14               	incf	(fputs@i+1)^0,f,c
  1728   0019BA                     l2194:
  1729   0019BA  5013               	movf	fputs@i^0,w,c
  1730   0019BC  240E               	addwf	fputs@s^0,w,c
  1731   0019BE  6ED9               	movwf	fsr2l,c
  1732   0019C0  5014               	movf	(fputs@i+1)^0,w,c
  1733   0019C2  200F               	addwfc	(fputs@s+1)^0,w,c
  1734   0019C4  6EDA               	movwf	fsr2h,c
  1735   0019C6  50DF               	movf	indf2,w,c
  1736   0019C8  6E12               	movwf	fputs@c^0,c
  1737   0019CA  5012               	movf	fputs@c^0,w,c
  1738   0019CC  A4D8               	btfss	status,2,c
  1739   0019CE  EFEB  F00C         	goto	u1191
  1740   0019D2  EFED  F00C         	goto	u1190
  1741   0019D6                     u1191:
  1742   0019D6  EFD2  F00C         	goto	l2190
  1743   0019DA                     u1190:
  1744   0019DA  0012               	return		;funcret
  1745   0019DC                     __end_of_fputs:
  1746                           	callstack 0
  1747                           
  1748 ;; *************** function _fputc *****************
  1749 ;; Defined at:
  1750 ;;		line 8 in file "D:\ECM\pic\sources\c99\common\nf_fputc.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;  c               2    4[COMRAM] int 
  1753 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  1754 ;;		 -> sprintf@f(11), 
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;		None
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  2    4[COMRAM] int 
  1759 ;; Registers used:
  1760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1766 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1768 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1769 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1770 ;;Total ram usage:        9 bytes
  1771 ;; Hardware stack levels used: 1
  1772 ;; Hardware stack levels required when called: 3
  1773 ;; This function calls:
  1774 ;;		_putch
  1775 ;; This function is called by:
  1776 ;;		_pad
  1777 ;;		_vfpfcnvrt
  1778 ;;		_fputs
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           	psect	text7
  1783   0015E2                     __ptext7:
  1784                           	callstack 0
  1785   0015E2                     _fputc:
  1786                           	callstack 24
  1787   0015E2  5007               	movf	fputc@fp^0,w,c
  1788   0015E4  1008               	iorwf	(fputc@fp+1)^0,w,c
  1789   0015E6  B4D8               	btfsc	status,2,c
  1790   0015E8  EFF8  F00A         	goto	u1151
  1791   0015EC  EFFA  F00A         	goto	u1150
  1792   0015F0                     u1151:
  1793   0015F0  EF03  F00B         	goto	l2178
  1794   0015F4                     u1150:
  1795   0015F4  5007               	movf	fputc@fp^0,w,c
  1796   0015F6  1008               	iorwf	(fputc@fp+1)^0,w,c
  1797   0015F8  A4D8               	btfss	status,2,c
  1798   0015FA  EF01  F00B         	goto	u1161
  1799   0015FE  EF03  F00B         	goto	u1160
  1800   001602                     u1161:
  1801   001602  EF08  F00B         	goto	l2180
  1802   001606                     u1160:
  1803   001606                     l2178:
  1804   001606  5005               	movf	fputc@c^0,w,c
  1805   001608  EC21  F00E         	call	_putch
  1806   00160C  EF55  F00B         	goto	l1127
  1807   001610                     l2180:
  1808   001610  EE20 F009          	lfsr	2,9
  1809   001614  5007               	movf	fputc@fp^0,w,c
  1810   001616  26D9               	addwf	fsr2l,f,c
  1811   001618  5008               	movf	(fputc@fp+1)^0,w,c
  1812   00161A  22DA               	addwfc	fsr2h,f,c
  1813   00161C  50DE               	movf	postinc2,w,c
  1814   00161E  10DE               	iorwf	postinc2,w,c
  1815   001620  B4D8               	btfsc	status,2,c
  1816   001622  EF15  F00B         	goto	u1171
  1817   001626  EF17  F00B         	goto	u1170
  1818   00162A                     u1171:
  1819   00162A  EF32  F00B         	goto	l2184
  1820   00162E                     u1170:
  1821   00162E  EE20 F009          	lfsr	2,9
  1822   001632  5007               	movf	fputc@fp^0,w,c
  1823   001634  26D9               	addwf	fsr2l,f,c
  1824   001636  5008               	movf	(fputc@fp+1)^0,w,c
  1825   001638  22DA               	addwfc	fsr2h,f,c
  1826   00163A  EE10 F003          	lfsr	1,3
  1827   00163E  5007               	movf	fputc@fp^0,w,c
  1828   001640  26E1               	addwf	fsr1l,f,c
  1829   001642  5008               	movf	(fputc@fp+1)^0,w,c
  1830   001644  22E2               	addwfc	fsr1h,f,c
  1831   001646  50DE               	movf	postinc2,w,c
  1832   001648  5CE6               	subwf	postinc1,w,c
  1833   00164A  50E6               	movf	postinc1,w,c
  1834   00164C  0A80               	xorlw	128
  1835   00164E  6E0D               	movwf	(??_fputc+4)^0,c
  1836   001650  50DE               	movf	postinc2,w,c
  1837   001652  0A80               	xorlw	128
  1838   001654  580D               	subwfb	(??_fputc+4)^0,w,c
  1839   001656  B0D8               	btfsc	status,0,c
  1840   001658  EF30  F00B         	goto	u1181
  1841   00165C  EF32  F00B         	goto	u1180
  1842   001660                     u1181:
  1843   001660  EF55  F00B         	goto	l1127
  1844   001664                     u1180:
  1845   001664                     l2184:
  1846   001664  EE20 F003          	lfsr	2,3
  1847   001668  5007               	movf	fputc@fp^0,w,c
  1848   00166A  26D9               	addwf	fsr2l,f,c
  1849   00166C  5008               	movf	(fputc@fp+1)^0,w,c
  1850   00166E  22DA               	addwfc	fsr2h,f,c
  1851   001670  CFDE F009          	movff	postinc2,??_fputc
  1852   001674  CFDD F00A          	movff	postdec2,??_fputc+1
  1853   001678  C007  FFD9         	movff	fputc@fp,fsr2l
  1854   00167C  C008  FFDA         	movff	fputc@fp+1,fsr2h
  1855   001680  CFDE F00B          	movff	postinc2,??_fputc+2
  1856   001684  CFDD F00C          	movff	postdec2,??_fputc+3
  1857   001688  5009               	movf	??_fputc^0,w,c
  1858   00168A  240B               	addwf	(??_fputc+2)^0,w,c
  1859   00168C  6ED9               	movwf	fsr2l,c
  1860   00168E  500A               	movf	(??_fputc+1)^0,w,c
  1861   001690  200C               	addwfc	(??_fputc+3)^0,w,c
  1862   001692  6EDA               	movwf	fsr2h,c
  1863   001694  C005  FFDF         	movff	fputc@c,indf2
  1864   001698  EE20 F003          	lfsr	2,3
  1865   00169C  5007               	movf	fputc@fp^0,w,c
  1866   00169E  26D9               	addwf	fsr2l,f,c
  1867   0016A0  5008               	movf	(fputc@fp+1)^0,w,c
  1868   0016A2  22DA               	addwfc	fsr2h,f,c
  1869   0016A4  2ADE               	incf	postinc2,f,c
  1870   0016A6  0E00               	movlw	0
  1871   0016A8  22DD               	addwfc	postdec2,f,c
  1872   0016AA                     l1127:
  1873   0016AA  0012               	return		;funcret
  1874   0016AC                     __end_of_fputc:
  1875                           	callstack 0
  1876                           
  1877 ;; *************** function _putch *****************
  1878 ;; Defined at:
  1879 ;;		line 7 in file "D:\ECM\pic\sources\c99\common\putch.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;  c               1    wreg     unsigned char 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  c               1    0[COMRAM] unsigned char 
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      void 
  1886 ;; Registers used:
  1887 ;;		wreg
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1897 ;;Total ram usage:        0 bytes
  1898 ;; Hardware stack levels used: 1
  1899 ;; Hardware stack levels required when called: 2
  1900 ;; This function calls:
  1901 ;;		Nothing
  1902 ;; This function is called by:
  1903 ;;		_fputc
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907                           	psect	text8
  1908   001C42                     __ptext8:
  1909                           	callstack 0
  1910   001C42                     _putch:
  1911                           	callstack 24
  1912   001C42  0012               	return		;funcret
  1913   001C44                     __end_of_putch:
  1914                           	callstack 0
  1915                           
  1916 ;; *************** function _abs *****************
  1917 ;; Defined at:
  1918 ;;		line 1 in file "D:\ECM\pic\sources\c99\common\abs.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;  a               2   22[COMRAM] int 
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;		None
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  2   22[COMRAM] int 
  1925 ;; Registers used:
  1926 ;;		wreg, status,2, status,0
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1932 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1934 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1935 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1936 ;;Total ram usage:        4 bytes
  1937 ;; Hardware stack levels used: 1
  1938 ;; Hardware stack levels required when called: 2
  1939 ;; This function calls:
  1940 ;;		Nothing
  1941 ;; This function is called by:
  1942 ;;		_dtoa
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           	psect	text9
  1947   001A1E                     __ptext9:
  1948                           	callstack 0
  1949   001A1E                     _abs:
  1950                           	callstack 24
  1951   001A1E  BE18               	btfsc	(abs@a+1)^0,7,c
  1952   001A20  EF1C  F00D         	goto	u1350
  1953   001A24  5018               	movf	(abs@a+1)^0,w,c
  1954   001A26  E106               	bnz	u1351
  1955   001A28  0417               	decf	abs@a^0,w,c
  1956   001A2A  B0D8               	btfsc	status,0,c
  1957   001A2C  EF1A  F00D         	goto	u1351
  1958   001A30  EF1C  F00D         	goto	u1350
  1959   001A34                     u1351:
  1960   001A34  EF2A  F00D         	goto	l1112
  1961   001A38                     u1350:
  1962   001A38  C017  F019         	movff	abs@a,??_abs
  1963   001A3C  C018  F01A         	movff	abs@a+1,??_abs+1
  1964   001A40  1E19               	comf	??_abs^0,f,c
  1965   001A42  1E1A               	comf	(??_abs+1)^0,f,c
  1966   001A44  4A19               	infsnz	??_abs^0,f,c
  1967   001A46  2A1A               	incf	(??_abs+1)^0,f,c
  1968   001A48  C019  F017         	movff	??_abs,?_abs
  1969   001A4C  C01A  F018         	movff	??_abs+1,?_abs+1
  1970   001A50  EF2E  F00D         	goto	l1115
  1971   001A54                     l1112:
  1972   001A54  C017  F017         	movff	abs@a,?_abs
  1973   001A58  C018  F018         	movff	abs@a+1,?_abs+1
  1974   001A5C                     l1115:
  1975   001A5C  0012               	return		;funcret
  1976   001A5E                     __end_of_abs:
  1977                           	callstack 0
  1978                           
  1979 ;; *************** function ___aomod *****************
  1980 ;; Defined at:
  1981 ;;		line 9 in file "D:\ECM\pic\sources\c99\common\aomod.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;  dividend        8    4[COMRAM] long long 
  1984 ;;  divisor         8   12[COMRAM] long long 
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  sign            1   21[COMRAM] unsigned char 
  1987 ;;  counter         1   20[COMRAM] unsigned char 
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  8    4[COMRAM] long long 
  1990 ;; Registers used:
  1991 ;;		wreg, status,2, status,0
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1997 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1998 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2000 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2001 ;;Total ram usage:       18 bytes
  2002 ;; Hardware stack levels used: 1
  2003 ;; Hardware stack levels required when called: 2
  2004 ;; This function calls:
  2005 ;;		Nothing
  2006 ;; This function is called by:
  2007 ;;		_dtoa
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           	psect	text10
  2012   001216                     __ptext10:
  2013                           	callstack 0
  2014   001216                     ___aomod:
  2015                           	callstack 24
  2016   001216  0E00               	movlw	0
  2017   001218  6E16               	movwf	___aomod@sign^0,c
  2018   00121A  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  2019   00121C  EF14  F009         	goto	u1270
  2020   001220  EF12  F009         	goto	u1271
  2021   001224                     u1271:
  2022   001224  EF26  F009         	goto	l2248
  2023   001228                     u1270:
  2024   001228  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2025   00122A  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2026   00122C  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2027   00122E  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2028   001230  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2029   001232  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2030   001234  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2031   001236  6C05               	negf	___aomod@dividend^0,c
  2032   001238  0E00               	movlw	0
  2033   00123A  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2034   00123C  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2035   00123E  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2036   001240  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2037   001242  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2038   001244  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2039   001246  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2040   001248  0E01               	movlw	1
  2041   00124A  6E16               	movwf	___aomod@sign^0,c
  2042   00124C                     l2248:
  2043   00124C  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  2044   00124E  EF2D  F009         	goto	u1280
  2045   001252  EF2B  F009         	goto	u1281
  2046   001256                     u1281:
  2047   001256  EF3D  F009         	goto	l2252
  2048   00125A                     u1280:
  2049   00125A  1E14               	comf	(___aomod@divisor+7)^0,f,c
  2050   00125C  1E13               	comf	(___aomod@divisor+6)^0,f,c
  2051   00125E  1E12               	comf	(___aomod@divisor+5)^0,f,c
  2052   001260  1E11               	comf	(___aomod@divisor+4)^0,f,c
  2053   001262  1E10               	comf	(___aomod@divisor+3)^0,f,c
  2054   001264  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  2055   001266  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  2056   001268  6C0D               	negf	___aomod@divisor^0,c
  2057   00126A  0E00               	movlw	0
  2058   00126C  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  2059   00126E  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  2060   001270  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  2061   001272  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  2062   001274  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  2063   001276  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  2064   001278  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  2065   00127A                     l2252:
  2066   00127A  500D               	movf	___aomod@divisor^0,w,c
  2067   00127C  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  2068   00127E  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  2069   001280  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  2070   001282  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  2071   001284  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  2072   001286  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  2073   001288  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  2074   00128A  B4D8               	btfsc	status,2,c
  2075   00128C  EF4A  F009         	goto	u1291
  2076   001290  EF4C  F009         	goto	u1290
  2077   001294                     u1291:
  2078   001294  EF94  F009         	goto	l2268
  2079   001298                     u1290:
  2080   001298  0E01               	movlw	1
  2081   00129A  6E15               	movwf	___aomod@counter^0,c
  2082   00129C  EF5A  F009         	goto	l2258
  2083   0012A0                     l2256:
  2084   0012A0  90D8               	bcf	status,0,c
  2085   0012A2  360D               	rlcf	___aomod@divisor^0,f,c
  2086   0012A4  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  2087   0012A6  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  2088   0012A8  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  2089   0012AA  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  2090   0012AC  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  2091   0012AE  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  2092   0012B0  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  2093   0012B2  2A15               	incf	___aomod@counter^0,f,c
  2094   0012B4                     l2258:
  2095   0012B4  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  2096   0012B6  EF5F  F009         	goto	u1301
  2097   0012BA  EF61  F009         	goto	u1300
  2098   0012BE                     u1301:
  2099   0012BE  EF50  F009         	goto	l2256
  2100   0012C2                     u1300:
  2101   0012C2                     l2260:
  2102   0012C2  500D               	movf	___aomod@divisor^0,w,c
  2103   0012C4  5C05               	subwf	___aomod@dividend^0,w,c
  2104   0012C6  500E               	movf	(___aomod@divisor+1)^0,w,c
  2105   0012C8  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  2106   0012CA  500F               	movf	(___aomod@divisor+2)^0,w,c
  2107   0012CC  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  2108   0012CE  5010               	movf	(___aomod@divisor+3)^0,w,c
  2109   0012D0  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  2110   0012D2  5011               	movf	(___aomod@divisor+4)^0,w,c
  2111   0012D4  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  2112   0012D6  5012               	movf	(___aomod@divisor+5)^0,w,c
  2113   0012D8  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  2114   0012DA  5013               	movf	(___aomod@divisor+6)^0,w,c
  2115   0012DC  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  2116   0012DE  5014               	movf	(___aomod@divisor+7)^0,w,c
  2117   0012E0  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  2118   0012E2  A0D8               	btfss	status,0,c
  2119   0012E4  EF76  F009         	goto	u1311
  2120   0012E8  EF78  F009         	goto	u1310
  2121   0012EC                     u1311:
  2122   0012EC  EF88  F009         	goto	l2264
  2123   0012F0                     u1310:
  2124   0012F0  500D               	movf	___aomod@divisor^0,w,c
  2125   0012F2  5E05               	subwf	___aomod@dividend^0,f,c
  2126   0012F4  500E               	movf	(___aomod@divisor+1)^0,w,c
  2127   0012F6  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  2128   0012F8  500F               	movf	(___aomod@divisor+2)^0,w,c
  2129   0012FA  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  2130   0012FC  5010               	movf	(___aomod@divisor+3)^0,w,c
  2131   0012FE  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  2132   001300  5011               	movf	(___aomod@divisor+4)^0,w,c
  2133   001302  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  2134   001304  5012               	movf	(___aomod@divisor+5)^0,w,c
  2135   001306  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  2136   001308  5013               	movf	(___aomod@divisor+6)^0,w,c
  2137   00130A  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  2138   00130C  5014               	movf	(___aomod@divisor+7)^0,w,c
  2139   00130E  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  2140   001310                     l2264:
  2141   001310  90D8               	bcf	status,0,c
  2142   001312  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  2143   001314  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  2144   001316  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  2145   001318  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  2146   00131A  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  2147   00131C  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  2148   00131E  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  2149   001320  320D               	rrcf	___aomod@divisor^0,f,c
  2150   001322  2E15               	decfsz	___aomod@counter^0,f,c
  2151   001324  EF61  F009         	goto	l2260
  2152   001328                     l2268:
  2153   001328  5016               	movf	___aomod@sign^0,w,c
  2154   00132A  B4D8               	btfsc	status,2,c
  2155   00132C  EF9A  F009         	goto	u1321
  2156   001330  EF9C  F009         	goto	u1320
  2157   001334                     u1321:
  2158   001334  EFAC  F009         	goto	l2272
  2159   001338                     u1320:
  2160   001338  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2161   00133A  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2162   00133C  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2163   00133E  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2164   001340  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2165   001342  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2166   001344  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2167   001346  6C05               	negf	___aomod@dividend^0,c
  2168   001348  0E00               	movlw	0
  2169   00134A  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2170   00134C  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2171   00134E  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2172   001350  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2173   001352  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2174   001354  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2175   001356  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2176   001358                     l2272:
  2177   001358  C005  F005         	movff	___aomod@dividend,?___aomod
  2178   00135C  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  2179   001360  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  2180   001364  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  2181   001368  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  2182   00136C  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  2183   001370  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  2184   001374  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  2185   001378  0012               	return		;funcret
  2186   00137A                     __end_of___aomod:
  2187                           	callstack 0
  2188                           
  2189 ;; *************** function ___aodiv *****************
  2190 ;; Defined at:
  2191 ;;		line 9 in file "D:\ECM\pic\sources\c99\common\aodiv.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;  dividend        8    4[COMRAM] long long 
  2194 ;;  divisor         8   12[COMRAM] long long 
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;  quotient        8   22[COMRAM] long long 
  2197 ;;  sign            1   21[COMRAM] unsigned char 
  2198 ;;  counter         1   20[COMRAM] unsigned char 
  2199 ;; Return value:  Size  Location     Type
  2200 ;;                  8    4[COMRAM] long long 
  2201 ;; Registers used:
  2202 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2208 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2209 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2211 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2212 ;;Total ram usage:       26 bytes
  2213 ;; Hardware stack levels used: 1
  2214 ;; Hardware stack levels required when called: 2
  2215 ;; This function calls:
  2216 ;;		Nothing
  2217 ;; This function is called by:
  2218 ;;		_dtoa
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222                           	psect	text11
  2223   00108E                     __ptext11:
  2224                           	callstack 0
  2225   00108E                     ___aodiv:
  2226                           	callstack 24
  2227   00108E  0E00               	movlw	0
  2228   001090  6E16               	movwf	___aodiv@sign^0,c
  2229   001092  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  2230   001094  EF50  F008         	goto	u1200
  2231   001098  EF4E  F008         	goto	u1201
  2232   00109C                     u1201:
  2233   00109C  EF62  F008         	goto	l2204
  2234   0010A0                     u1200:
  2235   0010A0  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  2236   0010A2  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  2237   0010A4  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  2238   0010A6  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  2239   0010A8  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  2240   0010AA  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  2241   0010AC  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  2242   0010AE  6C0D               	negf	___aodiv@divisor^0,c
  2243   0010B0  0E00               	movlw	0
  2244   0010B2  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  2245   0010B4  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  2246   0010B6  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  2247   0010B8  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  2248   0010BA  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  2249   0010BC  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  2250   0010BE  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  2251   0010C0  0E01               	movlw	1
  2252   0010C2  6E16               	movwf	___aodiv@sign^0,c
  2253   0010C4                     l2204:
  2254   0010C4  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  2255   0010C6  EF69  F008         	goto	u1210
  2256   0010CA  EF67  F008         	goto	u1211
  2257   0010CE                     u1211:
  2258   0010CE  EF7B  F008         	goto	l2210
  2259   0010D2                     u1210:
  2260   0010D2  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  2261   0010D4  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  2262   0010D6  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  2263   0010D8  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  2264   0010DA  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  2265   0010DC  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  2266   0010DE  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  2267   0010E0  6C05               	negf	___aodiv@dividend^0,c
  2268   0010E2  0E00               	movlw	0
  2269   0010E4  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  2270   0010E6  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  2271   0010E8  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  2272   0010EA  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  2273   0010EC  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  2274   0010EE  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  2275   0010F0  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  2276   0010F2  0E01               	movlw	1
  2277   0010F4  1A16               	xorwf	___aodiv@sign^0,f,c
  2278   0010F6                     l2210:
  2279   0010F6  EE20  F017         	lfsr	2,___aodiv@quotient
  2280   0010FA  0E07               	movlw	7
  2281   0010FC                     u1221:
  2282   0010FC  6ADE               	clrf	postinc2,c
  2283   0010FE  06E8               	decf	wreg,f,c
  2284   001100  E2FD               	bc	u1221
  2285   001102  500D               	movf	___aodiv@divisor^0,w,c
  2286   001104  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  2287   001106  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  2288   001108  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  2289   00110A  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  2290   00110C  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  2291   00110E  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  2292   001110  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  2293   001112  B4D8               	btfsc	status,2,c
  2294   001114  EF8E  F008         	goto	u1231
  2295   001118  EF90  F008         	goto	u1230
  2296   00111C                     u1231:
  2297   00111C  EFE2  F008         	goto	l2232
  2298   001120                     u1230:
  2299   001120  0E01               	movlw	1
  2300   001122  6E15               	movwf	___aodiv@counter^0,c
  2301   001124  EF9E  F008         	goto	l2218
  2302   001128                     l2216:
  2303   001128  90D8               	bcf	status,0,c
  2304   00112A  360D               	rlcf	___aodiv@divisor^0,f,c
  2305   00112C  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  2306   00112E  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  2307   001130  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  2308   001132  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  2309   001134  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  2310   001136  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  2311   001138  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  2312   00113A  2A15               	incf	___aodiv@counter^0,f,c
  2313   00113C                     l2218:
  2314   00113C  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  2315   00113E  EFA3  F008         	goto	u1241
  2316   001142  EFA5  F008         	goto	u1240
  2317   001146                     u1241:
  2318   001146  EF94  F008         	goto	l2216
  2319   00114A                     u1240:
  2320   00114A                     l2220:
  2321   00114A  90D8               	bcf	status,0,c
  2322   00114C  3617               	rlcf	___aodiv@quotient^0,f,c
  2323   00114E  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  2324   001150  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  2325   001152  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  2326   001154  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  2327   001156  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  2328   001158  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  2329   00115A  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  2330   00115C  500D               	movf	___aodiv@divisor^0,w,c
  2331   00115E  5C05               	subwf	___aodiv@dividend^0,w,c
  2332   001160  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2333   001162  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  2334   001164  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2335   001166  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  2336   001168  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2337   00116A  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  2338   00116C  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2339   00116E  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  2340   001170  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2341   001172  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  2342   001174  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2343   001176  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  2344   001178  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2345   00117A  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  2346   00117C  A0D8               	btfss	status,0,c
  2347   00117E  EFC3  F008         	goto	u1251
  2348   001182  EFC5  F008         	goto	u1250
  2349   001186                     u1251:
  2350   001186  EFD6  F008         	goto	l2228
  2351   00118A                     u1250:
  2352   00118A  500D               	movf	___aodiv@divisor^0,w,c
  2353   00118C  5E05               	subwf	___aodiv@dividend^0,f,c
  2354   00118E  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2355   001190  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  2356   001192  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2357   001194  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  2358   001196  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2359   001198  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  2360   00119A  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2361   00119C  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  2362   00119E  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2363   0011A0  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  2364   0011A2  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2365   0011A4  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  2366   0011A6  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2367   0011A8  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  2368   0011AA  8017               	bsf	___aodiv@quotient^0,0,c
  2369   0011AC                     l2228:
  2370   0011AC  90D8               	bcf	status,0,c
  2371   0011AE  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  2372   0011B0  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  2373   0011B2  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  2374   0011B4  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  2375   0011B6  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  2376   0011B8  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  2377   0011BA  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  2378   0011BC  320D               	rrcf	___aodiv@divisor^0,f,c
  2379   0011BE  2E15               	decfsz	___aodiv@counter^0,f,c
  2380   0011C0  EFA5  F008         	goto	l2220
  2381   0011C4                     l2232:
  2382   0011C4  5016               	movf	___aodiv@sign^0,w,c
  2383   0011C6  B4D8               	btfsc	status,2,c
  2384   0011C8  EFE8  F008         	goto	u1261
  2385   0011CC  EFEA  F008         	goto	u1260
  2386   0011D0                     u1261:
  2387   0011D0  EFFA  F008         	goto	l2236
  2388   0011D4                     u1260:
  2389   0011D4  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  2390   0011D6  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  2391   0011D8  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  2392   0011DA  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  2393   0011DC  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  2394   0011DE  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  2395   0011E0  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  2396   0011E2  6C17               	negf	___aodiv@quotient^0,c
  2397   0011E4  0E00               	movlw	0
  2398   0011E6  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  2399   0011E8  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  2400   0011EA  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  2401   0011EC  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  2402   0011EE  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  2403   0011F0  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  2404   0011F2  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  2405   0011F4                     l2236:
  2406   0011F4  C017  F005         	movff	___aodiv@quotient,?___aodiv
  2407   0011F8  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  2408   0011FC  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  2409   001200  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  2410   001204  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  2411   001208  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  2412   00120C  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  2413   001210  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  2414   001214  0012               	return		;funcret
  2415   001216                     __end_of___aodiv:
  2416                           	callstack 0
  2417                           
  2418 ;; *************** function _sendStringSerial4 *****************
  2419 ;; Defined at:
  2420 ;;		line 38 in file "../serial.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;  string          2    5[COMRAM] PTR unsigned char 
  2423 ;;		 -> main@buf(40), 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;		None
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  1    wreg      void 
  2428 ;; Registers used:
  2429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2435 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2438 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2439 ;;Total ram usage:        2 bytes
  2440 ;; Hardware stack levels used: 1
  2441 ;; Hardware stack levels required when called: 3
  2442 ;; This function calls:
  2443 ;;		_sendCharSerial4
  2444 ;; This function is called by:
  2445 ;;		_main
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           	psect	text12
  2450   001AC4                     __ptext12:
  2451                           	callstack 0
  2452   001AC4                     _sendStringSerial4:
  2453                           	callstack 27
  2454   001AC4                     
  2455                           ;../serial.c: 40:     while (*string != 0) {
  2456   001AC4  EF6D  F00D         	goto	l2062
  2457   001AC8                     l2058:
  2458                           
  2459                           ;../serial.c: 41:         sendCharSerial4(*string++);
  2460   001AC8  C006  FFD9         	movff	sendStringSerial4@string,fsr2l
  2461   001ACC  C007  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2462   001AD0  50DF               	movf	indf2,w,c
  2463   001AD2  ECEE  F00D         	call	_sendCharSerial4
  2464   001AD6  4A06               	infsnz	sendStringSerial4@string^0,f,c
  2465   001AD8  2A07               	incf	(sendStringSerial4@string+1)^0,f,c
  2466   001ADA                     l2062:
  2467                           
  2468                           ;../serial.c: 40:     while (*string != 0) {
  2469   001ADA  C006  FFD9         	movff	sendStringSerial4@string,fsr2l
  2470   001ADE  C007  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2471   001AE2  50DF               	movf	indf2,w,c
  2472   001AE4  A4D8               	btfss	status,2,c
  2473   001AE6  EF77  F00D         	goto	u1041
  2474   001AEA  EF79  F00D         	goto	u1040
  2475   001AEE                     u1041:
  2476   001AEE  EF64  F00D         	goto	l2058
  2477   001AF2                     u1040:
  2478   001AF2  0012               	return		;funcret
  2479   001AF4                     __end_of_sendStringSerial4:
  2480                           	callstack 0
  2481                           
  2482 ;; *************** function _sendCharSerial4 *****************
  2483 ;; Defined at:
  2484 ;;		line 31 in file "../serial.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;  charToSend      1    wreg     unsigned char 
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;  charToSend      1    4[COMRAM] unsigned char 
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  1    wreg      void 
  2491 ;; Registers used:
  2492 ;;		wreg
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2499 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2501 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2502 ;;Total ram usage:        1 bytes
  2503 ;; Hardware stack levels used: 1
  2504 ;; Hardware stack levels required when called: 2
  2505 ;; This function calls:
  2506 ;;		Nothing
  2507 ;; This function is called by:
  2508 ;;		_sendStringSerial4
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           	psect	text13
  2513   001BDC                     __ptext13:
  2514                           	callstack 0
  2515   001BDC                     _sendCharSerial4:
  2516                           	callstack 27
  2517                           
  2518                           ;incstack = 0
  2519                           ;sendCharSerial4@charToSend stored from wreg
  2520   001BDC  6E05               	movwf	sendCharSerial4@charToSend^0,c
  2521   001BDE                     l328:
  2522   001BDE  010E               	movlb	14	; () banked
  2523   001BE0  A537               	btfss	55,2,b	;volatile
  2524   001BE2  EFF5  F00D         	goto	u1021
  2525   001BE6  EFF7  F00D         	goto	u1020
  2526   001BEA                     u1021:
  2527   001BEA  EFEF  F00D         	goto	l328
  2528   001BEE                     u1020:
  2529   001BEE                     
  2530                           ; BSR set to: 14
  2531                           ;../serial.c: 33:     TX4REG = charToSend;
  2532   001BEE  C005  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2533   001BF2                     
  2534                           ; BSR set to: 14
  2535   001BF2  0012               	return		;funcret
  2536   001BF4                     __end_of_sendCharSerial4:
  2537                           	callstack 0
  2538                           
  2539 ;; *************** function _initUSART4 *****************
  2540 ;; Defined at:
  2541 ;;		line 5 in file "../serial.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;		None
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;		None
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  1    wreg      void 
  2548 ;; Registers used:
  2549 ;;		wreg, status,2
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2559 ;;Total ram usage:        0 bytes
  2560 ;; Hardware stack levels used: 1
  2561 ;; Hardware stack levels required when called: 2
  2562 ;; This function calls:
  2563 ;;		Nothing
  2564 ;; This function is called by:
  2565 ;;		_main
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           	psect	text14
  2570   001B9C                     __ptext14:
  2571                           	callstack 0
  2572   001B9C                     _initUSART4:
  2573                           	callstack 28
  2574   001B9C                     
  2575                           ;../serial.c: 7:     RC0PPS = 0x12;
  2576   001B9C  0E12               	movlw	18
  2577   001B9E  010E               	movlb	14	; () banked
  2578   001BA0  6F62               	movwf	98,b	;volatile
  2579                           
  2580                           ;../serial.c: 8:     RX4PPS = 0x11;
  2581   001BA2  0E11               	movlw	17
  2582   001BA4  6F15               	movwf	21,b	;volatile
  2583   001BA6                     
  2584                           ; BSR set to: 14
  2585                           ;../serial.c: 9:     TRISCbits.TRISC1 = 1;
  2586   001BA6  8283               	bsf	131,1,c	;volatile
  2587   001BA8                     
  2588                           ; BSR set to: 14
  2589                           ;../serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  2590   001BA8  97E9               	bcf	233,3,b	;volatile
  2591   001BAA                     
  2592                           ; BSR set to: 14
  2593                           ;../serial.c: 13:     TX4STAbits.BRGH = 0;
  2594   001BAA  95E8               	bcf	232,2,b	;volatile
  2595                           
  2596                           ;../serial.c: 14:     SP4BRGL = 51;
  2597   001BAC  0E33               	movlw	51
  2598   001BAE  6FE5               	movwf	229,b	;volatile
  2599                           
  2600                           ;../serial.c: 15:     SP4BRGH = 0;
  2601   001BB0  0E00               	movlw	0
  2602   001BB2  6FE6               	movwf	230,b	;volatile
  2603   001BB4                     
  2604                           ; BSR set to: 14
  2605                           ;../serial.c: 17:     RC4STAbits.CREN = 1;
  2606   001BB4  89E7               	bsf	231,4,b	;volatile
  2607   001BB6                     
  2608                           ; BSR set to: 14
  2609                           ;../serial.c: 18:     TX4STAbits.TXEN = 1;
  2610   001BB6  8BE8               	bsf	232,5,b	;volatile
  2611   001BB8                     
  2612                           ; BSR set to: 14
  2613                           ;../serial.c: 19:     RC4STAbits.SPEN = 1;
  2614   001BB8  8FE7               	bsf	231,7,b	;volatile
  2615   001BBA                     
  2616                           ; BSR set to: 14
  2617   001BBA  0012               	return		;funcret
  2618   001BBC                     __end_of_initUSART4:
  2619                           	callstack 0
  2620                           
  2621 ;; *************** function _initDCmotorsPWM *****************
  2622 ;; Defined at:
  2623 ;;		line 5 in file "../dc_motor.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;  PWMperiod       2    4[COMRAM] unsigned int 
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;		None
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  1    wreg      void 
  2630 ;; Registers used:
  2631 ;;		wreg, status,2
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2637 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2640 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2641 ;;Total ram usage:        2 bytes
  2642 ;; Hardware stack levels used: 1
  2643 ;; Hardware stack levels required when called: 2
  2644 ;; This function calls:
  2645 ;;		Nothing
  2646 ;; This function is called by:
  2647 ;;		_main
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651                           	psect	text15
  2652   0016AC                     __ptext15:
  2653                           	callstack 0
  2654   0016AC                     _initDCmotorsPWM:
  2655                           	callstack 28
  2656   0016AC                     
  2657                           ;../dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2658   0016AC  9485               	bcf	133,2,c	;volatile
  2659                           
  2660                           ;../dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2661   0016AE  9885               	bcf	133,4,c	;volatile
  2662                           
  2663                           ;../dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2664   0016B0  9E83               	bcf	131,7,c	;volatile
  2665                           
  2666                           ;../dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2667   0016B2  9C87               	bcf	135,6,c	;volatile
  2668                           
  2669                           ;../dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2670   0016B4  947D               	bcf	125,2,c	;volatile
  2671                           
  2672                           ;../dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2673   0016B6  987D               	bcf	125,4,c	;volatile
  2674                           
  2675                           ;../dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2676   0016B8  9E7B               	bcf	123,7,c	;volatile
  2677                           
  2678                           ;../dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2679   0016BA  9C7F               	bcf	127,6,c	;volatile
  2680   0016BC                     
  2681                           ;../dc_motor.c: 18:     RE2PPS=0x05;
  2682   0016BC  0E05               	movlw	5
  2683   0016BE  010E               	movlb	14	; () banked
  2684   0016C0  6F74               	movwf	116,b	;volatile
  2685                           
  2686                           ;../dc_motor.c: 19:     RE4PPS=0x06;
  2687   0016C2  0E06               	movlw	6
  2688   0016C4  6F76               	movwf	118,b	;volatile
  2689                           
  2690                           ;../dc_motor.c: 20:     RC7PPS=0x07;
  2691   0016C6  0E07               	movlw	7
  2692   0016C8  6F69               	movwf	105,b	;volatile
  2693                           
  2694                           ;../dc_motor.c: 21:     RG6PPS=0x08;
  2695   0016CA  0E08               	movlw	8
  2696   0016CC  6F88               	movwf	136,b	;volatile
  2697                           
  2698                           ;../dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  2699   0016CE  50BD               	movf	189,w,c	;volatile
  2700   0016D0  0B8F               	andlw	-113
  2701   0016D2  0940               	iorlw	64
  2702   0016D4  6EBD               	movwf	189,c	;volatile
  2703                           
  2704                           ;../dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  2705   0016D6  0EE0               	movlw	-32
  2706   0016D8  16BE               	andwf	190,f,c	;volatile
  2707                           
  2708                           ;../dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  2709   0016DA  50BF               	movf	191,w,c	;volatile
  2710   0016DC  0BF0               	andlw	-16
  2711   0016DE  0901               	iorlw	1
  2712   0016E0  6EBF               	movwf	191,c	;volatile
  2713   0016E2                     
  2714                           ; BSR set to: 14
  2715                           ;../dc_motor.c: 30:     T2PR=PWMperiod;
  2716   0016E2  C005  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  2717   0016E6                     
  2718                           ; BSR set to: 14
  2719                           ;../dc_motor.c: 31:     T2CONbits.ON=1;
  2720   0016E6  8EBD               	bsf	189,7,c	;volatile
  2721                           
  2722                           ;../dc_motor.c: 35:     CCPR1H=0;
  2723   0016E8  0E00               	movlw	0
  2724   0016EA  6EAA               	movwf	170,c	;volatile
  2725                           
  2726                           ;../dc_motor.c: 36:     CCPR2H=0;
  2727   0016EC  0E00               	movlw	0
  2728   0016EE  6EA6               	movwf	166,c	;volatile
  2729                           
  2730                           ;../dc_motor.c: 37:     CCPR3H=0;
  2731   0016F0  0E00               	movlw	0
  2732   0016F2  010F               	movlb	15	; () banked
  2733   0016F4  6F25               	movwf	37,b	;volatile
  2734                           
  2735                           ;../dc_motor.c: 38:     CCPR4H=0;
  2736   0016F6  0E00               	movlw	0
  2737   0016F8  6F21               	movwf	33,b	;volatile
  2738                           
  2739                           ;../dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  2740   0016FA  0EFC               	movlw	-4
  2741   0016FC  16AD               	andwf	173,f,c	;volatile
  2742                           
  2743                           ;../dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  2744   0016FE  0EF3               	movlw	-13
  2745   001700  16AD               	andwf	173,f,c	;volatile
  2746                           
  2747                           ;../dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  2748   001702  0ECF               	movlw	-49
  2749   001704  16AD               	andwf	173,f,c	;volatile
  2750                           
  2751                           ;../dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  2752   001706  0E3F               	movlw	-193
  2753   001708  16AD               	andwf	173,f,c	;volatile
  2754   00170A                     
  2755                           ; BSR set to: 15
  2756                           ;../dc_motor.c: 47:     CCP1CONbits.FMT=1;
  2757   00170A  88AB               	bsf	171,4,c	;volatile
  2758                           
  2759                           ;../dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  2760   00170C  50AB               	movf	171,w,c	;volatile
  2761   00170E  0BF0               	andlw	-16
  2762   001710  090C               	iorlw	12
  2763   001712  6EAB               	movwf	171,c	;volatile
  2764   001714                     
  2765                           ; BSR set to: 15
  2766                           ;../dc_motor.c: 49:     CCP1CONbits.EN=1;
  2767   001714  8EAB               	bsf	171,7,c	;volatile
  2768   001716                     
  2769                           ; BSR set to: 15
  2770                           ;../dc_motor.c: 52:     CCP2CONbits.FMT=1;
  2771   001716  88A7               	bsf	167,4,c	;volatile
  2772                           
  2773                           ;../dc_motor.c: 53:     CCP2CONbits.CCP2MODE=0b1100;
  2774   001718  50A7               	movf	167,w,c	;volatile
  2775   00171A  0BF0               	andlw	-16
  2776   00171C  090C               	iorlw	12
  2777   00171E  6EA7               	movwf	167,c	;volatile
  2778   001720                     
  2779                           ; BSR set to: 15
  2780                           ;../dc_motor.c: 54:     CCP2CONbits.EN=1;
  2781   001720  8EA7               	bsf	167,7,c	;volatile
  2782   001722                     
  2783                           ; BSR set to: 15
  2784                           ;../dc_motor.c: 58:     CCP3CONbits.FMT=1;
  2785   001722  8926               	bsf	38,4,b	;volatile
  2786                           
  2787                           ;../dc_motor.c: 59:     CCP3CONbits.CCP3MODE=0b1100;
  2788   001724  5126               	movf	38,w,b	;volatile
  2789   001726  0BF0               	andlw	-16
  2790   001728  090C               	iorlw	12
  2791   00172A  6F26               	movwf	38,b	;volatile
  2792   00172C                     
  2793                           ; BSR set to: 15
  2794                           ;../dc_motor.c: 60:     CCP3CONbits.EN=1;
  2795   00172C  8F26               	bsf	38,7,b	;volatile
  2796   00172E                     
  2797                           ; BSR set to: 15
  2798                           ;../dc_motor.c: 63:     CCP4CONbits.FMT=1;
  2799   00172E  8922               	bsf	34,4,b	;volatile
  2800                           
  2801                           ;../dc_motor.c: 64:     CCP4CONbits.CCP4MODE=0b1100;
  2802   001730  5122               	movf	34,w,b	;volatile
  2803   001732  0BF0               	andlw	-16
  2804   001734  090C               	iorlw	12
  2805   001736  6F22               	movwf	34,b	;volatile
  2806   001738                     
  2807                           ; BSR set to: 15
  2808                           ;../dc_motor.c: 65:     CCP4CONbits.EN=1;
  2809   001738  8F22               	bsf	34,7,b	;volatile
  2810   00173A                     
  2811                           ; BSR set to: 15
  2812   00173A  0012               	return		;funcret
  2813   00173C                     __end_of_initDCmotorsPWM:
  2814                           	callstack 0
  2815                           
  2816 ;; *************** function _color_read_Red *****************
  2817 ;; Defined at:
  2818 ;;		line 29 in file "../color.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;		None
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;  tmp             2   13[COMRAM] unsigned int 
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  2    8[COMRAM] unsigned int 
  2825 ;; Registers used:
  2826 ;;		wreg, status,2, status,0, cstack
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2832 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2833 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2834 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2835 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2836 ;;Total ram usage:        7 bytes
  2837 ;; Hardware stack levels used: 1
  2838 ;; Hardware stack levels required when called: 4
  2839 ;; This function calls:
  2840 ;;		_I2C_2_Master_Read
  2841 ;;		_I2C_2_Master_RepStart
  2842 ;;		_I2C_2_Master_Start
  2843 ;;		_I2C_2_Master_Stop
  2844 ;;		_I2C_2_Master_Write
  2845 ;; This function is called by:
  2846 ;;		_main
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           	psect	text16
  2851   001858                     __ptext16:
  2852                           	callstack 0
  2853   001858                     _color_read_Red:
  2854                           	callstack 26
  2855   001858                     
  2856                           ;../color.c: 31:  unsigned int tmp;;../color.c: 32:  I2C_2_Master_Start();
  2857   001858  EC1C  F00E         	call	_I2C_2_Master_Start	;wreg free
  2858                           
  2859                           ;../color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  2860   00185C  0E52               	movlw	82
  2861   00185E  EC06  F00E         	call	_I2C_2_Master_Write
  2862                           
  2863                           ;../color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  2864   001862  0EB6               	movlw	182
  2865   001864  EC06  F00E         	call	_I2C_2_Master_Write
  2866                           
  2867                           ;../color.c: 35:  I2C_2_Master_RepStart();
  2868   001868  EC12  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  2869                           
  2870                           ;../color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  2871   00186C  0E53               	movlw	83
  2872   00186E  EC06  F00E         	call	_I2C_2_Master_Write
  2873                           
  2874                           ;../color.c: 37:  tmp=I2C_2_Master_Read(1);
  2875   001872  0E01               	movlw	1
  2876   001874  ECEE  F00C         	call	_I2C_2_Master_Read
  2877   001878  6E0B               	movwf	??_color_read_Red^0,c
  2878   00187A  500B               	movf	??_color_read_Red^0,w,c
  2879   00187C  6E0E               	movwf	color_read_Red@tmp^0,c
  2880   00187E  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
  2881                           
  2882                           ;../color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2883   001880  0E00               	movlw	0
  2884   001882  ECEE  F00C         	call	_I2C_2_Master_Read
  2885   001886  6E0B               	movwf	??_color_read_Red^0,c
  2886   001888  500B               	movf	??_color_read_Red^0,w,c
  2887   00188A  6E0D               	movwf	(??_color_read_Red+2)^0,c
  2888   00188C  6A0C               	clrf	(??_color_read_Red+1)^0,c
  2889   00188E  500E               	movf	color_read_Red@tmp^0,w,c
  2890   001890  100C               	iorwf	(??_color_read_Red+1)^0,w,c
  2891   001892  6E0E               	movwf	color_read_Red@tmp^0,c
  2892   001894  500F               	movf	(color_read_Red@tmp+1)^0,w,c
  2893   001896  100D               	iorwf	(??_color_read_Red+2)^0,w,c
  2894   001898  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
  2895                           
  2896                           ;../color.c: 39:  I2C_2_Master_Stop();
  2897   00189A  EC17  F00E         	call	_I2C_2_Master_Stop	;wreg free
  2898   00189E                     
  2899                           ;../color.c: 40:  return tmp;
  2900   00189E  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
  2901   0018A2  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2902   0018A6  0012               	return		;funcret
  2903   0018A8                     __end_of_color_read_Red:
  2904                           	callstack 0
  2905                           
  2906 ;; *************** function _color_read_Green *****************
  2907 ;; Defined at:
  2908 ;;		line 58 in file "../color.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;		None
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;  tmp             2   13[COMRAM] unsigned int 
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  2    8[COMRAM] unsigned int 
  2915 ;; Registers used:
  2916 ;;		wreg, status,2, status,0, cstack
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2922 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2923 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2924 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2925 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2926 ;;Total ram usage:        7 bytes
  2927 ;; Hardware stack levels used: 1
  2928 ;; Hardware stack levels required when called: 4
  2929 ;; This function calls:
  2930 ;;		_I2C_2_Master_Read
  2931 ;;		_I2C_2_Master_RepStart
  2932 ;;		_I2C_2_Master_Start
  2933 ;;		_I2C_2_Master_Stop
  2934 ;;		_I2C_2_Master_Write
  2935 ;; This function is called by:
  2936 ;;		_main
  2937 ;; This function uses a non-reentrant model
  2938 ;;
  2939                           
  2940                           	psect	text17
  2941   0018A8                     __ptext17:
  2942                           	callstack 0
  2943   0018A8                     _color_read_Green:
  2944                           	callstack 26
  2945   0018A8                     
  2946                           ;../color.c: 60:  unsigned int tmp;;../color.c: 61:  I2C_2_Master_Start();
  2947   0018A8  EC1C  F00E         	call	_I2C_2_Master_Start	;wreg free
  2948                           
  2949                           ;../color.c: 62:  I2C_2_Master_Write(0x52 | 0x00);
  2950   0018AC  0E52               	movlw	82
  2951   0018AE  EC06  F00E         	call	_I2C_2_Master_Write
  2952                           
  2953                           ;../color.c: 64:  I2C_2_Master_Write(0xA0 | 0x18);
  2954   0018B2  0EB8               	movlw	184
  2955   0018B4  EC06  F00E         	call	_I2C_2_Master_Write
  2956                           
  2957                           ;../color.c: 65:  I2C_2_Master_RepStart();
  2958   0018B8  EC12  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  2959                           
  2960                           ;../color.c: 66:  I2C_2_Master_Write(0x52 | 0x01);
  2961   0018BC  0E53               	movlw	83
  2962   0018BE  EC06  F00E         	call	_I2C_2_Master_Write
  2963                           
  2964                           ;../color.c: 67:  tmp=I2C_2_Master_Read(1);
  2965   0018C2  0E01               	movlw	1
  2966   0018C4  ECEE  F00C         	call	_I2C_2_Master_Read
  2967   0018C8  6E0B               	movwf	??_color_read_Green^0,c
  2968   0018CA  500B               	movf	??_color_read_Green^0,w,c
  2969   0018CC  6E0E               	movwf	color_read_Green@tmp^0,c
  2970   0018CE  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
  2971                           
  2972                           ;../color.c: 68:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2973   0018D0  0E00               	movlw	0
  2974   0018D2  ECEE  F00C         	call	_I2C_2_Master_Read
  2975   0018D6  6E0B               	movwf	??_color_read_Green^0,c
  2976   0018D8  500B               	movf	??_color_read_Green^0,w,c
  2977   0018DA  6E0D               	movwf	(??_color_read_Green+2)^0,c
  2978   0018DC  6A0C               	clrf	(??_color_read_Green+1)^0,c
  2979   0018DE  500E               	movf	color_read_Green@tmp^0,w,c
  2980   0018E0  100C               	iorwf	(??_color_read_Green+1)^0,w,c
  2981   0018E2  6E0E               	movwf	color_read_Green@tmp^0,c
  2982   0018E4  500F               	movf	(color_read_Green@tmp+1)^0,w,c
  2983   0018E6  100D               	iorwf	(??_color_read_Green+2)^0,w,c
  2984   0018E8  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
  2985                           
  2986                           ;../color.c: 69:  I2C_2_Master_Stop();
  2987   0018EA  EC17  F00E         	call	_I2C_2_Master_Stop	;wreg free
  2988   0018EE                     
  2989                           ;../color.c: 70:  return tmp;
  2990   0018EE  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
  2991   0018F2  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2992   0018F6  0012               	return		;funcret
  2993   0018F8                     __end_of_color_read_Green:
  2994                           	callstack 0
  2995                           
  2996 ;; *************** function _color_read_Clear *****************
  2997 ;; Defined at:
  2998 ;;		line 73 in file "../color.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;		None
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;  tmp             2   13[COMRAM] unsigned int 
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  2    8[COMRAM] unsigned int 
  3005 ;; Registers used:
  3006 ;;		wreg, status,2, status,0, cstack
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3012 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3013 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3014 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3015 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3016 ;;Total ram usage:        7 bytes
  3017 ;; Hardware stack levels used: 1
  3018 ;; Hardware stack levels required when called: 4
  3019 ;; This function calls:
  3020 ;;		_I2C_2_Master_Read
  3021 ;;		_I2C_2_Master_RepStart
  3022 ;;		_I2C_2_Master_Start
  3023 ;;		_I2C_2_Master_Stop
  3024 ;;		_I2C_2_Master_Write
  3025 ;; This function is called by:
  3026 ;;		_main
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           	psect	text18
  3031   0018F8                     __ptext18:
  3032                           	callstack 0
  3033   0018F8                     _color_read_Clear:
  3034                           	callstack 26
  3035   0018F8                     
  3036                           ;../color.c: 75:  unsigned int tmp;;../color.c: 76:  I2C_2_Master_Start();
  3037   0018F8  EC1C  F00E         	call	_I2C_2_Master_Start	;wreg free
  3038                           
  3039                           ;../color.c: 77:  I2C_2_Master_Write(0x52 | 0x00);
  3040   0018FC  0E52               	movlw	82
  3041   0018FE  EC06  F00E         	call	_I2C_2_Master_Write
  3042                           
  3043                           ;../color.c: 79:  I2C_2_Master_Write(0xA0 | 0x14);
  3044   001902  0EB4               	movlw	180
  3045   001904  EC06  F00E         	call	_I2C_2_Master_Write
  3046                           
  3047                           ;../color.c: 80:  I2C_2_Master_RepStart();
  3048   001908  EC12  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3049                           
  3050                           ;../color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  3051   00190C  0E53               	movlw	83
  3052   00190E  EC06  F00E         	call	_I2C_2_Master_Write
  3053                           
  3054                           ;../color.c: 82:  tmp=I2C_2_Master_Read(1);
  3055   001912  0E01               	movlw	1
  3056   001914  ECEE  F00C         	call	_I2C_2_Master_Read
  3057   001918  6E0B               	movwf	??_color_read_Clear^0,c
  3058   00191A  500B               	movf	??_color_read_Clear^0,w,c
  3059   00191C  6E0E               	movwf	color_read_Clear@tmp^0,c
  3060   00191E  6A0F               	clrf	(color_read_Clear@tmp+1)^0,c
  3061                           
  3062                           ;../color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3063   001920  0E00               	movlw	0
  3064   001922  ECEE  F00C         	call	_I2C_2_Master_Read
  3065   001926  6E0B               	movwf	??_color_read_Clear^0,c
  3066   001928  500B               	movf	??_color_read_Clear^0,w,c
  3067   00192A  6E0D               	movwf	(??_color_read_Clear+2)^0,c
  3068   00192C  6A0C               	clrf	(??_color_read_Clear+1)^0,c
  3069   00192E  500E               	movf	color_read_Clear@tmp^0,w,c
  3070   001930  100C               	iorwf	(??_color_read_Clear+1)^0,w,c
  3071   001932  6E0E               	movwf	color_read_Clear@tmp^0,c
  3072   001934  500F               	movf	(color_read_Clear@tmp+1)^0,w,c
  3073   001936  100D               	iorwf	(??_color_read_Clear+2)^0,w,c
  3074   001938  6E0F               	movwf	(color_read_Clear@tmp+1)^0,c
  3075                           
  3076                           ;../color.c: 84:  I2C_2_Master_Stop();
  3077   00193A  EC17  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3078   00193E                     
  3079                           ;../color.c: 85:  return tmp;
  3080   00193E  C00E  F009         	movff	color_read_Clear@tmp,?_color_read_Clear
  3081   001942  C00F  F00A         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  3082   001946  0012               	return		;funcret
  3083   001948                     __end_of_color_read_Clear:
  3084                           	callstack 0
  3085                           
  3086 ;; *************** function _color_read_Blue *****************
  3087 ;; Defined at:
  3088 ;;		line 43 in file "../color.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;		None
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  tmp             2   13[COMRAM] unsigned int 
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  2    8[COMRAM] unsigned int 
  3095 ;; Registers used:
  3096 ;;		wreg, status,2, status,0, cstack
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3102 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3103 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3104 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3105 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3106 ;;Total ram usage:        7 bytes
  3107 ;; Hardware stack levels used: 1
  3108 ;; Hardware stack levels required when called: 4
  3109 ;; This function calls:
  3110 ;;		_I2C_2_Master_Read
  3111 ;;		_I2C_2_Master_RepStart
  3112 ;;		_I2C_2_Master_Start
  3113 ;;		_I2C_2_Master_Stop
  3114 ;;		_I2C_2_Master_Write
  3115 ;; This function is called by:
  3116 ;;		_main
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119                           
  3120                           	psect	text19
  3121   001948                     __ptext19:
  3122                           	callstack 0
  3123   001948                     _color_read_Blue:
  3124                           	callstack 26
  3125   001948                     
  3126                           ;../color.c: 45:  unsigned int tmp;;../color.c: 46:  I2C_2_Master_Start();
  3127   001948  EC1C  F00E         	call	_I2C_2_Master_Start	;wreg free
  3128                           
  3129                           ;../color.c: 47:  I2C_2_Master_Write(0x52 | 0x00);
  3130   00194C  0E52               	movlw	82
  3131   00194E  EC06  F00E         	call	_I2C_2_Master_Write
  3132                           
  3133                           ;../color.c: 49:  I2C_2_Master_Write(0xA0 | 0x1A);
  3134   001952  0EBA               	movlw	186
  3135   001954  EC06  F00E         	call	_I2C_2_Master_Write
  3136                           
  3137                           ;../color.c: 50:  I2C_2_Master_RepStart();
  3138   001958  EC12  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3139                           
  3140                           ;../color.c: 51:  I2C_2_Master_Write(0x52 | 0x01);
  3141   00195C  0E53               	movlw	83
  3142   00195E  EC06  F00E         	call	_I2C_2_Master_Write
  3143                           
  3144                           ;../color.c: 52:  tmp=I2C_2_Master_Read(1);
  3145   001962  0E01               	movlw	1
  3146   001964  ECEE  F00C         	call	_I2C_2_Master_Read
  3147   001968  6E0B               	movwf	??_color_read_Blue^0,c
  3148   00196A  500B               	movf	??_color_read_Blue^0,w,c
  3149   00196C  6E0E               	movwf	color_read_Blue@tmp^0,c
  3150   00196E  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
  3151                           
  3152                           ;../color.c: 53:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3153   001970  0E00               	movlw	0
  3154   001972  ECEE  F00C         	call	_I2C_2_Master_Read
  3155   001976  6E0B               	movwf	??_color_read_Blue^0,c
  3156   001978  500B               	movf	??_color_read_Blue^0,w,c
  3157   00197A  6E0D               	movwf	(??_color_read_Blue+2)^0,c
  3158   00197C  6A0C               	clrf	(??_color_read_Blue+1)^0,c
  3159   00197E  500E               	movf	color_read_Blue@tmp^0,w,c
  3160   001980  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
  3161   001982  6E0E               	movwf	color_read_Blue@tmp^0,c
  3162   001984  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
  3163   001986  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
  3164   001988  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
  3165                           
  3166                           ;../color.c: 54:  I2C_2_Master_Stop();
  3167   00198A  EC17  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3168   00198E                     
  3169                           ;../color.c: 55:  return tmp;
  3170   00198E  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
  3171   001992  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3172   001996  0012               	return		;funcret
  3173   001998                     __end_of_color_read_Blue:
  3174                           	callstack 0
  3175                           
  3176 ;; *************** function _I2C_2_Master_RepStart *****************
  3177 ;; Defined at:
  3178 ;;		line 33 in file "../i2c.c"
  3179 ;; Parameters:    Size  Location     Type
  3180 ;;		None
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;		None
  3183 ;; Return value:  Size  Location     Type
  3184 ;;                  1    wreg      void 
  3185 ;; Registers used:
  3186 ;;		wreg, status,2, status,0, cstack
  3187 ;; Tracked objects:
  3188 ;;		On entry : 0/0
  3189 ;;		On exit  : 0/0
  3190 ;;		Unchanged: 0/0
  3191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3196 ;;Total ram usage:        0 bytes
  3197 ;; Hardware stack levels used: 1
  3198 ;; Hardware stack levels required when called: 3
  3199 ;; This function calls:
  3200 ;;		_I2C_2_Master_Idle
  3201 ;; This function is called by:
  3202 ;;		_color_read_Red
  3203 ;;		_color_read_Blue
  3204 ;;		_color_read_Green
  3205 ;;		_color_read_Clear
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209                           	psect	text20
  3210   001C24                     __ptext20:
  3211                           	callstack 0
  3212   001C24                     _I2C_2_Master_RepStart:
  3213                           	callstack 26
  3214   001C24                     
  3215                           ;../i2c.c: 35:   I2C_2_Master_Idle();
  3216   001C24  ECBA  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3217   001C28                     
  3218                           ;../i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3219   001C28  010E               	movlb	14	; () banked
  3220   001C2A  83DA               	bsf	218,1,b	;volatile
  3221   001C2C                     
  3222                           ; BSR set to: 14
  3223   001C2C  0012               	return		;funcret
  3224   001C2E                     __end_of_I2C_2_Master_RepStart:
  3225                           	callstack 0
  3226                           
  3227 ;; *************** function _I2C_2_Master_Read *****************
  3228 ;; Defined at:
  3229 ;;		line 51 in file "../i2c.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;  ack             1    wreg     unsigned char 
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;  ack             1    6[COMRAM] unsigned char 
  3234 ;;  tmp             1    7[COMRAM] unsigned char 
  3235 ;; Return value:  Size  Location     Type
  3236 ;;                  1    wreg      unsigned char 
  3237 ;; Registers used:
  3238 ;;		wreg, status,2, status,0, cstack
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3245 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3246 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3247 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3248 ;;Total ram usage:        3 bytes
  3249 ;; Hardware stack levels used: 1
  3250 ;; Hardware stack levels required when called: 3
  3251 ;; This function calls:
  3252 ;;		_I2C_2_Master_Idle
  3253 ;; This function is called by:
  3254 ;;		_color_read_Red
  3255 ;;		_color_read_Blue
  3256 ;;		_color_read_Green
  3257 ;;		_color_read_Clear
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           	psect	text21
  3262   0019DC                     __ptext21:
  3263                           	callstack 0
  3264   0019DC                     _I2C_2_Master_Read:
  3265                           	callstack 26
  3266                           
  3267                           ; BSR set to: 14
  3268                           ;incstack = 0
  3269                           ;I2C_2_Master_Read@ack stored from wreg
  3270   0019DC  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  3271   0019DE                     
  3272                           ;../i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);../i2c.c: 52: {;../i2c
      +                          .c: 53:   unsigned char tmp;;../i2c.c: 54:   I2C_2_Master_Idle();
  3273   0019DE  ECBA  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3274   0019E2                     
  3275                           ;../i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3276   0019E2  010E               	movlb	14	; () banked
  3277   0019E4  87DA               	bsf	218,3,b	;volatile
  3278                           
  3279                           ;../i2c.c: 56:   I2C_2_Master_Idle();
  3280   0019E6  ECBA  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3281   0019EA                     
  3282                           ;../i2c.c: 57:   tmp = SSP2BUF;
  3283   0019EA  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3284                           
  3285                           ;../i2c.c: 58:   I2C_2_Master_Idle();
  3286   0019EE  ECBA  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3287   0019F2                     
  3288                           ;../i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3289   0019F2  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  3290   0019F4  B4D8               	btfsc	status,2,c
  3291   0019F6  EFFF  F00C         	goto	u1001
  3292   0019FA  EF03  F00D         	goto	u1000
  3293   0019FE                     u1001:
  3294   0019FE  6A06               	clrf	??_I2C_2_Master_Read^0,c
  3295   001A00  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  3296   001A02  EF04  F00D         	goto	u1018
  3297   001A06                     u1000:
  3298   001A06  6A06               	clrf	??_I2C_2_Master_Read^0,c
  3299   001A08                     u1018:
  3300   001A08  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  3301   001A0A  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  3302   001A0C  010E               	movlb	14	; () banked
  3303   001A0E  51DA               	movf	218,w,b	;volatile
  3304   001A10  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  3305   001A12  0BDF               	andlw	-33
  3306   001A14  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  3307   001A16  6FDA               	movwf	218,b	;volatile
  3308   001A18                     
  3309                           ; BSR set to: 14
  3310                           ;../i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3311   001A18  89DA               	bsf	218,4,b	;volatile
  3312   001A1A                     
  3313                           ; BSR set to: 14
  3314                           ;../i2c.c: 61:   return tmp;
  3315   001A1A  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  3316   001A1C                     
  3317                           ; BSR set to: 14
  3318   001A1C  0012               	return		;funcret
  3319   001A1E                     __end_of_I2C_2_Master_Read:
  3320                           	callstack 0
  3321                           
  3322 ;; *************** function _color_click_init *****************
  3323 ;; Defined at:
  3324 ;;		line 5 in file "../color.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;		None
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;		None
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  1    wreg      void 
  3331 ;; Registers used:
  3332 ;;		wreg, status,2, status,0, cstack
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3340 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3341 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3342 ;;Total ram usage:        1 bytes
  3343 ;; Hardware stack levels used: 1
  3344 ;; Hardware stack levels required when called: 5
  3345 ;; This function calls:
  3346 ;;		_I2C_2_Master_Init
  3347 ;;		_color_writetoaddr
  3348 ;; This function is called by:
  3349 ;;		_main
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353                           	psect	text22
  3354   001A5E                     __ptext22:
  3355                           	callstack 0
  3356   001A5E                     _color_click_init:
  3357                           	callstack 25
  3358   001A5E                     
  3359                           ;../color.c: 8:     I2C_2_Master_Init();
  3360   001A5E  EC90  F00D         	call	_I2C_2_Master_Init	;wreg free
  3361   001A62                     
  3362                           ;../color.c: 11:   color_writetoaddr(0x00, 0x01);
  3363   001A62  0E01               	movlw	1
  3364   001A64  6E07               	movwf	color_writetoaddr@value^0,c
  3365   001A66  0E00               	movlw	0
  3366   001A68  ECDE  F00D         	call	_color_writetoaddr
  3367   001A6C                     
  3368                           ;../color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3369   001A6C  0E3F               	movlw	63
  3370   001A6E  6E09               	movwf	??_color_click_init^0,c
  3371   001A70  0E55               	movlw	85
  3372   001A72                     u1527:
  3373   001A72  2EE8               	decfsz	wreg,f,c
  3374   001A74  D7FE               	bra	u1527
  3375   001A76  2E09               	decfsz	??_color_click_init^0,f,c
  3376   001A78  D7FC               	bra	u1527
  3377   001A7A  F000               	nop	
  3378   001A7C                     
  3379                           ;../color.c: 15:  color_writetoaddr(0x00, 0x03);
  3380   001A7C  0E03               	movlw	3
  3381   001A7E  6E07               	movwf	color_writetoaddr@value^0,c
  3382   001A80  0E00               	movlw	0
  3383   001A82  ECDE  F00D         	call	_color_writetoaddr
  3384   001A86                     
  3385                           ;../color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3386   001A86  0ED5               	movlw	213
  3387   001A88  6E07               	movwf	color_writetoaddr@value^0,c
  3388   001A8A  0E01               	movlw	1
  3389   001A8C  ECDE  F00D         	call	_color_writetoaddr
  3390   001A90  0012               	return		;funcret
  3391   001A92                     __end_of_color_click_init:
  3392                           	callstack 0
  3393                           
  3394 ;; *************** function _color_writetoaddr *****************
  3395 ;; Defined at:
  3396 ;;		line 21 in file "../color.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;  address         1    wreg     unsigned char 
  3399 ;;  value           1    6[COMRAM] unsigned char 
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;  address         1    7[COMRAM] unsigned char 
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  1    wreg      void 
  3404 ;; Registers used:
  3405 ;;		wreg, status,2, status,0, cstack
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3411 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3412 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3414 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3415 ;;Total ram usage:        2 bytes
  3416 ;; Hardware stack levels used: 1
  3417 ;; Hardware stack levels required when called: 4
  3418 ;; This function calls:
  3419 ;;		_I2C_2_Master_Start
  3420 ;;		_I2C_2_Master_Stop
  3421 ;;		_I2C_2_Master_Write
  3422 ;; This function is called by:
  3423 ;;		_color_click_init
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427                           	psect	text23
  3428   001BBC                     __ptext23:
  3429                           	callstack 0
  3430   001BBC                     _color_writetoaddr:
  3431                           	callstack 25
  3432                           
  3433                           ;incstack = 0
  3434                           ;color_writetoaddr@address stored from wreg
  3435   001BBC  6E08               	movwf	color_writetoaddr@address^0,c
  3436   001BBE                     
  3437                           ;../color.c: 22:     I2C_2_Master_Start();
  3438   001BBE  EC1C  F00E         	call	_I2C_2_Master_Start	;wreg free
  3439                           
  3440                           ;../color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  3441   001BC2  0E52               	movlw	82
  3442   001BC4  EC06  F00E         	call	_I2C_2_Master_Write
  3443                           
  3444                           ;../color.c: 24:     I2C_2_Master_Write(0x80 | address);
  3445   001BC8  5008               	movf	color_writetoaddr@address^0,w,c
  3446   001BCA  0980               	iorlw	128
  3447   001BCC  EC06  F00E         	call	_I2C_2_Master_Write
  3448                           
  3449                           ;../color.c: 25:     I2C_2_Master_Write(value);
  3450   001BD0  5007               	movf	color_writetoaddr@value^0,w,c
  3451   001BD2  EC06  F00E         	call	_I2C_2_Master_Write
  3452                           
  3453                           ;../color.c: 26:     I2C_2_Master_Stop();
  3454   001BD6  EC17  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3455   001BDA  0012               	return		;funcret
  3456   001BDC                     __end_of_color_writetoaddr:
  3457                           	callstack 0
  3458                           
  3459 ;; *************** function _I2C_2_Master_Write *****************
  3460 ;; Defined at:
  3461 ;;		line 45 in file "../i2c.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;  data_byte       1    wreg     unsigned char 
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;  data_byte       1    5[COMRAM] unsigned char 
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  1    wreg      void 
  3468 ;; Registers used:
  3469 ;;		wreg, status,2, status,0, cstack
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3476 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3478 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3479 ;;Total ram usage:        1 bytes
  3480 ;; Hardware stack levels used: 1
  3481 ;; Hardware stack levels required when called: 3
  3482 ;; This function calls:
  3483 ;;		_I2C_2_Master_Idle
  3484 ;; This function is called by:
  3485 ;;		_color_writetoaddr
  3486 ;;		_color_read_Red
  3487 ;;		_color_read_Blue
  3488 ;;		_color_read_Green
  3489 ;;		_color_read_Clear
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493                           	psect	text24
  3494   001C0C                     __ptext24:
  3495                           	callstack 0
  3496   001C0C                     _I2C_2_Master_Write:
  3497                           	callstack 26
  3498                           
  3499                           ;incstack = 0
  3500                           ;I2C_2_Master_Write@data_byte stored from wreg
  3501   001C0C  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  3502   001C0E                     
  3503                           ;../i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);../i2c.c: 46: {;../i2c.c
      +                          : 47:   I2C_2_Master_Idle();
  3504   001C0E  ECBA  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3505   001C12                     
  3506                           ;../i2c.c: 48:   SSP2BUF = data_byte;
  3507   001C12  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3508   001C16  0012               	return		;funcret
  3509   001C18                     __end_of_I2C_2_Master_Write:
  3510                           	callstack 0
  3511                           
  3512 ;; *************** function _I2C_2_Master_Stop *****************
  3513 ;; Defined at:
  3514 ;;		line 39 in file "../i2c.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;		None
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;		None
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  1    wreg      void 
  3521 ;; Registers used:
  3522 ;;		wreg, status,2, status,0, cstack
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3532 ;;Total ram usage:        0 bytes
  3533 ;; Hardware stack levels used: 1
  3534 ;; Hardware stack levels required when called: 3
  3535 ;; This function calls:
  3536 ;;		_I2C_2_Master_Idle
  3537 ;; This function is called by:
  3538 ;;		_color_writetoaddr
  3539 ;;		_color_read_Red
  3540 ;;		_color_read_Blue
  3541 ;;		_color_read_Green
  3542 ;;		_color_read_Clear
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546                           	psect	text25
  3547   001C2E                     __ptext25:
  3548                           	callstack 0
  3549   001C2E                     _I2C_2_Master_Stop:
  3550                           	callstack 26
  3551   001C2E                     
  3552                           ;../i2c.c: 41:   I2C_2_Master_Idle();
  3553   001C2E  ECBA  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3554   001C32                     
  3555                           ;../i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3556   001C32  010E               	movlb	14	; () banked
  3557   001C34  85DA               	bsf	218,2,b	;volatile
  3558   001C36                     
  3559                           ; BSR set to: 14
  3560   001C36  0012               	return		;funcret
  3561   001C38                     __end_of_I2C_2_Master_Stop:
  3562                           	callstack 0
  3563                           
  3564 ;; *************** function _I2C_2_Master_Start *****************
  3565 ;; Defined at:
  3566 ;;		line 27 in file "../i2c.c"
  3567 ;; Parameters:    Size  Location     Type
  3568 ;;		None
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;		None
  3571 ;; Return value:  Size  Location     Type
  3572 ;;                  1    wreg      void 
  3573 ;; Registers used:
  3574 ;;		wreg, status,2, status,0, cstack
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3584 ;;Total ram usage:        0 bytes
  3585 ;; Hardware stack levels used: 1
  3586 ;; Hardware stack levels required when called: 3
  3587 ;; This function calls:
  3588 ;;		_I2C_2_Master_Idle
  3589 ;; This function is called by:
  3590 ;;		_color_writetoaddr
  3591 ;;		_color_read_Red
  3592 ;;		_color_read_Blue
  3593 ;;		_color_read_Green
  3594 ;;		_color_read_Clear
  3595 ;; This function uses a non-reentrant model
  3596 ;;
  3597                           
  3598                           	psect	text26
  3599   001C38                     __ptext26:
  3600                           	callstack 0
  3601   001C38                     _I2C_2_Master_Start:
  3602                           	callstack 26
  3603   001C38                     
  3604                           ;../i2c.c: 29:   I2C_2_Master_Idle();
  3605   001C38  ECBA  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3606   001C3C                     
  3607                           ;../i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3608   001C3C  010E               	movlb	14	; () banked
  3609   001C3E  81DA               	bsf	218,0,b	;volatile
  3610   001C40                     
  3611                           ; BSR set to: 14
  3612   001C40  0012               	return		;funcret
  3613   001C42                     __end_of_I2C_2_Master_Start:
  3614                           	callstack 0
  3615                           
  3616 ;; *************** function _I2C_2_Master_Idle *****************
  3617 ;; Defined at:
  3618 ;;		line 22 in file "../i2c.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;		None
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;		None
  3623 ;; Return value:  Size  Location     Type
  3624 ;;                  1    wreg      void 
  3625 ;; Registers used:
  3626 ;;		wreg, status,2, status,0
  3627 ;; Tracked objects:
  3628 ;;		On entry : 0/0
  3629 ;;		On exit  : 0/0
  3630 ;;		Unchanged: 0/0
  3631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3634 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3635 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3636 ;;Total ram usage:        1 bytes
  3637 ;; Hardware stack levels used: 1
  3638 ;; Hardware stack levels required when called: 2
  3639 ;; This function calls:
  3640 ;;		Nothing
  3641 ;; This function is called by:
  3642 ;;		_I2C_2_Master_Start
  3643 ;;		_I2C_2_Master_RepStart
  3644 ;;		_I2C_2_Master_Stop
  3645 ;;		_I2C_2_Master_Write
  3646 ;;		_I2C_2_Master_Read
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650                           	psect	text27
  3651   001B74                     __ptext27:
  3652                           	callstack 0
  3653   001B74                     _I2C_2_Master_Idle:
  3654                           	callstack 26
  3655   001B74                     l64:
  3656   001B74  010E               	movlb	14	; () banked
  3657   001B76  B5D8               	btfsc	216,2,b	;volatile
  3658   001B78  EFC0  F00D         	goto	u851
  3659   001B7C  EFC2  F00D         	goto	u850
  3660   001B80                     u851:
  3661   001B80  EFBA  F00D         	goto	l64
  3662   001B84                     u850:
  3663   001B84                     
  3664                           ; BSR set to: 14
  3665   001B84  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3666   001B88  0E1F               	movlw	31
  3667   001B8A  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  3668   001B8C  A4D8               	btfss	status,2,c
  3669   001B8E  EFCB  F00D         	goto	u861
  3670   001B92  EFCD  F00D         	goto	u860
  3671   001B96                     u861:
  3672   001B96  EFBA  F00D         	goto	l64
  3673   001B9A                     u860:
  3674   001B9A                     
  3675                           ; BSR set to: 14
  3676   001B9A  0012               	return		;funcret
  3677   001B9C                     __end_of_I2C_2_Master_Idle:
  3678                           	callstack 0
  3679                           
  3680 ;; *************** function _I2C_2_Master_Init *****************
  3681 ;; Defined at:
  3682 ;;		line 4 in file "../i2c.c"
  3683 ;; Parameters:    Size  Location     Type
  3684 ;;		None
  3685 ;; Auto vars:     Size  Location     Type
  3686 ;;		None
  3687 ;; Return value:  Size  Location     Type
  3688 ;;                  1    wreg      void 
  3689 ;; Registers used:
  3690 ;;		wreg, status,2
  3691 ;; Tracked objects:
  3692 ;;		On entry : 0/0
  3693 ;;		On exit  : 0/0
  3694 ;;		Unchanged: 0/0
  3695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3700 ;;Total ram usage:        0 bytes
  3701 ;; Hardware stack levels used: 1
  3702 ;; Hardware stack levels required when called: 2
  3703 ;; This function calls:
  3704 ;;		Nothing
  3705 ;; This function is called by:
  3706 ;;		_color_click_init
  3707 ;;		_main
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711                           	psect	text28
  3712   001B20                     __ptext28:
  3713                           	callstack 0
  3714   001B20                     _I2C_2_Master_Init:
  3715                           	callstack 27
  3716   001B20                     
  3717                           ;../i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3718   001B20  010E               	movlb	14	; () banked
  3719   001B22  51D9               	movf	217,w,b	;volatile
  3720   001B24  0BF0               	andlw	-16
  3721   001B26  0908               	iorlw	8
  3722   001B28  6FD9               	movwf	217,b	;volatile
  3723   001B2A                     
  3724                           ; BSR set to: 14
  3725                           ;../i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3726   001B2A  8BD9               	bsf	217,5,b	;volatile
  3727                           
  3728                           ;../i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3729   001B2C  0E9F               	movlw	159
  3730   001B2E  6FD6               	movwf	214,b	;volatile
  3731   001B30                     
  3732                           ; BSR set to: 14
  3733                           ;../i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3734   001B30  8A84               	bsf	132,5,c	;volatile
  3735   001B32                     
  3736                           ; BSR set to: 14
  3737                           ;../i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3738   001B32  8C84               	bsf	132,6,c	;volatile
  3739   001B34                     
  3740                           ; BSR set to: 14
  3741                           ;../i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3742   001B34  9BA7               	bcf	167,5,b	;volatile
  3743   001B36                     
  3744                           ; BSR set to: 14
  3745                           ;../i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3746   001B36  9DA7               	bcf	167,6,b	;volatile
  3747                           
  3748                           ;../i2c.c: 16:   SSP2DATPPS=0x1D;
  3749   001B38  0E1D               	movlw	29
  3750   001B3A  6F1D               	movwf	29,b	;volatile
  3751                           
  3752                           ;../i2c.c: 17:   SSP2CLKPPS=0x1E;
  3753   001B3C  0E1E               	movlw	30
  3754   001B3E  6F1C               	movwf	28,b	;volatile
  3755                           
  3756                           ;../i2c.c: 18:   RD5PPS=0x1C;
  3757   001B40  0E1C               	movlw	28
  3758   001B42  6F6F               	movwf	111,b	;volatile
  3759                           
  3760                           ;../i2c.c: 19:   RD6PPS=0x1B;
  3761   001B44  0E1B               	movlw	27
  3762   001B46  6F70               	movwf	112,b	;volatile
  3763   001B48                     
  3764                           ; BSR set to: 14
  3765   001B48  0012               	return		;funcret
  3766   001B4A                     __end_of_I2C_2_Master_Init:
  3767                           	callstack 0
  3768                           
  3769 ;; *************** function _Interrupts_init *****************
  3770 ;; Defined at:
  3771 ;;		line 9 in file "../interrupts.c"
  3772 ;; Parameters:    Size  Location     Type
  3773 ;;		None
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;		None
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  1    wreg      void 
  3778 ;; Registers used:
  3779 ;;		None
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3789 ;;Total ram usage:        0 bytes
  3790 ;; Hardware stack levels used: 1
  3791 ;; Hardware stack levels required when called: 2
  3792 ;; This function calls:
  3793 ;;		Nothing
  3794 ;; This function is called by:
  3795 ;;		_main
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799                           	psect	text29
  3800   001C18                     __ptext29:
  3801                           	callstack 0
  3802   001C18                     _Interrupts_init:
  3803                           	callstack 28
  3804   001C18                     
  3805                           ;../interrupts.c: 15:     INTCONbits.PEIE=1;
  3806   001C18  8CF2               	bsf	242,6,c	;volatile
  3807                           
  3808                           ;../interrupts.c: 16:     PIE4bits.RC4IE=1;
  3809   001C1A  010E               	movlb	14	; () banked
  3810   001C1C  872D               	bsf	45,3,b	;volatile
  3811                           
  3812                           ;../interrupts.c: 17:     PIE4bits.TX4IE=0;
  3813   001C1E  952D               	bcf	45,2,b	;volatile
  3814                           
  3815                           ;../interrupts.c: 18:     INTCONbits.GIE=1;
  3816   001C20  8EF2               	bsf	242,7,c	;volatile
  3817   001C22                     
  3818                           ; BSR set to: 14
  3819   001C22  0012               	return		;funcret
  3820   001C24                     __end_of_Interrupts_init:
  3821                           	callstack 0
  3822                           
  3823 ;; *************** function _HighISR *****************
  3824 ;; Defined at:
  3825 ;;		line 36 in file "../interrupts.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;		None
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;		None
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  1    wreg      void 
  3832 ;; Registers used:
  3833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3841 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3842 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3843 ;;Total ram usage:        2 bytes
  3844 ;; Hardware stack levels used: 1
  3845 ;; Hardware stack levels required when called: 1
  3846 ;; This function calls:
  3847 ;;		_getCharFromTxBuf
  3848 ;;		_isDataInTxBuf
  3849 ;;		_putCharToRxBuf
  3850 ;; This function is called by:
  3851 ;;		Interrupt level 2
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           
  3855                           	psect	intcode
  3856   000008                     __pintcode:
  3857                           	callstack 0
  3858   000008                     _HighISR:
  3859                           	callstack 21
  3860                           
  3861                           ; BSR set to: 14
  3862                           ;incstack = 0
  3863   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3864   00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  3865   00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  3866   000012                     
  3867                           ;../interrupts.c: 38:     if (PIR4bits.RC4IF == 1){
  3868   000012  010E               	movlb	14	; () banked
  3869   000014  A737               	btfss	55,3,b	;volatile
  3870   000016  EF0F  F000         	goto	i2u109_41
  3871   00001A  EF11  F000         	goto	i2u109_40
  3872   00001E                     i2u109_41:
  3873   00001E  EF14  F000         	goto	i2l2148
  3874   000022                     i2u109_40:
  3875   000022                     
  3876                           ; BSR set to: 14
  3877                           ;../interrupts.c: 39:         putCharToRxBuf(RC4REG);
  3878   000022  51E3               	movf	227,w,b	;volatile
  3879   000024  ECA5  F00D         	call	_putCharToRxBuf
  3880   000028                     i2l2148:
  3881                           
  3882                           ;../interrupts.c: 41:     if (PIR4bits.TX4IF == 1 && PIE4bits.TX4IE==1){
  3883   000028  010E               	movlb	14	; () banked
  3884   00002A  A537               	btfss	55,2,b	;volatile
  3885   00002C  EF1A  F000         	goto	i2u110_41
  3886   000030  EF1C  F000         	goto	i2u110_40
  3887   000034                     i2u110_41:
  3888   000034  EF35  F000         	goto	i2l280
  3889   000038                     i2u110_40:
  3890   000038                     
  3891                           ; BSR set to: 14
  3892   000038  A52D               	btfss	45,2,b	;volatile
  3893   00003A  EF21  F000         	goto	i2u111_41
  3894   00003E  EF23  F000         	goto	i2u111_40
  3895   000042                     i2u111_41:
  3896   000042  EF35  F000         	goto	i2l280
  3897   000046                     i2u111_40:
  3898   000046                     
  3899                           ; BSR set to: 14
  3900                           ;../interrupts.c: 42:         if (isDataInTxBuf()==1 ) {TX4REG = getCharFromTxBuf();}
  3901   000046  ECFA  F00D         	call	_isDataInTxBuf	;wreg free
  3902   00004A  06E8               	decf	wreg,f,c
  3903   00004C  A4D8               	btfss	status,2,c
  3904   00004E  EF2B  F000         	goto	i2u112_41
  3905   000052  EF2D  F000         	goto	i2u112_40
  3906   000056                     i2u112_41:
  3907   000056  EF33  F000         	goto	i2l278
  3908   00005A                     i2u112_40:
  3909   00005A  EC7A  F00D         	call	_getCharFromTxBuf	;wreg free
  3910   00005E  010E               	movlb	14	; () banked
  3911   000060  6FE4               	movwf	228,b	;volatile
  3912   000062  EF35  F000         	goto	i2l280
  3913   000066                     i2l278:
  3914   000066  010E               	movlb	14	; () banked
  3915   000068  952D               	bcf	45,2,b	;volatile
  3916   00006A                     i2l280:
  3917                           
  3918                           ; BSR set to: 14
  3919   00006A  C004  FFDA         	movff	??_HighISR+1,fsr2h
  3920   00006E  C003  FFD9         	movff	??_HighISR,fsr2l
  3921   000072  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3922   000074  0011               	retfie		f
  3923   000076                     __end_of_HighISR:
  3924                           	callstack 0
  3925                           
  3926 ;; *************** function _putCharToRxBuf *****************
  3927 ;; Defined at:
  3928 ;;		line 57 in file "../serial.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;  byte            1    wreg     unsigned char 
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;  byte            1    0[COMRAM] unsigned char 
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  1    wreg      void 
  3935 ;; Registers used:
  3936 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3943 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3945 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3946 ;;Total ram usage:        1 bytes
  3947 ;; Hardware stack levels used: 1
  3948 ;; This function calls:
  3949 ;;		Nothing
  3950 ;; This function is called by:
  3951 ;;		_HighISR
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955                           	psect	text31
  3956   001B4A                     __ptext31:
  3957                           	callstack 0
  3958   001B4A                     _putCharToRxBuf:
  3959                           	callstack 21
  3960                           
  3961                           ; BSR set to: 14
  3962                           ;incstack = 0
  3963                           ;putCharToRxBuf@byte stored from wreg
  3964   001B4A  6E01               	movwf	putCharToRxBuf@byte^0,c
  3965   001B4C                     
  3966                           ;../serial.c: 58:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  3967   001B4C  0E13               	movlw	19
  3968   001B4E  645A               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  3969   001B50  EFAC  F00D         	goto	i2u105_41
  3970   001B54  EFAE  F00D         	goto	i2u105_40
  3971   001B58                     i2u105_41:
  3972   001B58  EFB0  F00D         	goto	i2l2068
  3973   001B5C                     i2u105_40:
  3974   001B5C  0E00               	movlw	0
  3975   001B5E  6E5A               	movwf	_RxBufWriteCnt^0,c	;volatile
  3976   001B60                     i2l2068:
  3977                           
  3978                           ;../serial.c: 59:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  3979   001B60  0EC3               	movlw	low _EUSART4RXbuf
  3980   001B62  245A               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  3981   001B64  6ED9               	movwf	fsr2l,c
  3982   001B66  6ADA               	clrf	fsr2h,c
  3983   001B68  0E00               	movlw	high _EUSART4RXbuf
  3984   001B6A  22DA               	addwfc	fsr2h,f,c
  3985   001B6C  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  3986   001B70  2A5A               	incf	_RxBufWriteCnt^0,f,c	;volatile
  3987   001B72  0012               	return		;funcret
  3988   001B74                     __end_of_putCharToRxBuf:
  3989                           	callstack 0
  3990                           
  3991 ;; *************** function _isDataInTxBuf *****************
  3992 ;; Defined at:
  3993 ;;		line 85 in file "../serial.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;		None
  3996 ;; Auto vars:     Size  Location     Type
  3997 ;;		None
  3998 ;; Return value:  Size  Location     Type
  3999 ;;                  1    wreg      unsigned char 
  4000 ;; Registers used:
  4001 ;;		wreg, status,2, status,0
  4002 ;; Tracked objects:
  4003 ;;		On entry : 0/0
  4004 ;;		On exit  : 0/0
  4005 ;;		Unchanged: 0/0
  4006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4011 ;;Total ram usage:        0 bytes
  4012 ;; Hardware stack levels used: 1
  4013 ;; This function calls:
  4014 ;;		Nothing
  4015 ;; This function is called by:
  4016 ;;		_HighISR
  4017 ;;		_sendTxBuf
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           
  4021                           	psect	text32
  4022   001BF4                     __ptext32:
  4023                           	callstack 0
  4024   001BF4                     _isDataInTxBuf:
  4025                           	callstack 21
  4026   001BF4                     
  4027                           ;../serial.c: 86:     return (TxBufWriteCnt!=TxBufReadCnt);
  4028   001BF4  5057               	movf	_TxBufReadCnt^0,w,c	;volatile
  4029   001BF6  1858               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  4030   001BF8  A4D8               	btfss	status,2,c
  4031   001BFA  EF01  F00E         	goto	i2u45_41
  4032   001BFE  EF04  F00E         	goto	i2u45_40
  4033   001C02                     i2u45_41:
  4034   001C02  0E01               	movlw	1
  4035   001C04  EF05  F00E         	goto	i2u46_40
  4036   001C08                     i2u45_40:
  4037   001C08  0E00               	movlw	0
  4038   001C0A                     i2u46_40:
  4039   001C0A  0012               	return		;funcret
  4040   001C0C                     __end_of_isDataInTxBuf:
  4041                           	callstack 0
  4042                           
  4043 ;; *************** function _getCharFromTxBuf *****************
  4044 ;; Defined at:
  4045 ;;		line 71 in file "../serial.c"
  4046 ;; Parameters:    Size  Location     Type
  4047 ;;		None
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;		None
  4050 ;; Return value:  Size  Location     Type
  4051 ;;                  1    wreg      unsigned char 
  4052 ;; Registers used:
  4053 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4054 ;; Tracked objects:
  4055 ;;		On entry : 0/0
  4056 ;;		On exit  : 0/0
  4057 ;;		Unchanged: 0/0
  4058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4061 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4062 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4063 ;;Total ram usage:        2 bytes
  4064 ;; Hardware stack levels used: 1
  4065 ;; This function calls:
  4066 ;;		Nothing
  4067 ;; This function is called by:
  4068 ;;		_HighISR
  4069 ;; This function uses a non-reentrant model
  4070 ;;
  4071                           
  4072                           	psect	text33
  4073   001AF4                     __ptext33:
  4074                           	callstack 0
  4075   001AF4                     _getCharFromTxBuf:
  4076                           	callstack 21
  4077   001AF4                     
  4078                           ;../serial.c: 72:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  4079   001AF4  0E3B               	movlw	59
  4080   001AF6  6457               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  4081   001AF8  EF80  F00D         	goto	i2u106_41
  4082   001AFC  EF82  F00D         	goto	i2u106_40
  4083   001B00                     i2u106_41:
  4084   001B00  EF84  F00D         	goto	i2l2076
  4085   001B04                     i2u106_40:
  4086   001B04  0E00               	movlw	0
  4087   001B06  6E57               	movwf	_TxBufReadCnt^0,c	;volatile
  4088   001B08                     i2l2076:
  4089                           
  4090                           ;../serial.c: 73:     return EUSART4TXbuf[TxBufReadCnt++];
  4091   001B08  2A57               	incf	_TxBufReadCnt^0,f,c	;volatile
  4092   001B0A  0457               	decf	_TxBufReadCnt^0,w,c	;volatile
  4093   001B0C  6E01               	movwf	??_getCharFromTxBuf^0,c
  4094   001B0E  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  4095   001B10  0E00               	movlw	low _EUSART4TXbuf
  4096   001B12  2401               	addwf	??_getCharFromTxBuf^0,w,c
  4097   001B14  6ED9               	movwf	fsr2l,c
  4098   001B16  0E01               	movlw	high _EUSART4TXbuf
  4099   001B18  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  4100   001B1A  6EDA               	movwf	fsr2h,c
  4101   001B1C  50DF               	movf	indf2,w,c
  4102   001B1E  0012               	return		;funcret
  4103   001B20                     __end_of_getCharFromTxBuf:
  4104                           	callstack 0
  4105                           
  4106                           	psect	rparam
  4107   000000                     
  4108                           	psect	temp
  4109   00005B                     btemp:
  4110                           	callstack 0
  4111   00005B                     	ds	1
  4112   000000                     int$flags	set	btemp
  4113   000000                     wtemp8	set	btemp+1
  4114   000000                     ttemp5	set	btemp+1
  4115   000000                     ttemp6	set	btemp+4
  4116   000000                     ttemp7	set	btemp+8
  4117                           
  4118                           	psect	idloc
  4119                           
  4120                           ;Config register IDLOC0 @ 0x200000
  4121                           ;	unspecified, using default values
  4122   200000                     	org	2097152
  4123   200000  0FFF               	dw	4095
  4124                           
  4125                           ;Config register IDLOC1 @ 0x200002
  4126                           ;	unspecified, using default values
  4127   200002                     	org	2097154
  4128   200002  0FFF               	dw	4095
  4129                           
  4130                           ;Config register IDLOC2 @ 0x200004
  4131                           ;	unspecified, using default values
  4132   200004                     	org	2097156
  4133   200004  0FFF               	dw	4095
  4134                           
  4135                           ;Config register IDLOC3 @ 0x200006
  4136                           ;	unspecified, using default values
  4137   200006                     	org	2097158
  4138   200006  0FFF               	dw	4095
  4139                           
  4140                           ;Config register IDLOC4 @ 0x200008
  4141                           ;	unspecified, using default values
  4142   200008                     	org	2097160
  4143   200008  0FFF               	dw	4095
  4144                           
  4145                           ;Config register IDLOC5 @ 0x20000A
  4146                           ;	unspecified, using default values
  4147   20000A                     	org	2097162
  4148   20000A  0FFF               	dw	4095
  4149                           
  4150                           ;Config register IDLOC6 @ 0x20000C
  4151                           ;	unspecified, using default values
  4152   20000C                     	org	2097164
  4153   20000C  0FFF               	dw	4095
  4154                           
  4155                           ;Config register IDLOC7 @ 0x20000E
  4156                           ;	unspecified, using default values
  4157   20000E                     	org	2097166
  4158   20000E  0FFF               	dw	4095
  4159                           
  4160                           	psect	config
  4161                           
  4162                           ;Config register CONFIG1L @ 0x300000
  4163                           ;	External Oscillator mode Selection bits
  4164                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4165                           ;	Power-up default value for COSC bits
  4166                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4167   300000                     	org	3145728
  4168   300000  AA                 	db	170
  4169                           
  4170                           ;Config register CONFIG1H @ 0x300001
  4171                           ;	unspecified, using default values
  4172                           ;	Clock Out Enable bit
  4173                           ;	CLKOUTEN = 0x1, unprogrammed default
  4174                           ;	Clock Switch Enable bit
  4175                           ;	CSWEN = 0x1, unprogrammed default
  4176                           ;	Fail-Safe Clock Monitor Enable bit
  4177                           ;	FCMEN = 0x1, unprogrammed default
  4178   300001                     	org	3145729
  4179   300001  FF                 	db	255
  4180                           
  4181                           ;Config register CONFIG2L @ 0x300002
  4182                           ;	unspecified, using default values
  4183                           ;	Master Clear Enable bit
  4184                           ;	MCLRE = 0x1, unprogrammed default
  4185                           ;	Power-up Timer Enable bit
  4186                           ;	PWRTE = 0x1, unprogrammed default
  4187                           ;	Low-power BOR enable bit
  4188                           ;	LPBOREN = 0x1, unprogrammed default
  4189                           ;	Brown-out Reset Enable bits
  4190                           ;	BOREN = 0x3, unprogrammed default
  4191   300002                     	org	3145730
  4192   300002  FF                 	db	255
  4193                           
  4194                           ;Config register CONFIG2H @ 0x300003
  4195                           ;	unspecified, using default values
  4196                           ;	Brown Out Reset Voltage selection bits
  4197                           ;	BORV = 0x3, unprogrammed default
  4198                           ;	ZCD Disable bit
  4199                           ;	ZCD = 0x1, unprogrammed default
  4200                           ;	PPSLOCK bit One-Way Set Enable bit
  4201                           ;	PPS1WAY = 0x1, unprogrammed default
  4202                           ;	Stack Full/Underflow Reset Enable bit
  4203                           ;	STVREN = 0x1, unprogrammed default
  4204                           ;	Debugger Enable bit
  4205                           ;	DEBUG = 0x1, unprogrammed default
  4206                           ;	Extended Instruction Set Enable bit
  4207                           ;	XINST = 0x1, unprogrammed default
  4208   300003                     	org	3145731
  4209   300003  FF                 	db	255
  4210                           
  4211                           ;Config register CONFIG3L @ 0x300004
  4212                           ;	WDT Period Select bits
  4213                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4214                           ;	WDT operating mode
  4215                           ;	WDTE = OFF, WDT Disabled
  4216   300004                     	org	3145732
  4217   300004  9F                 	db	159
  4218                           
  4219                           ;Config register CONFIG3H @ 0x300005
  4220                           ;	unspecified, using default values
  4221                           ;	WDT Window Select bits
  4222                           ;	WDTCWS = 0x7, unprogrammed default
  4223                           ;	WDT input clock selector
  4224                           ;	WDTCCS = 0x7, unprogrammed default
  4225   300005                     	org	3145733
  4226   300005  FF                 	db	255
  4227                           
  4228                           ;Config register CONFIG4L @ 0x300006
  4229                           ;	unspecified, using default values
  4230                           ;	Write Protection Block 0
  4231                           ;	WRT0 = 0x1, unprogrammed default
  4232                           ;	Write Protection Block 1
  4233                           ;	WRT1 = 0x1, unprogrammed default
  4234                           ;	Write Protection Block 2
  4235                           ;	WRT2 = 0x1, unprogrammed default
  4236                           ;	Write Protection Block 3
  4237                           ;	WRT3 = 0x1, unprogrammed default
  4238                           ;	Write Protection Block 3
  4239                           ;	WRT4 = 0x1, unprogrammed default
  4240                           ;	Write Protection Block 3
  4241                           ;	WRT5 = 0x1, unprogrammed default
  4242                           ;	Write Protection Block 3
  4243                           ;	WRT6 = 0x1, unprogrammed default
  4244                           ;	Write Protection Block 3
  4245                           ;	WRT7 = 0x1, unprogrammed default
  4246   300006                     	org	3145734
  4247   300006  FF                 	db	255
  4248                           
  4249                           ;Config register CONFIG4H @ 0x300007
  4250                           ;	unspecified, using default values
  4251                           ;	Configuration Register Write Protection bit
  4252                           ;	WRTC = 0x1, unprogrammed default
  4253                           ;	Boot Block Write Protection bit
  4254                           ;	WRTB = 0x1, unprogrammed default
  4255                           ;	Data EEPROM Write Protection bit
  4256                           ;	WRTD = 0x1, unprogrammed default
  4257                           ;	Scanner Enable bit
  4258                           ;	SCANE = 0x1, unprogrammed default
  4259                           ;	Low Voltage Programming Enable bit
  4260                           ;	LVP = 0x1, unprogrammed default
  4261   300007                     	org	3145735
  4262   300007  FF                 	db	255
  4263                           
  4264                           ;Config register CONFIG5L @ 0x300008
  4265                           ;	unspecified, using default values
  4266                           ;	UserNVM Program Memory Code Protection bit
  4267                           ;	CP = 0x1, unprogrammed default
  4268                           ;	DataNVM Memory Code Protection bit
  4269                           ;	CPD = 0x1, unprogrammed default
  4270   300008                     	org	3145736
  4271   300008  FF                 	db	255
  4272                           
  4273                           ;Config register CONFIG5H @ 0x300009
  4274                           ;	unspecified, using default values
  4275   300009                     	org	3145737
  4276   300009  FF                 	db	255
  4277                           
  4278                           ;Config register CONFIG6L @ 0x30000A
  4279                           ;	unspecified, using default values
  4280                           ;	Table Read Protection Block 0
  4281                           ;	EBTR0 = 0x1, unprogrammed default
  4282                           ;	Table Read Protection Block 1
  4283                           ;	EBTR1 = 0x1, unprogrammed default
  4284                           ;	Table Read Protection Block 2
  4285                           ;	EBTR2 = 0x1, unprogrammed default
  4286                           ;	Table Read Protection Block 3
  4287                           ;	EBTR3 = 0x1, unprogrammed default
  4288                           ;	Table Read Protection Block 4
  4289                           ;	EBTR4 = 0x1, unprogrammed default
  4290                           ;	Table Read Protection Block 5
  4291                           ;	EBTR5 = 0x1, unprogrammed default
  4292                           ;	Table Read Protection Block 6
  4293                           ;	EBTR6 = 0x1, unprogrammed default
  4294                           ;	Table Read Protection Block 7
  4295                           ;	EBTR7 = 0x1, unprogrammed default
  4296   30000A                     	org	3145738
  4297   30000A  FF                 	db	255
  4298                           
  4299                           ;Config register CONFIG6H @ 0x30000B
  4300                           ;	unspecified, using default values
  4301                           ;	Boot Block Table Read Protection bit
  4302                           ;	EBTRB = 0x1, unprogrammed default
  4303   30000B                     	org	3145739
  4304   30000B  FF                 	db	255
  4305                           tosu	equ	0xFFF
  4306                           tosh	equ	0xFFE
  4307                           tosl	equ	0xFFD
  4308                           stkptr	equ	0xFFC
  4309                           pclatu	equ	0xFFB
  4310                           pclath	equ	0xFFA
  4311                           pcl	equ	0xFF9
  4312                           tblptru	equ	0xFF8
  4313                           tblptrh	equ	0xFF7
  4314                           tblptrl	equ	0xFF6
  4315                           tablat	equ	0xFF5
  4316                           prodh	equ	0xFF4
  4317                           prodl	equ	0xFF3
  4318                           indf0	equ	0xFEF
  4319                           postinc0	equ	0xFEE
  4320                           postdec0	equ	0xFED
  4321                           preinc0	equ	0xFEC
  4322                           plusw0	equ	0xFEB
  4323                           fsr0h	equ	0xFEA
  4324                           fsr0l	equ	0xFE9
  4325                           wreg	equ	0xFE8
  4326                           indf1	equ	0xFE7
  4327                           postinc1	equ	0xFE6
  4328                           postdec1	equ	0xFE5
  4329                           preinc1	equ	0xFE4
  4330                           plusw1	equ	0xFE3
  4331                           fsr1h	equ	0xFE2
  4332                           fsr1l	equ	0xFE1
  4333                           bsr	equ	0xFE0
  4334                           indf2	equ	0xFDF
  4335                           postinc2	equ	0xFDE
  4336                           postdec2	equ	0xFDD
  4337                           preinc2	equ	0xFDC
  4338                           plusw2	equ	0xFDB
  4339                           fsr2h	equ	0xFDA
  4340                           fsr2l	equ	0xFD9
  4341                           status	equ	0xFD8

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     99     156
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2118$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2065$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2065$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    S851DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    S851DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                68    68      0    8895
                                             31 BANK0     68    68      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                   _color_click_init
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                    _initDCmotorsPWM
                         _initUSART4
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    7316
                                              6 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6830
                                             84 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    6369
                                             66 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4802
                                             31 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2533
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1177
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              5 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Green                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Clear                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Blue                                      7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              2     2      0      22
                                              2 COMRAM     2     2      0
                   _getCharFromTxBuf
                      _isDataInTxBuf
                     _putCharToRxBuf
 ---------------------------------------------------------------------------------
 (10) _putCharToRxBuf                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _isDataInTxBuf                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _getCharFromTxBuf                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_read_Blue
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Clear
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Green
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Red
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 _HighISR (ROOT)
   _getCharFromTxBuf
   _isDataInTxBuf
   _putCharToRxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     63      9C       5       97.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBIGSFRhlllhl     52      0       0      43        0.0%
BITBIGSFRhlllll     37      0       0      45        0.0%
BITBIGSFRhhhhl      32      0       0      33        0.0%
BITBIGSFRlllhll     2A      0       0      56        0.0%
BITBIGSFRlllll      26      0       0      60        0.0%
BITBIGSFRllhh       20      0       0      48        0.0%
BITBIGSFRlllhhh     1E      0       0      50        0.0%
BITBIGSFRhhhlll     17      0       0      37        0.0%
BITBIGSFRlllhhh     11      0       0      51        0.0%
BITBIGSFRlllhll      F      0       0      58        0.0%
BITBIGSFRhhhlhh      E      0       0      34        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRllhl        C      0       0      49        0.0%
BITBIGSFRlllhll      9      0       0      57        0.0%
BITBIGSFRhlllll      8      0       0      46        0.0%
BITBIGSFRllllh       6      0       0      59        0.0%
BITBIGSFRlllhll      6      0       0      55        0.0%
BITBIGSFRhhhlll      6      0       0      38        0.0%
BITBIGSFRlllhlh      5      0       0      54        0.0%
BITBIGSFRlllhhl      3      0       0      53        0.0%
BITBIGSFRhllllh      2      0       0      44        0.0%
BITBIGSFRhhhllh      2      0       0      36        0.0%
BITBIGSFRhlllhh      1      0       0      42        0.0%
BITBIGSFRhlhhh       1      0       0      39        0.0%
BITBIGSFRhhhlhl      1      0       0      35        0.0%
BITBIGSFRlllhhh      1      0       0      52        0.0%
BITBIGSFRhlhhl       1      0       0      40        0.0%
BITBIGSFRhllh        1      0       0      41        0.0%
BITBIGSFRlh          1      0       0      47        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     132      61        0.0%
DATA                 0      0     132       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Mar 09 17:18:36 2023

               _color_read_Red 1858                _color_read_Blue 1948                             l22 1BDA  
                           l31 18F6                             l25 18A6                             l34 1946  
                           l19 1A90                             l28 1996                             l61 1B48  
                           l70 1C40                             l64 1B74                             l73 1C2C  
                           l82 1A1C                             l67 1B9A                             l76 1C36  
                           l79 1C16               _color_read_Clear 18F8               _color_read_Green 18A8  
            ??_Interrupts_init 0005                            l133 173A                            l331 1BF2  
                          l235 1540                            l271 1C22                            l319 1BBA  
                          l328 1BDE                            l337 1AF2                            l486 1214  
                          l499 1378                            u850 1B84                            u851 1B80  
                          u860 1B9A                            u861 1B96                            _abs 1A1E  
                          _pad 173C                            wreg 000FE8                           l1102 14C6  
                         l2000 193E                           l1112 1A54                           l2010 16E6  
                         l1050 1806                           l1115 1A5C                           ?_abs 0017  
                         l2020 1722                           l2012 170A                           l2004 16AC  
                         l1108 1856                           l2022 172C                           l2014 1714  
                         l2006 16BC                           l2030 1BA6                           l1127 16AA  
                         l1135 19DA                           l2024 172E                           l2016 1716  
                         l2008 16E2                           l2040 1BB8                           l2032 1BA8  
                         l2200 10A0                           l1072 175E                           l1081 0E9E  
                         l2042 1C18                           l2026 1738                           l2018 1720  
                         l2034 1BAA                           l2210 10F6                           l2202 10C0  
                         l1138 1C42                           l1083 0EA6                           l2036 1BB4  
                         l2028 1B9C                           l2060 1AD6                           l2220 114A  
                         l2212 1102                           l2204 10C4                           l1076 17B4  
                         l1084 0EEC                           l2300 0E56                           l2038 1BB6  
                         l2062 1ADA                           l2230 11BE                           l2222 115C  
                         l2214 1120                           l2206 10D2                           l2310 0EC4  
                         l2302 0E76                           l1095 108C                           l2056 1AC4  
                         l2224 118A                           l2216 1128                           l2232 11C4  
                         l2208 10F2                           l2240 1216                           l2320 0EFC  
                         l2312 0ED4                           l2304 0E92                           l2400 14D4  
                         l2058 1AC8                           l2234 11D4                           l2226 11AA  
                         l2218 113C                           l2250 125A                           l2242 121A  
                         l2322 0F02                           l2330 0FF4                           l2314 0EE0  
                         l2306 0EAE                           l2410 14F2                           l2402 14DA  
                         l2236 11F4                           l2228 11AC                           l2260 12C2  
                         l2252 127A                           l2244 1228                           l2180 1610  
                         l2340 105C                           l2332 100E                           l2324 0F84  
                         l2316 0EE8                           l2308 0EBE                           l2420 150E  
                         l2412 14FA                           l2404 14DE                           l2270 1338  
                         l2262 12F0                           l2254 1298                           l2246 1248  
                         l2182 162E                           l2174 15E2                           l2190 19A4  
                         l2342 106C                           l2334 102C                           l2326 0F8A  
                         l2318 0EF4                           l2350 13AC                           l2430 152E  
                         l2422 1516                           l2414 14FE                           l2406 14E2  
                         l2272 1358                           l2264 1310                           l2256 12A0  
                         l2248 124C                           l2184 1664                           l2176 15F4  
                         l2192 19B6                           l2280 1756                           l2336 1046  
                         l2328 0F90                           l2360 1406                           l2352 13BA  
                         l2440 1538                           l2432 1530                           l2424 1522  
                         l2416 1502                           l2408 14EA                           l2266 1322  
                         l2258 12B4                           l2290 1A1E                           l2178 1606  
                         l2194 19BA                           l2282 176A                           l2338 1056  
                         l2362 145C                           l2354 13BE                           l2370 149E  
                         l2346 137A                           l2450 15B4                           l2442 153A  
                         l2434 1532                           l2426 1526                           l2418 1506  
                         l2196 108E                           l2268 1328                           l2292 1A38  
                         l2188 1998                           l2284 177E                           l2276 173C  
                         l2356 13CE                           l2348 139E                           l2380 1830  
                         l2452 15C0                           l2444 153C                           l2436 1534  
                         l2428 152A                           l2198 1092                           l2286 1782  
                         l2278 174A                           l2294 0E12                           l2366 148C  
                         l2358 13EA                           l2382 184C                           l2390 17D0  
                         l2446 154E                           l2438 1536                           l2288 17A0  
                         l2296 0E32                           l2376 1808                           l2392 17D8  
                         l2448 157E                           l1930 1B32                           l1826 1B74  
                         l2298 0E46                           l2378 1814                           l2394 17F4  
                         l2386 17B6                           l1932 1B34                           l1924 1B20  
                         l1828 1B84                           l1940 1C28                           l2388 17C8  
                         l1934 1B36                           l1926 1B2A                           l1950 1A18  
                         l1942 19DE                           l2398 14C8                           l1928 1B30  
                         l1936 1BBE                           l1952 1A1A                           l1944 19E2  
                         l1882 1C38                           l1890 1C2E                           l1970 1A5E  
                         l1946 19EA                           l1938 1C24                           l1884 1C3C  
                         l1892 1C32                           l1972 1A62                           l1948 19F2  
                         l1980 1858                           l1956 1BDE                           l1886 1C0E  
                         l1974 1A6C                           l1982 189E                           l1958 1BEE  
                         ?_pad 0015                           l1888 1C12                           l1976 1A7C  
                         l1992 18A8                           l1978 1A86                           l1986 1948  
                         l1994 18EE                           l1988 198E                           l1998 18F8  
                         STR_1 0E01                           u1000 1A06                           u1001 19FE  
                         u1020 1BEE                           u1021 1BEA                           u1040 1AF2  
                         u1200 10A0                           u1041 1AEE                           u1201 109C  
                         u1018 1A08                           u1210 10D2                           u1211 10CE  
                         u1300 12C2                           u1221 10FC                           u1301 12BE  
                         u1230 1120                           u1310 12F0                           u1150 15F4  
                         u1231 111C                           u1311 12EC                           u1151 15F0  
                         u1240 114A                           u1320 1338                           u1160 1606  
                         u1400 0EBE                           u1241 1146                           u1321 1334  
                         u1161 1602                           u1401 0EBA                           u1250 118A  
                         u1170 162E                           u1330 174A                           u1410 0ED4  
                         u1251 1186                           u1171 162A                           u1331 1746  
                         u1411 0ED0                           u1260 11D4                           u1180 1664  
                         u1340 17A0                           u1420 100E                           u1500 154E  
                         u1261 11D0                           u1181 1660                           u1341 179C  
                         u1421 100A                           u1501 154A                           u1270 1228  
                         u1350 1A38                           u1190 19DA                           u1430 102C  
                         u1271 1224                           u1351 1A34                           u1191 19D6  
                         u1431 1028                           u1280 125A                           u1440 1046  
                         u1360 0E42                   _BAUD4CONbits 000EE9                           u1281 1256  
                         u1441 1042                           u1361 0E3C                           u1290 1298  
                         u1450 1056                           u1370 0E44                           u1291 1294  
                         u1451 1052                           u1380 0E56                           u1460 139E  
                         u1381 0E52                           u1461 139A                           u1517 15CC  
                         u1390 0E92                           u1470 13EA                           u1527 1A72  
                         u1391 0E8E                           u1471 13E6                           u1480 1406  
                         u1481 1402                           u1490 184C                           _T2PR 000FBC  
                         u1491 1848                           abs@a 0017                           _dbuf 00DC  
                         _main 14C8                           _dtoa 0E12                           _prec 00D9  
                         pad@i 001C                           pad@p 0019                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 001E                           fsr2l 000FD9                           btemp 005B  
                         start 0076         __end_of_color_read_Red 18A8                __end_of_HighISR 0076  
                 ___param_bank 000000                          ??_abs 0019                          ??_pad 001B  
              __end_of___aodiv 1216                          ?_main 0001                          ?_dtoa 0020  
              __end_of___aomod 137A                          i2l352 1B1E                          i2l280 006A  
                        i2l345 1B72                          i2l278 0066                          i2l359 1C0A  
                 vfpfcnvrt@fmt 0045        __end_of_sendCharSerial4 1BF4     __end_of_I2C_2_Master_Start 1C42  
   __end_of_I2C_2_Master_Write 1C18                          _flags 00DB                          _fputc 15E2  
                        _fputs 1998                          pad@fp 0015                          main@B 00AB  
                        main@C 00AF                          main@G 00AD                          _width 00D7  
                        main@R 00A9                          _putch 1C42                          dtoa@d 0022  
                        dtoa@i 0041                          dtoa@n 0038                          dtoa@p 0034  
                        dtoa@s 0040                          dtoa@w 0036                          tablat 000FF5  
                        ttemp5 005C                          ttemp6 005F                          ttemp7 0063  
                        status 000FD8                          wtemp8 005C                __end_of_sprintf 1808  
      __end_of_color_read_Blue 1998          _I2C_2_Master_RepStart 1C24             putCharToRxBuf@byte 0001  
              ?_color_read_Red 0009                __initialization 1A92                   __end_of_main 15E2  
                 __end_of_dtoa 108E                         ??_main 007F                         ??_dtoa 002A  
                __activetblptr 000001                         ?_fputc 0005                         ?_fputs 000E  
                       _CCPR1H 000FAA                         _CCPR2H 000FA6                         _CCPR3H 000F25  
                       _CCPR4H 000F21                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RE2PPS 000E74                         _RD5PPS 000E6F  
                       _RC7PPS 000E69                         _RE4PPS 000E76                         _RD6PPS 000E70  
                       i2l2070 1B70                         i2l2150 0038                         i2l2072 1AF4  
                       i2l2064 1B4C                         i2l2152 0046                         i2l2144 0012  
                       i2l2074 1B04                         i2l2066 1B5C                         i2l2154 005A  
                       i2l2146 0022                         i2l2076 1B08                         i2l2068 1B60  
                       i2l2148 0028                         i2l1536 1BF4                         _RG6PPS 000E88  
                    ??_HighISR 0003       __end_of_color_click_init 1A92                         _RX4PPS 000E15  
                       _TX4REG 000EE4                   _CCPTMRS0bits 000FAD                   vfprintf@cfmt 0055  
             _getCharFromTxBuf 1AF4                      ??___aodiv 0015                      ??___aomod 0015  
                       clear_0 1A98                         clear_1 1AA4                         isa$std 000001  
                       pad@buf 0017                         dtoa@fp 0020                         fputc@c 0005  
                       fputs@c 0012                         fputs@i 0013                         fputs@s 000E  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8               ?_sendCharSerial4 0001                         putch@c 0001  
             __end_of_vfprintf 1858              ??_initDCmotorsPWM 0007                      ??_sprintf 0057  
        __end_of_isDataInTxBuf 1C0C                     __accesstop 0060        __end_of__initialization 1AB2  
     __end_of_color_read_Clear 1948       __end_of_color_read_Green 18F8         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 000001               ?_color_read_Blue 0009                _Interrupts_init 1C18  
               __pcstackCOMRAM 0001                  __end_of_fputc 16AC                  __end_of_fputs 19DC  
                __end_of_putch 1C44                        ??_fputc 0009                        ??_fputs 0012  
                      ??_putch 0005                     __pbssBANK0 00C3                     __pbssBANK1 0100  
            _color_writetoaddr 1BBC                   _T2CLKCONbits 000FBF             ?_color_writetoaddr 0007  
          ??_color_writetoaddr 0008                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
                      i2u45_40 1C08                        i2u45_41 1C02                        i2u46_40 1C0A  
                      _SSP2ADD 000ED6                        _SSP2BUF 000ED5        __end_of_Interrupts_init 1C24  
       color_writetoaddr@value 0007               ??_color_read_Red 000B                        _HighISR 0008  
    __end_of_color_writetoaddr 1BDC             _I2C_2_Master_Start 1C38                     _initUSART4 1B9C  
           _I2C_2_Master_Write 1C0C                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000E        sendStringSerial4@string 0006                        ___aodiv 108E  
                      ___aomod 1216            ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 0060                   __psmallconst 0E00                        __pcinit 1A92  
                      __ramtop 0E00                        __ptext0 14C8                        __ptext1 17B6  
                      __ptext2 1808                        __ptext3 137A                        __ptext4 0E12  
                      __ptext5 173C                        __ptext6 1998                        __ptext7 15E2  
                      __ptext8 1C42                        __ptext9 1A1E                      _T2CONbits 000FBD  
                    _T2HLTbits 000FBE                  _RxBufWriteCnt 005A       __end_of_getCharFromTxBuf 1B20  
                      main@buf 0081                        _sprintf 17B6           ??_I2C_2_Master_Start 0006  
         ??_I2C_2_Master_Write 0006           end_of_initialization 1AB2                        fputc@fp 0007  
                      fputs@fp 0010              ?_color_click_init 0001             ??_color_click_init 0009  
            __end_of_vfpfcnvrt 14C8                        postdec2 000FDD                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE               vfpfcnvrt@convarg 004B  
                   ??_vfprintf 0055                _initDCmotorsPWM 16AC                      _PORTFbits 000F8E  
                    _TRISAbits 000F81                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISFbits 000F86                      _TRISGbits 000F87  
     color_writetoaddr@address 0008        ??_I2C_2_Master_RepStart 0006               ?_Interrupts_init 0001  
                  _CCP1CONbits 000FAB              ?_color_read_Clear 0009                   _EUSART4RXbuf 00C3  
                 _EUSART4TXbuf 0100                    _CCP2CONbits 000FA7              ?_color_read_Green 0009  
                  _CCP3CONbits 000F26                    ?_initUSART4 0001                    _CCP4CONbits 000F22  
    sendCharSerial4@charToSend 0005                     main@motorL 00B1                     main@motorR 00BA  
           ??_color_read_Clear 000B             ??_color_read_Green 000B                    vfpfcnvrt@ap 0047  
                  vfpfcnvrt@cp 0053                    vfpfcnvrt@fp 0043            color_read_Clear@tmp 000E  
          start_initialization 1A92                    __end_of_abs 1A5E                    __end_of_pad 17B6  
                _TxBufWriteCnt 0058            color_read_Green@tmp 000E        __end_of_initDCmotorsPWM 173C  
                  vfprintf@fmt 0062                 _putCharToRxBuf 1B4A                    __pbssCOMRAM 0057  
                __pcstackBANK0 0060               ___aodiv@dividend 0005                       ?_HighISR 0001  
                    _dtoa$2146 0032         __end_of_putCharToRxBuf 1B74                      __pintcode 0008  
                     ?___aodiv 0005                       ?___aomod 0005               ___aodiv@quotient 0017  
         I2C_2_Master_Read@ack 0007           I2C_2_Master_Read@tmp 0008                    __smallconst 0E00  
            _I2C_2_Master_Idle 1B74              _I2C_2_Master_Init 1B20              _I2C_2_Master_Read 19DC  
            _I2C_2_Master_Stop 1C2E                   _RxBufReadCnt 0059             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
     initDCmotorsPWM@PWMperiod 0005                       ?_sprintf 0066              ?_getCharFromTxBuf 0001  
           ??_getCharFromTxBuf 0001              _sendStringSerial4 1AC4            ??_I2C_2_Master_Idle 0005  
          ??_I2C_2_Master_Init 0005            ??_I2C_2_Master_Read 0006                       _LATAbits 000F79  
          ??_I2C_2_Master_Stop 0006                       _LATCbits 000F7B                  _isDataInTxBuf 1BF4  
                     _LATEbits 000F7D                       _LATFbits 000F7E                       _LATGbits 000F7F  
           ?_sendStringSerial4 0006                       _PIE4bits 000E2D                       i2u110_40 0038  
                     i2u110_41 0034                       i2u111_40 0046                       i2u111_41 0042  
                     i2u112_40 005A                       i2u112_41 0056                       i2u105_40 1B5C  
                     i2u105_41 1B58                       i2u106_40 1B04                       i2u106_41 1B00  
                     i2u109_40 0022                       i2u109_41 001E                       _PIR4bits 000E37  
              ?_putCharToRxBuf 0001               ?_initDCmotorsPWM 0005              ??_sendCharSerial4 0005  
                     _SSP2CON2 000EDA            ??_sendStringSerial4 0008                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 137A      __end_of_I2C_2_Master_Idle 1B9C      __end_of_I2C_2_Master_Init 1B4A  
    __end_of_I2C_2_Master_Read 1A1E      __end_of_I2C_2_Master_Stop 1C38    I2C_2_Master_Write@data_byte 0006  
            ??_color_read_Blue 000B                   _TxBufReadCnt 0057      __end_of_sendStringSerial4 1AF4  
               ?_isDataInTxBuf 0001  __end_of_I2C_2_Master_RepStart 1C2E             color_read_Blue@tmp 000E  
                 ??_initUSART4 0005                       __Hrparam 0000                     vfprintf@ap 0064  
                     __Lrparam 0000                     vfprintf@fp 0060                   __Lsmallconst 0E00  
                   ?_vfpfcnvrt 0043                ___aodiv@divisor 000D                ___aodiv@counter 0015  
                   _ANSELDbits 000EA7                     _ANSELFbits 000EB4                     sprintf@fmt 0068  
           __end_of_initUSART4 1BBC                       __ptext10 1216                       __ptext11 108E  
                     __ptext20 1C24                       __ptext12 1AC4                       __ptext21 19DC  
                     __ptext13 1BDC                       __ptext22 1A5E                       __ptext14 1B9C  
                     __ptext31 1B4A                       __ptext23 1BBC                       __ptext15 16AC  
                     __ptext32 1BF4                       __ptext24 1C0C                       __ptext16 1858  
                     __ptext33 1AF4                       __ptext25 1C2E                       __ptext17 18A8  
                     __ptext26 1C38                       __ptext18 18F8                       __ptext27 1B74  
                     __ptext19 1948                       __ptext28 1B20                       __ptext29 1C18  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       int$flags 005B                       _vfprintf 1808  
             ___aomod@dividend 0005                     _INTCONbits 000FF2                ??_isDataInTxBuf 0001  
                     intlevel2 0000                      sprintf@ap 0072                ___aomod@divisor 000D  
                  ??_vfpfcnvrt 0049                ___aomod@counter 0015               _color_click_init 1A5E  
                     sprintf@f 0074                       sprintf@s 0066                     _SSP2DATPPS 000E1D  
                   _SSP2CLKPPS 000E1C                     _TX4STAbits 000EE8                   ___aodiv@sign 0016  
              _sendCharSerial4 1BDC               ??_putCharToRxBuf 0001                   ___aomod@sign 0016  
