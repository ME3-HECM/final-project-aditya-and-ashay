

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Mar 08 19:57:05 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51   000000                     
    52                           ; Generated 06/04/2022 GMT
    53                           ; 
    54                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F67K40 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86   000000                     _RC4STAbits	set	3815
    87   000000                     _SP4BRGH	set	3814
    88   000000                     _SP4BRGL	set	3813
    89   000000                     _TX4STAbits	set	3816
    90   000000                     _BAUD4CONbits	set	3817
    91   000000                     _TX4REG	set	3812
    92   000000                     _LATFbits	set	3966
    93   000000                     _TRISFbits	set	3974
    94   000000                     _LATGbits	set	3967
    95   000000                     _TRISGbits	set	3975
    96   000000                     _TRISEbits	set	3973
    97   000000                     _SSP2CON2bits	set	3802
    98   000000                     _RX4PPS	set	3605
    99   000000                     _SSP2CLKPPS	set	3612
   100   000000                     _SSP2DATPPS	set	3613
   101   000000                     _ANSELDbits	set	3751
   102   000000                     _SSP2ADD	set	3798
   103   000000                     _SSP2CON1bits	set	3801
   104   000000                     _RC4REG	set	3811
   105   000000                     _LATCbits	set	3963
   106   000000                     _LATEbits	set	3965
   107   000000                     _TRISCbits	set	3971
   108   000000                     _SSP2CON2	set	3802
   109   000000                     _TRISDbits	set	3972
   110   000000                     _CCPR4H	set	3873
   111   000000                     _CCPR3H	set	3877
   112   000000                     _SSP2STAT	set	3800
   113   000000                     _ANSELFbits	set	3764
   114   000000                     _SSP2BUF	set	3797
   115   000000                     _PIE4bits	set	3629
   116   000000                     _RC7PPS	set	3689
   117   000000                     _RD5PPS	set	3695
   118   000000                     _RE2PPS	set	3700
   119   000000                     _RD6PPS	set	3696
   120   000000                     _PORTFbits	set	3982
   121   000000                     _T2PR	set	4028
   122   000000                     _T2CONbits	set	4029
   123   000000                     _CCPR2H	set	4006
   124   000000                     _CCPR1H	set	4010
   125   000000                     _TRISAbits	set	3969
   126   000000                     _RE4PPS	set	3702
   127   000000                     _RG6PPS	set	3720
   128   000000                     _INTCONbits	set	4082
   129   000000                     _T2CLKCONbits	set	4031
   130   000000                     _T2HLTbits	set	4030
   131   000000                     _CCP1CONbits	set	4011
   132   000000                     _CCPTMRS0bits	set	4013
   133   000000                     _CCP2CONbits	set	4007
   134   000000                     _LATAbits	set	3961
   135   000000                     _CCP3CONbits	set	3878
   136   000000                     _CCP4CONbits	set	3874
   137   000000                     _PIR4bits	set	3639
   138   000000                     _RC0PPS	set	3682
   139                           
   140                           	psect	smallconst
   141   000E00                     __psmallconst:
   142                           	callstack 0
   143   000E00  00                 	db	0
   144   000E01                     STR_1:
   145   000E01  2F                 	db	47
   146   000E02  2F                 	db	47
   147   000E03  20                 	db	32
   148   000E04  52                 	db	82	;'R'
   149   000E05  65                 	db	101	;'e'
   150   000E06  64                 	db	100	;'d'
   151   000E07  20                 	db	32
   152   000E08  3D                 	db	61	;'='
   153   000E09  20                 	db	32
   154   000E0A  25                 	db	37
   155   000E0B  64                 	db	100	;'d'
   156   000E0C  20                 	db	32
   157   000E0D  42                 	db	66	;'B'
   158   000E0E  6C                 	db	108	;'l'
   159   000E0F  75                 	db	117	;'u'
   160   000E10  65                 	db	101	;'e'
   161   000E11  20                 	db	32
   162   000E12  3D                 	db	61	;'='
   163   000E13  20                 	db	32
   164   000E14  25                 	db	37
   165   000E15  64                 	db	100	;'d'
   166   000E16  20                 	db	32
   167   000E17  47                 	db	71	;'G'
   168   000E18  72                 	db	114	;'r'
   169   000E19  65                 	db	101	;'e'
   170   000E1A  65                 	db	101	;'e'
   171   000E1B  6E                 	db	110	;'n'
   172   000E1C  20                 	db	32
   173   000E1D  3D                 	db	61	;'='
   174   000E1E  20                 	db	32
   175   000E1F  25                 	db	37
   176   000E20  64                 	db	100	;'d'
   177   000E21  20                 	db	32
   178   000E22  43                 	db	67	;'C'
   179   000E23  6C                 	db	108	;'l'
   180   000E24  65                 	db	101	;'e'
   181   000E25  61                 	db	97	;'a'
   182   000E26  72                 	db	114	;'r'
   183   000E27  20                 	db	32
   184   000E28  3D                 	db	61	;'='
   185   000E29  20                 	db	32
   186   000E2A  25                 	db	37
   187   000E2B  64                 	db	100	;'d'
   188   000E2C  20                 	db	32
   189   000E2D  2F                 	db	47
   190   000E2E  2F                 	db	47
   191   000E2F  00                 	db	0
   192   000E30  00                 	db	0	; dummy byte at the end
   193   000000                     
   194                           ; #config settings
   195                           
   196                           	psect	cinit
   197   001AB2                     __pcinit:
   198                           	callstack 0
   199   001AB2                     start_initialization:
   200                           	callstack 0
   201   001AB2                     __initialization:
   202                           	callstack 0
   203                           
   204                           ; Clear objects allocated to BANK1 (60 bytes)
   205   001AB2  EE01  F000         	lfsr	0,__pbssBANK1
   206   001AB6  0E3C               	movlw	60
   207   001AB8                     clear_0:
   208   001AB8  6AEE               	clrf	postinc0,c
   209   001ABA  06E8               	decf	wreg,f,c
   210   001ABC  E1FD               	bnz	clear_0
   211                           
   212                           ; Clear objects allocated to BANK0 (57 bytes)
   213   001ABE  EE00  F0C3         	lfsr	0,__pbssBANK0
   214   001AC2  0E39               	movlw	57
   215   001AC4                     clear_1:
   216   001AC4  6AEE               	clrf	postinc0,c
   217   001AC6  06E8               	decf	wreg,f,c
   218   001AC8  E1FD               	bnz	clear_1
   219                           
   220                           ; Clear objects allocated to COMRAM (4 bytes)
   221   001ACA  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   222   001ACC  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   223   001ACE  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   224   001AD0  6A57               	clrf	__pbssCOMRAM& (0+255),c
   225   001AD2                     end_of_initialization:
   226                           	callstack 0
   227   001AD2                     __end_of__initialization:
   228                           	callstack 0
   229   001AD2  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   230   001AD4  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   231   001AD6  0E00               	movlw	low (__Lsmallconst shr (0+16))
   232   001AD8  6EF8               	movwf	tblptru,c
   233   001ADA  0E0E               	movlw	high __Lsmallconst
   234   001ADC  6EF7               	movwf	tblptrh,c
   235   001ADE  0100               	movlb	0
   236   001AE0  EF74  F00A         	goto	_main	;jump to C main() function
   237                           
   238                           	psect	bssCOMRAM
   239   000057                     __pbssCOMRAM:
   240                           	callstack 0
   241   000057                     _TxBufReadCnt:
   242                           	callstack 0
   243   000057                     	ds	1
   244   000058                     _TxBufWriteCnt:
   245                           	callstack 0
   246   000058                     	ds	1
   247   000059                     _RxBufReadCnt:
   248                           	callstack 0
   249   000059                     	ds	1
   250   00005A                     _RxBufWriteCnt:
   251                           	callstack 0
   252   00005A                     	ds	1
   253                           
   254                           	psect	bssBANK0
   255   0000C3                     __pbssBANK0:
   256                           	callstack 0
   257   0000C3                     _EUSART4RXbuf:
   258                           	callstack 0
   259   0000C3                     	ds	20
   260   0000D7                     _width:
   261                           	callstack 0
   262   0000D7                     	ds	2
   263   0000D9                     _prec:
   264                           	callstack 0
   265   0000D9                     	ds	2
   266   0000DB                     _flags:
   267                           	callstack 0
   268   0000DB                     	ds	1
   269   0000DC                     _dbuf:
   270                           	callstack 0
   271   0000DC                     	ds	32
   272                           
   273                           	psect	bssBANK1
   274   000100                     __pbssBANK1:
   275                           	callstack 0
   276   000100                     _EUSART4TXbuf:
   277                           	callstack 0
   278   000100                     	ds	60
   279                           
   280                           	psect	cstackBANK0
   281   000060                     __pcstackBANK0:
   282                           	callstack 0
   283   000060                     ?_vfprintf:
   284                           	callstack 0
   285   000060                     vfprintf@fp:
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0x0
   289   000060                     	ds	2
   290   000062                     vfprintf@fmt:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x2
   294   000062                     	ds	2
   295   000064                     vfprintf@ap:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x4
   299   000064                     	ds	2
   300   000066                     ?_sprintf:
   301                           	callstack 0
   302   000066                     sprintf@s:
   303                           	callstack 0
   304                           
   305                           ; 2 bytes @ 0x6
   306   000066                     	ds	2
   307   000068                     sprintf@fmt:
   308                           	callstack 0
   309                           
   310                           ; 2 bytes @ 0x8
   311   000068                     	ds	10
   312   000072                     sprintf@ap:
   313                           	callstack 0
   314                           
   315                           ; 2 bytes @ 0x12
   316   000072                     	ds	2
   317   000074                     sprintf@f:
   318                           	callstack 0
   319                           
   320                           ; 11 bytes @ 0x14
   321   000074                     	ds	11
   322   00007F                     ??_main:
   323                           
   324                           ; 1 bytes @ 0x1F
   325   00007F                     	ds	2
   326   000081                     main@buf:
   327                           	callstack 0
   328                           
   329                           ; 40 bytes @ 0x21
   330   000081                     	ds	40
   331   0000A9                     main@R:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x49
   335   0000A9                     	ds	2
   336   0000AB                     main@B:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x4B
   340   0000AB                     	ds	2
   341   0000AD                     main@G:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x4D
   345   0000AD                     	ds	2
   346   0000AF                     main@C:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x4F
   350   0000AF                     	ds	2
   351   0000B1                     main@motorL:
   352                           	callstack 0
   353                           
   354                           ; 9 bytes @ 0x51
   355   0000B1                     	ds	9
   356   0000BA                     main@motorR:
   357                           	callstack 0
   358                           
   359                           ; 9 bytes @ 0x5A
   360   0000BA                     	ds	9
   361                           
   362                           	psect	cstackCOMRAM
   363   000001                     __pcstackCOMRAM:
   364                           	callstack 0
   365   000001                     ??_getCharFromTxBuf:
   366   000001                     putCharToRxBuf@byte:
   367                           	callstack 0
   368   000001                     
   369                           ; 1 bytes @ 0x0
   370   000001                     	ds	2
   371   000003                     ??_HighISR:
   372                           
   373                           ; 1 bytes @ 0x2
   374   000003                     	ds	2
   375   000005                     ??_I2C_2_Master_Idle:
   376   000005                     ?___aodiv:
   377                           	callstack 0
   378   000005                     ?___aomod:
   379                           	callstack 0
   380   000005                     sendCharSerial4@charToSend:
   381                           	callstack 0
   382   000005                     initDCmotorsPWM@PWMperiod:
   383                           	callstack 0
   384   000005                     fputc@c:
   385                           	callstack 0
   386   000005                     ___aodiv@dividend:
   387                           	callstack 0
   388   000005                     ___aomod@dividend:
   389                           	callstack 0
   390                           
   391                           ; 8 bytes @ 0x4
   392   000005                     	ds	1
   393   000006                     ??_I2C_2_Master_Read:
   394   000006                     I2C_2_Master_Write@data_byte:
   395                           	callstack 0
   396   000006                     sendStringSerial4@string:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0x5
   400   000006                     	ds	1
   401   000007                     color_writetoaddr@value:
   402                           	callstack 0
   403   000007                     I2C_2_Master_Read@ack:
   404                           	callstack 0
   405   000007                     fputc@fp:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x6
   409   000007                     	ds	1
   410   000008                     color_writetoaddr@address:
   411                           	callstack 0
   412   000008                     I2C_2_Master_Read@tmp:
   413                           	callstack 0
   414                           
   415                           ; 1 bytes @ 0x7
   416   000008                     	ds	1
   417   000009                     ??_fputc:
   418   000009                     ??_color_click_init:
   419   000009                     ?_color_read_Red:
   420                           	callstack 0
   421   000009                     ?_color_read_Blue:
   422                           	callstack 0
   423   000009                     ?_color_read_Green:
   424                           	callstack 0
   425   000009                     ?_color_read_Clear:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x8
   429   000009                     	ds	2
   430   00000B                     ??_color_read_Red:
   431   00000B                     ??_color_read_Blue:
   432   00000B                     ??_color_read_Green:
   433   00000B                     ??_color_read_Clear:
   434                           
   435                           ; 1 bytes @ 0xA
   436   00000B                     	ds	2
   437   00000D                     ___aodiv@divisor:
   438                           	callstack 0
   439   00000D                     ___aomod@divisor:
   440                           	callstack 0
   441                           
   442                           ; 8 bytes @ 0xC
   443   00000D                     	ds	1
   444   00000E                     color_read_Red@tmp:
   445                           	callstack 0
   446   00000E                     color_read_Blue@tmp:
   447                           	callstack 0
   448   00000E                     color_read_Green@tmp:
   449                           	callstack 0
   450   00000E                     color_read_Clear@tmp:
   451                           	callstack 0
   452   00000E                     fputs@s:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0xD
   456   00000E                     	ds	2
   457   000010                     fputs@fp:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0xF
   461   000010                     	ds	2
   462   000012                     fputs@c:
   463                           	callstack 0
   464                           
   465                           ; 1 bytes @ 0x11
   466   000012                     	ds	1
   467   000013                     fputs@i:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x12
   471   000013                     	ds	2
   472   000015                     ___aodiv@counter:
   473                           	callstack 0
   474   000015                     ___aomod@counter:
   475                           	callstack 0
   476   000015                     pad@fp:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x14
   480   000015                     	ds	1
   481   000016                     ___aodiv@sign:
   482                           	callstack 0
   483   000016                     ___aomod@sign:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0x15
   487   000016                     	ds	1
   488   000017                     ?_abs:
   489                           	callstack 0
   490   000017                     pad@buf:
   491                           	callstack 0
   492   000017                     abs@a:
   493                           	callstack 0
   494   000017                     ___aodiv@quotient:
   495                           	callstack 0
   496                           
   497                           ; 8 bytes @ 0x16
   498   000017                     	ds	2
   499   000019                     ??_abs:
   500   000019                     pad@p:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x18
   504   000019                     	ds	2
   505   00001B                     ??_pad:
   506                           
   507                           ; 1 bytes @ 0x1A
   508   00001B                     	ds	1
   509   00001C                     pad@i:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x1B
   513   00001C                     	ds	2
   514   00001E                     pad@w:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x1D
   518   00001E                     	ds	2
   519   000020                     dtoa@fp:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x1F
   523   000020                     	ds	2
   524   000022                     dtoa@d:
   525                           	callstack 0
   526                           
   527                           ; 8 bytes @ 0x21
   528   000022                     	ds	8
   529   00002A                     ??_dtoa:
   530                           
   531                           ; 1 bytes @ 0x29
   532   00002A                     	ds	8
   533   000032                     _dtoa$2146:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x31
   537   000032                     	ds	2
   538   000034                     dtoa@p:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x33
   542   000034                     	ds	2
   543   000036                     dtoa@w:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x35
   547   000036                     	ds	2
   548   000038                     dtoa@n:
   549                           	callstack 0
   550                           
   551                           ; 8 bytes @ 0x37
   552   000038                     	ds	8
   553   000040                     dtoa@s:
   554                           	callstack 0
   555                           
   556                           ; 1 bytes @ 0x3F
   557   000040                     	ds	1
   558   000041                     dtoa@i:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x40
   562   000041                     	ds	2
   563   000043                     vfpfcnvrt@fp:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x42
   567   000043                     	ds	2
   568   000045                     vfpfcnvrt@fmt:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x44
   572   000045                     	ds	2
   573   000047                     vfpfcnvrt@ap:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x46
   577   000047                     	ds	2
   578   000049                     ??_vfpfcnvrt:
   579                           
   580                           ; 1 bytes @ 0x48
   581   000049                     	ds	2
   582   00004B                     vfpfcnvrt@convarg:
   583                           	callstack 0
   584                           
   585                           ; 8 bytes @ 0x4A
   586   00004B                     	ds	8
   587   000053                     vfpfcnvrt@cp:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x52
   591   000053                     	ds	2
   592   000055                     vfprintf@cfmt:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x54
   596   000055                     	ds	2
   597   000057                     
   598                           ; 1 bytes @ 0x56
   599 ;;
   600 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   601 ;;
   602 ;; *************** function _main *****************
   603 ;; Defined at:
   604 ;;		line 19 in file "../main.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;		None
   607 ;; Auto vars:     Size  Location     Type
   608 ;;  buf            40   33[BANK0 ] unsigned char [40]
   609 ;;  C               2   79[BANK0 ] unsigned int 
   610 ;;  G               2   77[BANK0 ] unsigned int 
   611 ;;  B               2   75[BANK0 ] unsigned int 
   612 ;;  R               2   73[BANK0 ] unsigned int 
   613 ;;  motorR          9   90[BANK0 ] struct DC_motor
   614 ;;  motorL          9   81[BANK0 ] struct DC_motor
   615 ;; Return value:  Size  Location     Type
   616 ;;                  1    wreg      void 
   617 ;; Registers used:
   618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   619 ;; Tracked objects:
   620 ;;		On entry : 0/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   625 ;;      Locals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   626 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   627 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   628 ;;Total ram usage:       68 bytes
   629 ;; Hardware stack levels required when called: 10
   630 ;; This function calls:
   631 ;;		_I2C_2_Master_Init
   632 ;;		_Interrupts_init
   633 ;;		_color_click_init
   634 ;;		_color_read_Blue
   635 ;;		_color_read_Clear
   636 ;;		_color_read_Green
   637 ;;		_color_read_Red
   638 ;;		_initDCmotorsPWM
   639 ;;		_initUSART4
   640 ;;		_sendStringSerial4
   641 ;;		_sprintf
   642 ;; This function is called by:
   643 ;;		Startup code after reset
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           	psect	text0
   648   0014E8                     __ptext0:
   649                           	callstack 0
   650   0014E8                     _main:
   651                           	callstack 21
   652   0014E8                     
   653                           ;../main.c: 21:     initDCmotorsPWM(99);
   654   0014E8  0E00               	movlw	0
   655   0014EA  6E06               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   656   0014EC  0E63               	movlw	99
   657   0014EE  6E05               	movwf	initDCmotorsPWM@PWMperiod^0,c
   658   0014F0  EC66  F00B         	call	_initDCmotorsPWM	;wreg free
   659   0014F4                     
   660                           ;../main.c: 23:     struct DC_motor motorL, motorR;;../main.c: 25:     motorL.power=0;
   661   0014F4  0E00               	movlw	0
   662   0014F6  0100               	movlb	0	; () banked
   663   0014F8  6FB1               	movwf	main@motorL& (0+255),b
   664   0014FA                     
   665                           ; BSR set to: 0
   666                           ;../main.c: 26:     motorL.direction=1;
   667   0014FA  0E01               	movlw	1
   668   0014FC  6FB2               	movwf	(main@motorL+1)& (0+255),b
   669   0014FE                     
   670                           ; BSR set to: 0
   671                           ;../main.c: 27:     motorL.brakemode=1;
   672   0014FE  0E01               	movlw	1
   673   001500  6FB3               	movwf	(main@motorL+2)& (0+255),b
   674   001502                     
   675                           ; BSR set to: 0
   676                           ;../main.c: 28:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   677   001502  0EAA               	movlw	170
   678   001504  6FB6               	movwf	(main@motorL+5)& (0+255),b
   679   001506  0E0F               	movlw	15
   680   001508  6FB7               	movwf	(main@motorL+6)& (0+255),b
   681   00150A                     
   682                           ; BSR set to: 0
   683                           ;../main.c: 29:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   684   00150A  0EA6               	movlw	166
   685   00150C  6FB8               	movwf	(main@motorL+7)& (0+255),b
   686   00150E  0E0F               	movlw	15
   687   001510  6FB9               	movwf	(main@motorL+8)& (0+255),b
   688   001512                     
   689                           ; BSR set to: 0
   690                           ;../main.c: 30:     motorL.PWMperiod=99;
   691   001512  0E00               	movlw	0
   692   001514  6FB5               	movwf	(main@motorL+4)& (0+255),b
   693   001516  0E63               	movlw	99
   694   001518  6FB4               	movwf	(main@motorL+3)& (0+255),b
   695   00151A                     
   696                           ; BSR set to: 0
   697                           ;../main.c: 32:     motorR.power=0;
   698   00151A  0E00               	movlw	0
   699   00151C  6FBA               	movwf	main@motorR& (0+255),b
   700   00151E                     
   701                           ; BSR set to: 0
   702                           ;../main.c: 33:     motorR.direction=1;
   703   00151E  0E01               	movlw	1
   704   001520  6FBB               	movwf	(main@motorR+1)& (0+255),b
   705   001522                     
   706                           ; BSR set to: 0
   707                           ;../main.c: 34:     motorR.brakemode=1;
   708   001522  0E01               	movlw	1
   709   001524  6FBC               	movwf	(main@motorR+2)& (0+255),b
   710   001526                     
   711                           ; BSR set to: 0
   712                           ;../main.c: 35:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   713   001526  0E25               	movlw	37
   714   001528  6FBF               	movwf	(main@motorR+5)& (0+255),b
   715   00152A  0E0F               	movlw	15
   716   00152C  6FC0               	movwf	(main@motorR+6)& (0+255),b
   717   00152E                     
   718                           ; BSR set to: 0
   719                           ;../main.c: 36:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   720   00152E  0E21               	movlw	33
   721   001530  6FC1               	movwf	(main@motorR+7)& (0+255),b
   722   001532  0E0F               	movlw	15
   723   001534  6FC2               	movwf	(main@motorR+8)& (0+255),b
   724   001536                     
   725                           ; BSR set to: 0
   726                           ;../main.c: 37:     motorR.PWMperiod=99;
   727   001536  0E00               	movlw	0
   728   001538  6FBE               	movwf	(main@motorR+4)& (0+255),b
   729   00153A  0E63               	movlw	99
   730   00153C  6FBD               	movwf	(main@motorR+3)& (0+255),b
   731                           
   732                           ;../main.c: 41:     initUSART4();
   733   00153E  ECDE  F00D         	call	_initUSART4	;wreg free
   734   001542                     
   735                           ;../main.c: 42:     color_click_init();
   736   001542  EC3F  F00D         	call	_color_click_init	;wreg free
   737   001546                     
   738                           ;../main.c: 43:     Interrupts_init();
   739   001546  EC1C  F00E         	call	_Interrupts_init	;wreg free
   740   00154A                     
   741                           ;../main.c: 44:     I2C_2_Master_Init();
   742   00154A  ECA0  F00D         	call	_I2C_2_Master_Init	;wreg free
   743   00154E                     
   744                           ;../main.c: 48:     TRISGbits.TRISG1 = 0;
   745   00154E  9287               	bcf	135,1,c	;volatile
   746   001550                     
   747                           ;../main.c: 49:     TRISAbits.TRISA4 = 0;
   748   001550  9881               	bcf	129,4,c	;volatile
   749   001552                     
   750                           ;../main.c: 50:     TRISFbits.TRISF7 = 0;
   751   001552  9E86               	bcf	134,7,c	;volatile
   752   001554                     
   753                           ;../main.c: 52:     LATGbits.LATG1 = 1;
   754   001554  827F               	bsf	127,1,c	;volatile
   755   001556                     
   756                           ;../main.c: 53:     LATAbits.LATA4 = 1;
   757   001556  8879               	bsf	121,4,c	;volatile
   758   001558                     
   759                           ;../main.c: 54:     LATFbits.LATF7 = 1;
   760   001558  8E7E               	bsf	126,7,c	;volatile
   761   00155A                     
   762                           ;../main.c: 56:     TRISFbits.TRISF2 = 1;
   763   00155A  8486               	bsf	134,2,c	;volatile
   764   00155C                     
   765                           ;../main.c: 57:     ANSELFbits.ANSELF2=0;
   766   00155C  010E               	movlb	14	; () banked
   767   00155E  95B4               	bcf	180,2,b	;volatile
   768   001560                     l235:
   769   001560  B48E               	btfsc	142,2,c	;volatile
   770   001562  EFB5  F00A         	goto	u1501
   771   001566  EFB7  F00A         	goto	u1500
   772   00156A                     u1501:
   773   00156A  EFB0  F00A         	goto	l235
   774   00156E                     u1500:
   775   00156E                     
   776                           ;../main.c: 61:         unsigned int R = color_read_Red();
   777   00156E  EC3C  F00C         	call	_color_read_Red	;wreg free
   778   001572  C009  F0A9         	movff	?_color_read_Red,main@R
   779   001576  C00A  F0AA         	movff	?_color_read_Red+1,main@R+1
   780                           
   781                           ;../main.c: 62:         unsigned int B = color_read_Blue();
   782   00157A  ECB4  F00C         	call	_color_read_Blue	;wreg free
   783   00157E  C009  F0AB         	movff	?_color_read_Blue,main@B
   784   001582  C00A  F0AC         	movff	?_color_read_Blue+1,main@B+1
   785                           
   786                           ;../main.c: 63:         unsigned int G = color_read_Green();
   787   001586  EC64  F00C         	call	_color_read_Green	;wreg free
   788   00158A  C009  F0AD         	movff	?_color_read_Green,main@G
   789   00158E  C00A  F0AE         	movff	?_color_read_Green+1,main@G+1
   790                           
   791                           ;../main.c: 64:         unsigned int C = color_read_Clear();
   792   001592  EC8C  F00C         	call	_color_read_Clear	;wreg free
   793   001596  C009  F0AF         	movff	?_color_read_Clear,main@C
   794   00159A  C00A  F0B0         	movff	?_color_read_Clear+1,main@C+1
   795   00159E                     
   796                           ;../main.c: 66:         char buf[40];;../main.c: 67:         sprintf(buf,"// Red = %d Bl
      +                          ue = %d Green = %d Clear = %d //",R,B,G,C);
   797   00159E  0E81               	movlw	low main@buf
   798   0015A0  0100               	movlb	0	; () banked
   799   0015A2  6F66               	movwf	sprintf@s& (0+255),b
   800   0015A4  0E00               	movlw	high main@buf
   801   0015A6  6F67               	movwf	(sprintf@s+1)& (0+255),b
   802   0015A8  0E01               	movlw	low STR_1
   803   0015AA  6F68               	movwf	sprintf@fmt& (0+255),b
   804   0015AC  0E0E               	movlw	high STR_1
   805   0015AE  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
   806   0015B0  C0A9  F06A         	movff	main@R,?_sprintf+4
   807   0015B4  C0AA  F06B         	movff	main@R+1,?_sprintf+5
   808   0015B8  C0AB  F06C         	movff	main@B,?_sprintf+6
   809   0015BC  C0AC  F06D         	movff	main@B+1,?_sprintf+7
   810   0015C0  C0AD  F06E         	movff	main@G,?_sprintf+8
   811   0015C4  C0AE  F06F         	movff	main@G+1,?_sprintf+9
   812   0015C8  C0AF  F070         	movff	main@C,?_sprintf+10
   813   0015CC  C0B0  F071         	movff	main@C+1,?_sprintf+11
   814   0015D0  ECEB  F00B         	call	_sprintf	;wreg free
   815   0015D4                     
   816                           ;../main.c: 68:         sendStringSerial4(buf);
   817   0015D4  0E81               	movlw	low main@buf
   818   0015D6  6E06               	movwf	sendStringSerial4@string^0,c
   819   0015D8  0E00               	movlw	high main@buf
   820   0015DA  6E07               	movwf	(sendStringSerial4@string+1)^0,c
   821   0015DC  EC72  F00D         	call	_sendStringSerial4	;wreg free
   822   0015E0                     
   823                           ;../main.c: 69:         _delay((unsigned long)((1000)*(64000000/4000.0)));
   824   0015E0  0E52               	movlw	82
   825   0015E2  0100               	movlb	0	; () banked
   826   0015E4  6F80               	movwf	(??_main+1)& (0+255),b
   827   0015E6  0E2B               	movlw	43
   828   0015E8  6F7F               	movwf	??_main& (0+255),b
   829   0015EA  0E00               	movlw	0
   830   0015EC                     u1517:
   831   0015EC  2EE8               	decfsz	wreg,f,c
   832   0015EE  D7FE               	bra	u1517
   833   0015F0  2F7F               	decfsz	??_main& (0+255),f,b
   834   0015F2  D7FC               	bra	u1517
   835   0015F4  2F80               	decfsz	(??_main+1)& (0+255),f,b
   836   0015F6  D7FA               	bra	u1517
   837   0015F8  F000               	nop	
   838   0015FA  EFB0  F00A         	goto	l235
   839   0015FE  EF3B  F000         	goto	start
   840   001602                     __end_of_main:
   841                           	callstack 0
   842                           
   843 ;; *************** function _sprintf *****************
   844 ;; Defined at:
   845 ;;		line 9 in file "D:\ECM\pic\sources\c99\common\nf_sprintf.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;  s               2    6[BANK0 ] PTR unsigned char 
   848 ;;		 -> main@buf(40), 
   849 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
   850 ;;		 -> STR_1(47), 
   851 ;; Auto vars:     Size  Location     Type
   852 ;;  f              11   20[BANK0 ] struct _IO_FILE
   853 ;;  ap              2   18[BANK0 ] PTR void [1]
   854 ;;		 -> ?_sprintf(2), 
   855 ;;  ret             2    0        int 
   856 ;; Return value:  Size  Location     Type
   857 ;;                  2    6[BANK0 ] int 
   858 ;; Registers used:
   859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   865 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   866 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   868 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   869 ;;Total ram usage:       25 bytes
   870 ;; Hardware stack levels used: 1
   871 ;; Hardware stack levels required when called: 9
   872 ;; This function calls:
   873 ;;		_vfprintf
   874 ;; This function is called by:
   875 ;;		_main
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879                           	psect	text1
   880   0017D6                     __ptext1:
   881                           	callstack 0
   882   0017D6                     _sprintf:
   883                           	callstack 21
   884   0017D6  0E6A               	movlw	low (?_sprintf+4)
   885   0017D8  0100               	movlb	0	; () banked
   886   0017DA  6F72               	movwf	sprintf@ap& (0+255),b
   887   0017DC  0E00               	movlw	high (?_sprintf+4)
   888   0017DE  6F73               	movwf	(sprintf@ap+1)& (0+255),b
   889   0017E0  C066  F074         	movff	sprintf@s,sprintf@f
   890   0017E4  C067  F075         	movff	sprintf@s+1,sprintf@f+1
   891   0017E8                     
   892                           ; BSR set to: 0
   893   0017E8  0E00               	movlw	0
   894   0017EA  6F78               	movwf	(sprintf@f+4)& (0+255),b
   895   0017EC  0E00               	movlw	0
   896   0017EE  6F77               	movwf	(sprintf@f+3)& (0+255),b
   897   0017F0                     
   898                           ; BSR set to: 0
   899   0017F0  0E00               	movlw	0
   900   0017F2  6F7E               	movwf	(sprintf@f+10)& (0+255),b
   901   0017F4  0E00               	movlw	0
   902   0017F6  6F7D               	movwf	(sprintf@f+9)& (0+255),b
   903   0017F8                     
   904                           ; BSR set to: 0
   905   0017F8  0E74               	movlw	low sprintf@f
   906   0017FA  6F60               	movwf	vfprintf@fp& (0+255),b
   907   0017FC  0E00               	movlw	high sprintf@f
   908   0017FE  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
   909   001800  C068  F062         	movff	sprintf@fmt,vfprintf@fmt
   910   001804  C069  F063         	movff	sprintf@fmt+1,vfprintf@fmt+1
   911   001808  0E72               	movlw	low sprintf@ap
   912   00180A  6F64               	movwf	vfprintf@ap& (0+255),b
   913   00180C  0E00               	movlw	high sprintf@ap
   914   00180E  6F65               	movwf	(vfprintf@ap+1)& (0+255),b
   915   001810  EC14  F00C         	call	_vfprintf	;wreg free
   916   001814  0100               	movlb	0	; () banked
   917   001816  5177               	movf	(sprintf@f+3)& (0+255),w,b
   918   001818  2566               	addwf	sprintf@s& (0+255),w,b
   919   00181A  6ED9               	movwf	fsr2l,c
   920   00181C  5178               	movf	(sprintf@f+4)& (0+255),w,b
   921   00181E  2167               	addwfc	(sprintf@s+1)& (0+255),w,b
   922   001820  6EDA               	movwf	fsr2h,c
   923   001822  0E00               	movlw	0
   924   001824  6EDF               	movwf	indf2,c
   925   001826                     
   926                           ; BSR set to: 0
   927   001826  0012               	return		;funcret
   928   001828                     __end_of_sprintf:
   929                           	callstack 0
   930                           
   931 ;; *************** function _vfprintf *****************
   932 ;; Defined at:
   933 ;;		line 1520 in file "D:\ECM\pic\sources\c99\common\doprnt.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
   936 ;;		 -> sprintf@f(11), 
   937 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   938 ;;		 -> STR_1(47), 
   939 ;;  ap              2    4[BANK0 ] PTR PTR void 
   940 ;;		 -> sprintf@ap(2), 
   941 ;; Auto vars:     Size  Location     Type
   942 ;;  cfmt            2   84[COMRAM] PTR unsigned char 
   943 ;;		 -> STR_1(47), 
   944 ;; Return value:  Size  Location     Type
   945 ;;                  2    0[BANK0 ] int 
   946 ;; Registers used:
   947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   953 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   954 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   956 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   957 ;;Total ram usage:        8 bytes
   958 ;; Hardware stack levels used: 1
   959 ;; Hardware stack levels required when called: 8
   960 ;; This function calls:
   961 ;;		_vfpfcnvrt
   962 ;; This function is called by:
   963 ;;		_sprintf
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           	psect	text2
   968   001828                     __ptext2:
   969                           	callstack 0
   970   001828                     _vfprintf:
   971                           	callstack 21
   972   001828                     
   973                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1520: int vfprintf(FILE *fp, const char *fmt, v
      +                          a_list ap);D:\ECM\pic\sources\c99\common\doprnt.c: 1521: {;D:\ECM\pic\sources\c99\common
      +                          \doprnt.c: 1523:     char *cfmt;;D:\ECM\pic\sources\c99\common\doprnt.c: 1525:     cfmt 
      +                          = (char *)fmt;
   974   001828  C062  F055         	movff	vfprintf@fmt,vfprintf@cfmt
   975   00182C  C063  F056         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   976                           
   977                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1529:     while (*cfmt) {
   978   001830  EF28  F00C         	goto	l2380
   979   001834                     l2378:
   980                           
   981                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvrt(fp, &cfmt, ap);
   982   001834  C060  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
   983   001838  C061  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   984   00183C  0E55               	movlw	low vfprintf@cfmt
   985   00183E  6E45               	movwf	vfpfcnvrt@fmt^0,c
   986   001840  0E00               	movlw	high vfprintf@cfmt
   987   001842  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
   988   001844  C064  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
   989   001848  C065  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   990   00184C  ECCD  F009         	call	_vfpfcnvrt	;wreg free
   991   001850                     l2380:
   992                           
   993                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1529:     while (*cfmt) {
   994   001850  C055  FFF6         	movff	vfprintf@cfmt,tblptrl
   995   001854  C056  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   996   001858                     	if	0	;tblptru may be non-zero
   997   001858                     	endif
   998   001858                     	if	0	;tblptru may be non-zero
   999   001858                     	endif
  1000   001858  0008               	tblrd		*
  1001   00185A  50F5               	movf	tablat,w,c
  1002   00185C  0900               	iorlw	0
  1003   00185E  A4D8               	btfss	status,2,c
  1004   001860  EF34  F00C         	goto	u1491
  1005   001864  EF36  F00C         	goto	u1490
  1006   001868                     u1491:
  1007   001868  EF1A  F00C         	goto	l2378
  1008   00186C                     u1490:
  1009   00186C                     
  1010                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1011   00186C  0E00               	movlw	0
  1012   00186E  0100               	movlb	0	; () banked
  1013   001870  6F61               	movwf	(?_vfprintf+1)& (0+255),b
  1014   001872  0E00               	movlw	0
  1015   001874  6F60               	movwf	?_vfprintf& (0+255),b
  1016   001876                     
  1017                           ; BSR set to: 0
  1018   001876  0012               	return		;funcret
  1019   001878                     __end_of_vfprintf:
  1020                           	callstack 0
  1021                           
  1022 ;; *************** function _vfpfcnvrt *****************
  1023 ;; Defined at:
  1024 ;;		line 1007 in file "D:\ECM\pic\sources\c99\common\doprnt.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1027 ;;		 -> sprintf@f(11), 
  1028 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1029 ;;		 -> vfprintf@cfmt(2), 
  1030 ;;  ap              2   70[COMRAM] PTR PTR void 
  1031 ;;		 -> sprintf@ap(2), 
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;  convarg         8   74[COMRAM] struct .
  1034 ;;  cp              2   82[COMRAM] PTR unsigned char 
  1035 ;;		 -> STR_1(47), 
  1036 ;;  i               2    0        int 
  1037 ;;  done            2    0        int 
  1038 ;;  c               1    0        unsigned char 
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  1    wreg      void 
  1041 ;; Registers used:
  1042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1048 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1049 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1050 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1051 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1052 ;;Total ram usage:       18 bytes
  1053 ;; Hardware stack levels used: 1
  1054 ;; Hardware stack levels required when called: 7
  1055 ;; This function calls:
  1056 ;;		_dtoa
  1057 ;;		_fputc
  1058 ;; This function is called by:
  1059 ;;		_vfprintf
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           	psect	text3
  1064   00139A                     __ptext3:
  1065                           	callstack 0
  1066   00139A                     _vfpfcnvrt:
  1067                           	callstack 21
  1068   00139A                     
  1069                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(FILE *fp, char *fmt[], va_list 
      +                          ap);D:\ECM\pic\sources\c99\common\doprnt.c: 1008: {;D:\ECM\pic\sources\c99\common\doprnt
      +                          .c: 1009:     char c, *cp;;D:\ECM\pic\sources\c99\common\doprnt.c: 1010:     int done, i
      +                          ;;D:\ECM\pic\sources\c99\common\doprnt.c: 1016:  } convarg;;D:\ECM\pic\sources\c99\commo
      +                          n\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1070   00139A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1071   00139E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1072   0013A2  CFDE FFF6          	movff	postinc2,tblptrl
  1073   0013A6  CFDD FFF7          	movff	postdec2,tblptrh
  1074   0013AA                     	if	0	;tblptru may be non-zero
  1075   0013AA                     	endif
  1076   0013AA                     	if	0	;tblptru may be non-zero
  1077   0013AA                     	endif
  1078   0013AA  0008               	tblrd		*
  1079   0013AC  50F5               	movf	tablat,w,c
  1080   0013AE  0A25               	xorlw	37
  1081   0013B0  A4D8               	btfss	status,2,c
  1082   0013B2  EFDD  F009         	goto	u1461
  1083   0013B6  EFDF  F009         	goto	u1460
  1084   0013BA                     u1461:
  1085   0013BA  EF5F  F00A         	goto	l2370
  1086   0013BE                     u1460:
  1087   0013BE                     
  1088                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1020:         ++*fmt;
  1089   0013BE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1090   0013C2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1091   0013C6  2ADE               	incf	postinc2,f,c
  1092   0013C8  0E00               	movlw	0
  1093   0013CA  22DD               	addwfc	postdec2,f,c
  1094   0013CC                     
  1095                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1022:         flags = width = 0;
  1096   0013CC  0E00               	movlw	0
  1097   0013CE  0100               	movlb	0	; () banked
  1098   0013D0  6FD8               	movwf	(_width+1)& (0+255),b
  1099   0013D2  0E00               	movlw	0
  1100   0013D4  6FD7               	movwf	_width& (0+255),b
  1101   0013D6  C0D7  F0DB         	movff	_width,_flags
  1102   0013DA                     
  1103                           ; BSR set to: 0
  1104                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1023:         prec = -1;
  1105   0013DA  69D9               	setf	_prec& (0+255),b
  1106   0013DC  69DA               	setf	(_prec+1)& (0+255),b
  1107   0013DE                     
  1108                           ; BSR set to: 0
  1109                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt;
  1110   0013DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1111   0013E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1112   0013E6  CFDE F053          	movff	postinc2,vfpfcnvrt@cp
  1113   0013EA  CFDD F054          	movff	postdec2,vfpfcnvrt@cp+1
  1114   0013EE                     
  1115                           ; BSR set to: 0
  1116                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1187:   if (*cp == 'd' || *cp == 'i') {
  1117   0013EE  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1118   0013F2  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1119   0013F6                     	if	0	;tblptru may be non-zero
  1120   0013F6                     	endif
  1121   0013F6                     	if	0	;tblptru may be non-zero
  1122   0013F6                     	endif
  1123   0013F6  0008               	tblrd		*
  1124   0013F8  50F5               	movf	tablat,w,c
  1125   0013FA  0A64               	xorlw	100
  1126   0013FC  B4D8               	btfsc	status,2,c
  1127   0013FE  EF03  F00A         	goto	u1471
  1128   001402  EF05  F00A         	goto	u1470
  1129   001406                     u1471:
  1130   001406  EF13  F00A         	goto	l2360
  1131   00140A                     u1470:
  1132   00140A                     
  1133                           ; BSR set to: 0
  1134   00140A  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1135   00140E  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1136   001412                     	if	0	;tblptru may be non-zero
  1137   001412                     	endif
  1138   001412                     	if	0	;tblptru may be non-zero
  1139   001412                     	endif
  1140   001412  0008               	tblrd		*
  1141   001414  50F5               	movf	tablat,w,c
  1142   001416  0A69               	xorlw	105
  1143   001418  A4D8               	btfss	status,2,c
  1144   00141A  EF11  F00A         	goto	u1481
  1145   00141E  EF13  F00A         	goto	u1480
  1146   001422                     u1481:
  1147   001422  EF56  F00A         	goto	l2366
  1148   001426                     u1480:
  1149   001426                     l2360:
  1150                           
  1151                           ; BSR set to: 0
  1152                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1230:    convarg.ll = (long long)(int)(*(int *)
      +                          __va_arg(*(int **)ap, (int)0));
  1153   001426  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1154   00142A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1155   00142E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1156   001432  0E02               	movlw	2
  1157   001434  26DE               	addwf	postinc2,f,c
  1158   001436  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1159   00143A  0E00               	movlw	0
  1160   00143C  22DD               	addwfc	postdec2,f,c
  1161   00143E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1162   001442  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1163   001446  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg
  1164   00144A  CFDD F04C          	movff	postdec2,vfpfcnvrt@convarg+1
  1165   00144E  0E00               	movlw	0
  1166   001450  BE4C               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1167   001452  0EFF               	movlw	-1
  1168   001454  6E4D               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1169   001456  6E4E               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1170   001458  6E4F               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1171   00145A  6E50               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1172   00145C  6E51               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1173   00145E  6E52               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1174                           
  1175                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1232:    *fmt = cp+1;
  1176   001460  0E01               	movlw	1
  1177   001462  2453               	addwf	vfpfcnvrt@cp^0,w,c
  1178   001464  6E49               	movwf	??_vfpfcnvrt^0,c
  1179   001466  0E00               	movlw	0
  1180   001468  2054               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1181   00146A  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1182   00146C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1183   001470  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1184   001474  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  1185   001478  C04A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1186   00147C                     
  1187                           ; BSR set to: 0
  1188                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1233:    return (void) dtoa(fp, convarg.ll);;	R
      +                          eturn value of _vfpfcnvrt is never used
  1189   00147C  C043  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  1190   001480  C044  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1191   001484  C04B  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  1192   001488  C04C  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1193   00148C  C04D  F024         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1194   001490  C04E  F025         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1195   001494  C04F  F026         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1196   001498  C050  F027         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1197   00149C  C051  F028         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1198   0014A0  C052  F029         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1199   0014A4  EC19  F007         	call	_dtoa	;wreg free
  1200   0014A8  EF73  F00A         	goto	l1102
  1201   0014AC                     l2366:
  1202                           
  1203                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1509:         ++*fmt;
  1204   0014AC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1205   0014B0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1206   0014B4  2ADE               	incf	postinc2,f,c
  1207   0014B6  0E00               	movlw	0
  1208   0014B8  22DD               	addwfc	postdec2,f,c
  1209   0014BA  EF73  F00A         	goto	l1102
  1210   0014BE                     l2370:
  1211                           
  1212                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 1514:     fputc((int)(*fmt)[0], fp);
  1213   0014BE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1214   0014C2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1215   0014C6  CFDE FFF6          	movff	postinc2,tblptrl
  1216   0014CA  CFDD FFF7          	movff	postdec2,tblptrh
  1217   0014CE                     	if	0	;tblptru may be non-zero
  1218   0014CE                     	endif
  1219   0014CE                     	if	0	;tblptru may be non-zero
  1220   0014CE                     	endif
  1221   0014CE  0008               	tblrd		*
  1222   0014D0  50F5               	movf	tablat,w,c
  1223   0014D2  6E05               	movwf	fputc@c^0,c
  1224   0014D4  6A06               	clrf	(fputc@c+1)^0,c
  1225   0014D6  C043  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1226   0014DA  C044  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1227   0014DE  EC01  F00B         	call	_fputc	;wreg free
  1228   0014E2  EF56  F00A         	goto	l2366
  1229   0014E6                     l1102:
  1230   0014E6  0012               	return		;funcret
  1231   0014E8                     __end_of_vfpfcnvrt:
  1232                           	callstack 0
  1233                           
  1234 ;; *************** function _dtoa *****************
  1235 ;; Defined at:
  1236 ;;		line 443 in file "D:\ECM\pic\sources\c99\common\doprnt.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  1239 ;;		 -> sprintf@f(11), 
  1240 ;;  d               8   33[COMRAM] long long 
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;  n               8   55[COMRAM] long long 
  1243 ;;  i               2   64[COMRAM] int 
  1244 ;;  w               2   53[COMRAM] int 
  1245 ;;  p               2   51[COMRAM] int 
  1246 ;;  s               1   63[COMRAM] unsigned char 
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  1    wreg      void 
  1249 ;; Registers used:
  1250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1251 ;; Tracked objects:
  1252 ;;		On entry : 0/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1256 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1257 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1258 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1259 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1260 ;;Total ram usage:       35 bytes
  1261 ;; Hardware stack levels used: 1
  1262 ;; Hardware stack levels required when called: 6
  1263 ;; This function calls:
  1264 ;;		___aodiv
  1265 ;;		___aomod
  1266 ;;		_abs
  1267 ;;		_pad
  1268 ;; This function is called by:
  1269 ;;		_vfpfcnvrt
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           
  1273                           	psect	text4
  1274   000E32                     __ptext4:
  1275                           	callstack 0
  1276   000E32                     _dtoa:
  1277                           	callstack 21
  1278   000E32                     
  1279                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 443: static void dtoa(FILE *fp, long long d);D:
      +                          \ECM\pic\sources\c99\common\doprnt.c: 444: {;D:\ECM\pic\sources\c99\common\doprnt.c: 445
      +                          :  char s;;D:\ECM\pic\sources\c99\common\doprnt.c: 446:     int i, p, w;;D:\ECM\pic\sour
      +                          ces\c99\common\doprnt.c: 447:     long long n;;D:\ECM\pic\sources\c99\common\doprnt.c: 4
      +                          50:     n = d;
  1280   000E32  C022  F038         	movff	dtoa@d,dtoa@n
  1281   000E36  C023  F039         	movff	dtoa@d+1,dtoa@n+1
  1282   000E3A  C024  F03A         	movff	dtoa@d+2,dtoa@n+2
  1283   000E3E  C025  F03B         	movff	dtoa@d+3,dtoa@n+3
  1284   000E42  C026  F03C         	movff	dtoa@d+4,dtoa@n+4
  1285   000E46  C027  F03D         	movff	dtoa@d+5,dtoa@n+5
  1286   000E4A  C028  F03E         	movff	dtoa@d+6,dtoa@n+6
  1287   000E4E  C029  F03F         	movff	dtoa@d+7,dtoa@n+7
  1288   000E52                     
  1289                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 451:     s = n < 0 ? 1 : 0;
  1290   000E52  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  1291   000E54  EF2E  F007         	goto	u1361
  1292   000E58  EF31  F007         	goto	u1360
  1293   000E5C                     u1361:
  1294   000E5C  0E01               	movlw	1
  1295   000E5E  EF32  F007         	goto	u1370
  1296   000E62                     u1360:
  1297   000E62  0E00               	movlw	0
  1298   000E64                     u1370:
  1299   000E64  6E40               	movwf	dtoa@s^0,c
  1300   000E66                     
  1301                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1302   000E66  5040               	movf	dtoa@s^0,w,c
  1303   000E68  B4D8               	btfsc	status,2,c
  1304   000E6A  EF39  F007         	goto	u1381
  1305   000E6E  EF3B  F007         	goto	u1380
  1306   000E72                     u1381:
  1307   000E72  EF4B  F007         	goto	l2302
  1308   000E76                     u1380:
  1309   000E76                     
  1310                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 453:         n = -n;
  1311   000E76  1E3F               	comf	(dtoa@n+7)^0,f,c
  1312   000E78  1E3E               	comf	(dtoa@n+6)^0,f,c
  1313   000E7A  1E3D               	comf	(dtoa@n+5)^0,f,c
  1314   000E7C  1E3C               	comf	(dtoa@n+4)^0,f,c
  1315   000E7E  1E3B               	comf	(dtoa@n+3)^0,f,c
  1316   000E80  1E3A               	comf	(dtoa@n+2)^0,f,c
  1317   000E82  1E39               	comf	(dtoa@n+1)^0,f,c
  1318   000E84  6C38               	negf	dtoa@n^0,c
  1319   000E86  0E00               	movlw	0
  1320   000E88  2239               	addwfc	(dtoa@n+1)^0,f,c
  1321   000E8A  223A               	addwfc	(dtoa@n+2)^0,f,c
  1322   000E8C  223B               	addwfc	(dtoa@n+3)^0,f,c
  1323   000E8E  223C               	addwfc	(dtoa@n+4)^0,f,c
  1324   000E90  223D               	addwfc	(dtoa@n+5)^0,f,c
  1325   000E92  223E               	addwfc	(dtoa@n+6)^0,f,c
  1326   000E94  223F               	addwfc	(dtoa@n+7)^0,f,c
  1327   000E96                     l2302:
  1328                           
  1329                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 462:     p = (0 < prec) ? prec : 1;
  1330   000E96  0100               	movlb	0	; () banked
  1331   000E98  BFDA               	btfsc	(_prec+1)& (0+255),7,b
  1332   000E9A  EF59  F007         	goto	u1390
  1333   000E9E  51DA               	movf	(_prec+1)& (0+255),w,b
  1334   000EA0  E106               	bnz	u1391
  1335   000EA2  05D9               	decf	_prec& (0+255),w,b
  1336   000EA4  B0D8               	btfsc	status,0,c
  1337   000EA6  EF57  F007         	goto	u1391
  1338   000EAA  EF59  F007         	goto	u1390
  1339   000EAE                     u1391:
  1340   000EAE  EF5F  F007         	goto	l1081
  1341   000EB2                     u1390:
  1342   000EB2                     
  1343                           ; BSR set to: 0
  1344   000EB2  0E00               	movlw	0
  1345   000EB4  6E35               	movwf	(dtoa@p+1)^0,c
  1346   000EB6  0E01               	movlw	1
  1347   000EB8  6E34               	movwf	dtoa@p^0,c
  1348   000EBA  EF63  F007         	goto	l1083
  1349   000EBE                     l1081:
  1350                           
  1351                           ; BSR set to: 0
  1352   000EBE  C0D9  F034         	movff	_prec,dtoa@p
  1353   000EC2  C0DA  F035         	movff	_prec+1,dtoa@p+1
  1354   000EC6                     l1083:
  1355                           
  1356                           ; BSR set to: 0
  1357                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 463:     w = width;
  1358   000EC6  C0D7  F036         	movff	_width,dtoa@w
  1359   000ECA  C0D8  F037         	movff	_width+1,dtoa@w+1
  1360   000ECE                     
  1361                           ; BSR set to: 0
  1362                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 464:     if (s
  1363   000ECE  5040               	movf	dtoa@s^0,w,c
  1364   000ED0  B4D8               	btfsc	status,2,c
  1365   000ED2  EF6D  F007         	goto	u1401
  1366   000ED6  EF6F  F007         	goto	u1400
  1367   000EDA                     u1401:
  1368   000EDA  EF86  F007         	goto	l1084
  1369   000EDE                     u1400:
  1370   000EDE                     
  1371                           ; BSR set to: 0
  1372                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 468:     ) {;D:\ECM\pic\sources\c99\common\dopr
      +                          nt.c: 469:         --w;
  1373   000EDE  0636               	decf	dtoa@w^0,f,c
  1374   000EE0  A0D8               	btfss	status,0,c
  1375   000EE2  0637               	decf	(dtoa@w+1)^0,f,c
  1376   000EE4                     
  1377                           ; BSR set to: 0
  1378                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-' : '+';
  1379   000EE4  5040               	movf	dtoa@s^0,w,c
  1380   000EE6  A4D8               	btfss	status,2,c
  1381   000EE8  EF78  F007         	goto	u1411
  1382   000EEC  EF7A  F007         	goto	u1410
  1383   000EF0                     u1411:
  1384   000EF0  EF80  F007         	goto	l2314
  1385   000EF4                     u1410:
  1386   000EF4                     
  1387                           ; BSR set to: 0
  1388   000EF4  0E00               	movlw	0
  1389   000EF6  6E33               	movwf	(_dtoa$2146+1)^0,c
  1390   000EF8  0E2B               	movlw	43
  1391   000EFA  6E32               	movwf	_dtoa$2146^0,c
  1392   000EFC  EF84  F007         	goto	l2316
  1393   000F00                     l2314:
  1394                           
  1395                           ; BSR set to: 0
  1396   000F00  0E00               	movlw	0
  1397   000F02  6E33               	movwf	(_dtoa$2146+1)^0,c
  1398   000F04  0E2D               	movlw	45
  1399   000F06  6E32               	movwf	_dtoa$2146^0,c
  1400   000F08                     l2316:
  1401                           
  1402                           ; BSR set to: 0
  1403   000F08  C032  F040         	movff	_dtoa$2146,dtoa@s
  1404   000F0C                     l1084:
  1405                           
  1406                           ; BSR set to: 0
  1407                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 480:     i = sizeof(dbuf) - 1;
  1408   000F0C  0E00               	movlw	0
  1409   000F0E  6E42               	movwf	(dtoa@i+1)^0,c
  1410   000F10  0E1F               	movlw	31
  1411   000F12  6E41               	movwf	dtoa@i^0,c
  1412   000F14                     
  1413                           ; BSR set to: 0
  1414                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] = '\0';
  1415   000F14  0E00               	movlw	0
  1416   000F16  6FFB               	movwf	(_dbuf+31)& (0+255),b
  1417                           
  1418                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 482:     while (!(i < 1) && (n || (0 < p)
  1419   000F18  EF0A  F008         	goto	l2330
  1420   000F1C                     l2320:
  1421                           
  1422                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 486:     )) {;D:\ECM\pic\sources\c99\common\dop
      +                          rnt.c: 487:         --i;
  1423   000F1C  0641               	decf	dtoa@i^0,f,c
  1424   000F1E  A0D8               	btfss	status,0,c
  1425   000F20  0642               	decf	(dtoa@i+1)^0,f,c
  1426   000F22                     
  1427                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 488:         dbuf[i] = (char)((int)'0' + abs(n 
      +                          % 10));
  1428   000F22  0EDC               	movlw	low _dbuf
  1429   000F24  2441               	addwf	dtoa@i^0,w,c
  1430   000F26  6ED9               	movwf	fsr2l,c
  1431   000F28  0E00               	movlw	high _dbuf
  1432   000F2A  2042               	addwfc	(dtoa@i+1)^0,w,c
  1433   000F2C  6EDA               	movwf	fsr2h,c
  1434   000F2E  C038  F005         	movff	dtoa@n,___aomod@dividend
  1435   000F32  C039  F006         	movff	dtoa@n+1,___aomod@dividend+1
  1436   000F36  C03A  F007         	movff	dtoa@n+2,___aomod@dividend+2
  1437   000F3A  C03B  F008         	movff	dtoa@n+3,___aomod@dividend+3
  1438   000F3E  C03C  F009         	movff	dtoa@n+4,___aomod@dividend+4
  1439   000F42  C03D  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  1440   000F46  C03E  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  1441   000F4A  C03F  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  1442   000F4E  0E0A               	movlw	10
  1443   000F50  6E0D               	movwf	___aomod@divisor^0,c
  1444   000F52  0E00               	movlw	0
  1445   000F54  6E0E               	movwf	(___aomod@divisor+1)^0,c
  1446   000F56  0E00               	movlw	0
  1447   000F58  6E0F               	movwf	(___aomod@divisor+2)^0,c
  1448   000F5A  0E00               	movlw	0
  1449   000F5C  6E10               	movwf	(___aomod@divisor+3)^0,c
  1450   000F5E  0E00               	movlw	0
  1451   000F60  6E11               	movwf	(___aomod@divisor+4)^0,c
  1452   000F62  0E00               	movlw	0
  1453   000F64  6E12               	movwf	(___aomod@divisor+5)^0,c
  1454   000F66  0E00               	movlw	0
  1455   000F68  6E13               	movwf	(___aomod@divisor+6)^0,c
  1456   000F6A  0E00               	movlw	0
  1457   000F6C  6E14               	movwf	(___aomod@divisor+7)^0,c
  1458   000F6E  EC1B  F009         	call	___aomod	;wreg free
  1459   000F72  C005  F02A         	movff	?___aomod,??_dtoa
  1460   000F76  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  1461   000F7A  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  1462   000F7E  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  1463   000F82  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  1464   000F86  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  1465   000F8A  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  1466   000F8E  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  1467   000F92  C02A  F017         	movff	??_dtoa,abs@a
  1468   000F96  C02B  F018         	movff	??_dtoa+1,abs@a+1
  1469   000F9A  EC1F  F00D         	call	_abs	;wreg free
  1470   000F9E  5017               	movf	?_abs^0,w,c
  1471   000FA0  0F30               	addlw	48
  1472   000FA2  6EDF               	movwf	indf2,c
  1473   000FA4                     
  1474                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 489:         --p;
  1475   000FA4  0634               	decf	dtoa@p^0,f,c
  1476   000FA6  A0D8               	btfss	status,0,c
  1477   000FA8  0635               	decf	(dtoa@p+1)^0,f,c
  1478   000FAA                     
  1479                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 490:         --w;
  1480   000FAA  0636               	decf	dtoa@w^0,f,c
  1481   000FAC  A0D8               	btfss	status,0,c
  1482   000FAE  0637               	decf	(dtoa@w+1)^0,f,c
  1483   000FB0                     
  1484                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 491:         n = n / 10;
  1485   000FB0  C038  F005         	movff	dtoa@n,___aodiv@dividend
  1486   000FB4  C039  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  1487   000FB8  C03A  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  1488   000FBC  C03B  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  1489   000FC0  C03C  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  1490   000FC4  C03D  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  1491   000FC8  C03E  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  1492   000FCC  C03F  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  1493   000FD0  0E0A               	movlw	10
  1494   000FD2  6E0D               	movwf	___aodiv@divisor^0,c
  1495   000FD4  0E00               	movlw	0
  1496   000FD6  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  1497   000FD8  0E00               	movlw	0
  1498   000FDA  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  1499   000FDC  0E00               	movlw	0
  1500   000FDE  6E10               	movwf	(___aodiv@divisor+3)^0,c
  1501   000FE0  0E00               	movlw	0
  1502   000FE2  6E11               	movwf	(___aodiv@divisor+4)^0,c
  1503   000FE4  0E00               	movlw	0
  1504   000FE6  6E12               	movwf	(___aodiv@divisor+5)^0,c
  1505   000FE8  0E00               	movlw	0
  1506   000FEA  6E13               	movwf	(___aodiv@divisor+6)^0,c
  1507   000FEC  0E00               	movlw	0
  1508   000FEE  6E14               	movwf	(___aodiv@divisor+7)^0,c
  1509   000FF0  EC57  F008         	call	___aodiv	;wreg free
  1510   000FF4  C005  F038         	movff	?___aodiv,dtoa@n
  1511   000FF8  C006  F039         	movff	?___aodiv+1,dtoa@n+1
  1512   000FFC  C007  F03A         	movff	?___aodiv+2,dtoa@n+2
  1513   001000  C008  F03B         	movff	?___aodiv+3,dtoa@n+3
  1514   001004  C009  F03C         	movff	?___aodiv+4,dtoa@n+4
  1515   001008  C00A  F03D         	movff	?___aodiv+5,dtoa@n+5
  1516   00100C  C00B  F03E         	movff	?___aodiv+6,dtoa@n+6
  1517   001010  C00C  F03F         	movff	?___aodiv+7,dtoa@n+7
  1518   001014                     l2330:
  1519                           
  1520                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 482:     while (!(i < 1) && (n || (0 < p)
  1521   001014  BE42               	btfsc	(dtoa@i+1)^0,7,c
  1522   001016  EF15  F008         	goto	u1421
  1523   00101A  5042               	movf	(dtoa@i+1)^0,w,c
  1524   00101C  E108               	bnz	u1420
  1525   00101E  0441               	decf	dtoa@i^0,w,c
  1526   001020  A0D8               	btfss	status,0,c
  1527   001022  EF15  F008         	goto	u1421
  1528   001026  EF17  F008         	goto	u1420
  1529   00102A                     u1421:
  1530   00102A  EF33  F008         	goto	l2336
  1531   00102E                     u1420:
  1532   00102E  5038               	movf	dtoa@n^0,w,c
  1533   001030  1039               	iorwf	(dtoa@n+1)^0,w,c
  1534   001032  103A               	iorwf	(dtoa@n+2)^0,w,c
  1535   001034  103B               	iorwf	(dtoa@n+3)^0,w,c
  1536   001036  103C               	iorwf	(dtoa@n+4)^0,w,c
  1537   001038  103D               	iorwf	(dtoa@n+5)^0,w,c
  1538   00103A  103E               	iorwf	(dtoa@n+6)^0,w,c
  1539   00103C  103F               	iorwf	(dtoa@n+7)^0,w,c
  1540   00103E  A4D8               	btfss	status,2,c
  1541   001040  EF24  F008         	goto	u1431
  1542   001044  EF26  F008         	goto	u1430
  1543   001048                     u1431:
  1544   001048  EF8E  F007         	goto	l2320
  1545   00104C                     u1430:
  1546   00104C  BE35               	btfsc	(dtoa@p+1)^0,7,c
  1547   00104E  EF33  F008         	goto	u1440
  1548   001052  5035               	movf	(dtoa@p+1)^0,w,c
  1549   001054  E106               	bnz	u1441
  1550   001056  0434               	decf	dtoa@p^0,w,c
  1551   001058  B0D8               	btfsc	status,0,c
  1552   00105A  EF31  F008         	goto	u1441
  1553   00105E  EF33  F008         	goto	u1440
  1554   001062                     u1441:
  1555   001062  EF8E  F007         	goto	l2320
  1556   001066                     u1440:
  1557   001066                     l2336:
  1558                           
  1559                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 495:     if (s != 0) {
  1560   001066  5040               	movf	dtoa@s^0,w,c
  1561   001068  B4D8               	btfsc	status,2,c
  1562   00106A  EF39  F008         	goto	u1451
  1563   00106E  EF3B  F008         	goto	u1450
  1564   001072                     u1451:
  1565   001072  EF46  F008         	goto	l2342
  1566   001076                     u1450:
  1567   001076                     
  1568                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 496:         --i;
  1569   001076  0641               	decf	dtoa@i^0,f,c
  1570   001078  A0D8               	btfss	status,0,c
  1571   00107A  0642               	decf	(dtoa@i+1)^0,f,c
  1572   00107C                     
  1573                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 497:         dbuf[i] = s;
  1574   00107C  0EDC               	movlw	low _dbuf
  1575   00107E  2441               	addwf	dtoa@i^0,w,c
  1576   001080  6ED9               	movwf	fsr2l,c
  1577   001082  0E00               	movlw	high _dbuf
  1578   001084  2042               	addwfc	(dtoa@i+1)^0,w,c
  1579   001086  6EDA               	movwf	fsr2h,c
  1580   001088  C040  FFDF         	movff	dtoa@s,indf2
  1581   00108C                     l2342:
  1582                           
  1583                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 501:     return (void) pad(fp, &dbuf[i], w);
  1584   00108C  C020  F015         	movff	dtoa@fp,pad@fp
  1585   001090  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  1586   001094  0EDC               	movlw	low _dbuf
  1587   001096  2441               	addwf	dtoa@i^0,w,c
  1588   001098  6E17               	movwf	pad@buf^0,c
  1589   00109A  0E00               	movlw	high _dbuf
  1590   00109C  2042               	addwfc	(dtoa@i+1)^0,w,c
  1591   00109E  6E18               	movwf	(pad@buf+1)^0,c
  1592   0010A0  C036  F019         	movff	dtoa@w,pad@p
  1593   0010A4  C037  F01A         	movff	dtoa@w+1,pad@p+1
  1594   0010A8  ECAE  F00B         	call	_pad	;wreg free
  1595   0010AC  0012               	return		;funcret
  1596   0010AE                     __end_of_dtoa:
  1597                           	callstack 0
  1598                           
  1599 ;; *************** function _pad *****************
  1600 ;; Defined at:
  1601 ;;		line 133 in file "D:\ECM\pic\sources\c99\common\doprnt.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  1604 ;;		 -> sprintf@f(11), 
  1605 ;;  buf             2   22[COMRAM] PTR unsigned char 
  1606 ;;		 -> dbuf(32), 
  1607 ;;  p               2   24[COMRAM] int 
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;  w               2   29[COMRAM] int 
  1610 ;;  i               2   27[COMRAM] int 
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  1    wreg      void 
  1613 ;; Registers used:
  1614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1620 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1621 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1622 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1623 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1624 ;;Total ram usage:       11 bytes
  1625 ;; Hardware stack levels used: 1
  1626 ;; Hardware stack levels required when called: 5
  1627 ;; This function calls:
  1628 ;;		_fputc
  1629 ;;		_fputs
  1630 ;; This function is called by:
  1631 ;;		_dtoa
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635                           	psect	text5
  1636   00175C                     __ptext5:
  1637                           	callstack 0
  1638   00175C                     _pad:
  1639                           	callstack 21
  1640   00175C                     
  1641                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 133: static void pad(FILE *fp, char *buf, int p
      +                          );D:\ECM\pic\sources\c99\common\doprnt.c: 134: {;D:\ECM\pic\sources\c99\common\doprnt.c:
      +                           135:     int i, w;;D:\ECM\pic\sources\c99\common\doprnt.c: 145:     w = (p < 0) ? 0 : p
      +                          ;
  1642   00175C  BE1A               	btfsc	(pad@p+1)^0,7,c
  1643   00175E  EFB3  F00B         	goto	u1331
  1644   001762  EFB5  F00B         	goto	u1330
  1645   001766                     u1331:
  1646   001766  EFBB  F00B         	goto	l2280
  1647   00176A                     u1330:
  1648   00176A  C019  F01E         	movff	pad@p,pad@w
  1649   00176E  C01A  F01F         	movff	pad@p+1,pad@w+1
  1650   001772  EFBF  F00B         	goto	l1072
  1651   001776                     l2280:
  1652   001776  0E00               	movlw	0
  1653   001778  6E1F               	movwf	(pad@w+1)^0,c
  1654   00177A  0E00               	movlw	0
  1655   00177C  6E1E               	movwf	pad@w^0,c
  1656   00177E                     l1072:
  1657                           
  1658                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1659   00177E  0E00               	movlw	0
  1660   001780  6E1D               	movwf	(pad@i+1)^0,c
  1661   001782  0E00               	movlw	0
  1662   001784  6E1C               	movwf	pad@i^0,c
  1663                           
  1664                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 147:     while (i < w) {
  1665   001786  EFD1  F00B         	goto	l2286
  1666   00178A                     l2282:
  1667                           
  1668                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 148:         fputc(' ', fp);
  1669   00178A  0E00               	movlw	0
  1670   00178C  6E06               	movwf	(fputc@c+1)^0,c
  1671   00178E  0E20               	movlw	32
  1672   001790  6E05               	movwf	fputc@c^0,c
  1673   001792  C015  F007         	movff	pad@fp,fputc@fp
  1674   001796  C016  F008         	movff	pad@fp+1,fputc@fp+1
  1675   00179A  EC01  F00B         	call	_fputc	;wreg free
  1676   00179E                     
  1677                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1678   00179E  4A1C               	infsnz	pad@i^0,f,c
  1679   0017A0  2A1D               	incf	(pad@i+1)^0,f,c
  1680   0017A2                     l2286:
  1681                           
  1682                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 147:     while (i < w) {
  1683   0017A2  501E               	movf	pad@w^0,w,c
  1684   0017A4  5C1C               	subwf	pad@i^0,w,c
  1685   0017A6  501D               	movf	(pad@i+1)^0,w,c
  1686   0017A8  0A80               	xorlw	128
  1687   0017AA  6E1B               	movwf	??_pad^0,c
  1688   0017AC  501F               	movf	(pad@w+1)^0,w,c
  1689   0017AE  0A80               	xorlw	128
  1690   0017B0  581B               	subwfb	??_pad^0,w,c
  1691   0017B2  A0D8               	btfss	status,0,c
  1692   0017B4  EFDE  F00B         	goto	u1341
  1693   0017B8  EFE0  F00B         	goto	u1340
  1694   0017BC                     u1341:
  1695   0017BC  EFC5  F00B         	goto	l2282
  1696   0017C0                     u1340:
  1697   0017C0                     
  1698                           ;D:\ECM\pic\sources\c99\common\doprnt.c: 156:         fputs((const char *)buf, fp);
  1699   0017C0  C017  F00E         	movff	pad@buf,fputs@s
  1700   0017C4  C018  F00F         	movff	pad@buf+1,fputs@s+1
  1701   0017C8  C015  F010         	movff	pad@fp,fputs@fp
  1702   0017CC  C016  F011         	movff	pad@fp+1,fputs@fp+1
  1703   0017D0  ECDC  F00C         	call	_fputs	;wreg free
  1704   0017D4  0012               	return		;funcret
  1705   0017D6                     __end_of_pad:
  1706                           	callstack 0
  1707                           
  1708 ;; *************** function _fputs *****************
  1709 ;; Defined at:
  1710 ;;		line 8 in file "D:\ECM\pic\sources\c99\common\nf_fputs.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;  s               2   13[COMRAM] PTR const unsigned char 
  1713 ;;		 -> dbuf(32), 
  1714 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1715 ;;		 -> sprintf@f(11), 
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;  i               2   18[COMRAM] int 
  1718 ;;  c               1   17[COMRAM] unsigned char 
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  2   13[COMRAM] int 
  1721 ;; Registers used:
  1722 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1728 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1729 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1731 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1732 ;;Total ram usage:        7 bytes
  1733 ;; Hardware stack levels used: 1
  1734 ;; Hardware stack levels required when called: 4
  1735 ;; This function calls:
  1736 ;;		_fputc
  1737 ;; This function is called by:
  1738 ;;		_pad
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           	psect	text6
  1743   0019B8                     __ptext6:
  1744                           	callstack 0
  1745   0019B8                     _fputs:
  1746                           	callstack 21
  1747   0019B8  0E00               	movlw	0
  1748   0019BA  6E14               	movwf	(fputs@i+1)^0,c
  1749   0019BC  0E00               	movlw	0
  1750   0019BE  6E13               	movwf	fputs@i^0,c
  1751   0019C0  EFED  F00C         	goto	l2194
  1752   0019C4                     l2190:
  1753   0019C4  C012  F005         	movff	fputs@c,fputc@c
  1754   0019C8  6A06               	clrf	(fputc@c+1)^0,c
  1755   0019CA  C010  F007         	movff	fputs@fp,fputc@fp
  1756   0019CE  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  1757   0019D2  EC01  F00B         	call	_fputc	;wreg free
  1758   0019D6  4A13               	infsnz	fputs@i^0,f,c
  1759   0019D8  2A14               	incf	(fputs@i+1)^0,f,c
  1760   0019DA                     l2194:
  1761   0019DA  5013               	movf	fputs@i^0,w,c
  1762   0019DC  240E               	addwf	fputs@s^0,w,c
  1763   0019DE  6ED9               	movwf	fsr2l,c
  1764   0019E0  5014               	movf	(fputs@i+1)^0,w,c
  1765   0019E2  200F               	addwfc	(fputs@s+1)^0,w,c
  1766   0019E4  6EDA               	movwf	fsr2h,c
  1767   0019E6  50DF               	movf	indf2,w,c
  1768   0019E8  6E12               	movwf	fputs@c^0,c
  1769   0019EA  5012               	movf	fputs@c^0,w,c
  1770   0019EC  A4D8               	btfss	status,2,c
  1771   0019EE  EFFB  F00C         	goto	u1191
  1772   0019F2  EFFD  F00C         	goto	u1190
  1773   0019F6                     u1191:
  1774   0019F6  EFE2  F00C         	goto	l2190
  1775   0019FA                     u1190:
  1776   0019FA  0012               	return		;funcret
  1777   0019FC                     __end_of_fputs:
  1778                           	callstack 0
  1779                           
  1780 ;; *************** function _fputc *****************
  1781 ;; Defined at:
  1782 ;;		line 8 in file "D:\ECM\pic\sources\c99\common\nf_fputc.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;  c               2    4[COMRAM] int 
  1785 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  1786 ;;		 -> sprintf@f(11), 
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;		None
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  2    4[COMRAM] int 
  1791 ;; Registers used:
  1792 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1798 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1800 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1801 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1802 ;;Total ram usage:        9 bytes
  1803 ;; Hardware stack levels used: 1
  1804 ;; Hardware stack levels required when called: 3
  1805 ;; This function calls:
  1806 ;;		_putch
  1807 ;; This function is called by:
  1808 ;;		_pad
  1809 ;;		_vfpfcnvrt
  1810 ;;		_fputs
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           	psect	text7
  1815   001602                     __ptext7:
  1816                           	callstack 0
  1817   001602                     _fputc:
  1818                           	callstack 24
  1819   001602  5007               	movf	fputc@fp^0,w,c
  1820   001604  1008               	iorwf	(fputc@fp+1)^0,w,c
  1821   001606  B4D8               	btfsc	status,2,c
  1822   001608  EF08  F00B         	goto	u1151
  1823   00160C  EF0A  F00B         	goto	u1150
  1824   001610                     u1151:
  1825   001610  EF13  F00B         	goto	l2178
  1826   001614                     u1150:
  1827   001614  5007               	movf	fputc@fp^0,w,c
  1828   001616  1008               	iorwf	(fputc@fp+1)^0,w,c
  1829   001618  A4D8               	btfss	status,2,c
  1830   00161A  EF11  F00B         	goto	u1161
  1831   00161E  EF13  F00B         	goto	u1160
  1832   001622                     u1161:
  1833   001622  EF18  F00B         	goto	l2180
  1834   001626                     u1160:
  1835   001626                     l2178:
  1836   001626  5005               	movf	fputc@c^0,w,c
  1837   001628  EC31  F00E         	call	_putch
  1838   00162C  EF65  F00B         	goto	l1127
  1839   001630                     l2180:
  1840   001630  EE20 F009          	lfsr	2,9
  1841   001634  5007               	movf	fputc@fp^0,w,c
  1842   001636  26D9               	addwf	fsr2l,f,c
  1843   001638  5008               	movf	(fputc@fp+1)^0,w,c
  1844   00163A  22DA               	addwfc	fsr2h,f,c
  1845   00163C  50DE               	movf	postinc2,w,c
  1846   00163E  10DE               	iorwf	postinc2,w,c
  1847   001640  B4D8               	btfsc	status,2,c
  1848   001642  EF25  F00B         	goto	u1171
  1849   001646  EF27  F00B         	goto	u1170
  1850   00164A                     u1171:
  1851   00164A  EF42  F00B         	goto	l2184
  1852   00164E                     u1170:
  1853   00164E  EE20 F009          	lfsr	2,9
  1854   001652  5007               	movf	fputc@fp^0,w,c
  1855   001654  26D9               	addwf	fsr2l,f,c
  1856   001656  5008               	movf	(fputc@fp+1)^0,w,c
  1857   001658  22DA               	addwfc	fsr2h,f,c
  1858   00165A  EE10 F003          	lfsr	1,3
  1859   00165E  5007               	movf	fputc@fp^0,w,c
  1860   001660  26E1               	addwf	fsr1l,f,c
  1861   001662  5008               	movf	(fputc@fp+1)^0,w,c
  1862   001664  22E2               	addwfc	fsr1h,f,c
  1863   001666  50DE               	movf	postinc2,w,c
  1864   001668  5CE6               	subwf	postinc1,w,c
  1865   00166A  50E6               	movf	postinc1,w,c
  1866   00166C  0A80               	xorlw	128
  1867   00166E  6E0D               	movwf	(??_fputc+4)^0,c
  1868   001670  50DE               	movf	postinc2,w,c
  1869   001672  0A80               	xorlw	128
  1870   001674  580D               	subwfb	(??_fputc+4)^0,w,c
  1871   001676  B0D8               	btfsc	status,0,c
  1872   001678  EF40  F00B         	goto	u1181
  1873   00167C  EF42  F00B         	goto	u1180
  1874   001680                     u1181:
  1875   001680  EF65  F00B         	goto	l1127
  1876   001684                     u1180:
  1877   001684                     l2184:
  1878   001684  EE20 F003          	lfsr	2,3
  1879   001688  5007               	movf	fputc@fp^0,w,c
  1880   00168A  26D9               	addwf	fsr2l,f,c
  1881   00168C  5008               	movf	(fputc@fp+1)^0,w,c
  1882   00168E  22DA               	addwfc	fsr2h,f,c
  1883   001690  CFDE F009          	movff	postinc2,??_fputc
  1884   001694  CFDD F00A          	movff	postdec2,??_fputc+1
  1885   001698  C007  FFD9         	movff	fputc@fp,fsr2l
  1886   00169C  C008  FFDA         	movff	fputc@fp+1,fsr2h
  1887   0016A0  CFDE F00B          	movff	postinc2,??_fputc+2
  1888   0016A4  CFDD F00C          	movff	postdec2,??_fputc+3
  1889   0016A8  5009               	movf	??_fputc^0,w,c
  1890   0016AA  240B               	addwf	(??_fputc+2)^0,w,c
  1891   0016AC  6ED9               	movwf	fsr2l,c
  1892   0016AE  500A               	movf	(??_fputc+1)^0,w,c
  1893   0016B0  200C               	addwfc	(??_fputc+3)^0,w,c
  1894   0016B2  6EDA               	movwf	fsr2h,c
  1895   0016B4  C005  FFDF         	movff	fputc@c,indf2
  1896   0016B8  EE20 F003          	lfsr	2,3
  1897   0016BC  5007               	movf	fputc@fp^0,w,c
  1898   0016BE  26D9               	addwf	fsr2l,f,c
  1899   0016C0  5008               	movf	(fputc@fp+1)^0,w,c
  1900   0016C2  22DA               	addwfc	fsr2h,f,c
  1901   0016C4  2ADE               	incf	postinc2,f,c
  1902   0016C6  0E00               	movlw	0
  1903   0016C8  22DD               	addwfc	postdec2,f,c
  1904   0016CA                     l1127:
  1905   0016CA  0012               	return		;funcret
  1906   0016CC                     __end_of_fputc:
  1907                           	callstack 0
  1908                           
  1909 ;; *************** function _putch *****************
  1910 ;; Defined at:
  1911 ;;		line 7 in file "D:\ECM\pic\sources\c99\common\putch.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;  c               1    wreg     unsigned char 
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;  c               1    0[COMRAM] unsigned char 
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1    wreg      void 
  1918 ;; Registers used:
  1919 ;;		wreg
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1929 ;;Total ram usage:        0 bytes
  1930 ;; Hardware stack levels used: 1
  1931 ;; Hardware stack levels required when called: 2
  1932 ;; This function calls:
  1933 ;;		Nothing
  1934 ;; This function is called by:
  1935 ;;		_fputc
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           	psect	text8
  1940   001C62                     __ptext8:
  1941                           	callstack 0
  1942   001C62                     _putch:
  1943                           	callstack 24
  1944   001C62  0012               	return		;funcret
  1945   001C64                     __end_of_putch:
  1946                           	callstack 0
  1947                           
  1948 ;; *************** function _abs *****************
  1949 ;; Defined at:
  1950 ;;		line 1 in file "D:\ECM\pic\sources\c99\common\abs.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;  a               2   22[COMRAM] int 
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;		None
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  2   22[COMRAM] int 
  1957 ;; Registers used:
  1958 ;;		wreg, status,2, status,0
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1964 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1966 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1967 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1968 ;;Total ram usage:        4 bytes
  1969 ;; Hardware stack levels used: 1
  1970 ;; Hardware stack levels required when called: 2
  1971 ;; This function calls:
  1972 ;;		Nothing
  1973 ;; This function is called by:
  1974 ;;		_dtoa
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           	psect	text9
  1979   001A3E                     __ptext9:
  1980                           	callstack 0
  1981   001A3E                     _abs:
  1982                           	callstack 24
  1983   001A3E  BE18               	btfsc	(abs@a+1)^0,7,c
  1984   001A40  EF2C  F00D         	goto	u1350
  1985   001A44  5018               	movf	(abs@a+1)^0,w,c
  1986   001A46  E106               	bnz	u1351
  1987   001A48  0417               	decf	abs@a^0,w,c
  1988   001A4A  B0D8               	btfsc	status,0,c
  1989   001A4C  EF2A  F00D         	goto	u1351
  1990   001A50  EF2C  F00D         	goto	u1350
  1991   001A54                     u1351:
  1992   001A54  EF3A  F00D         	goto	l1112
  1993   001A58                     u1350:
  1994   001A58  C017  F019         	movff	abs@a,??_abs
  1995   001A5C  C018  F01A         	movff	abs@a+1,??_abs+1
  1996   001A60  1E19               	comf	??_abs^0,f,c
  1997   001A62  1E1A               	comf	(??_abs+1)^0,f,c
  1998   001A64  4A19               	infsnz	??_abs^0,f,c
  1999   001A66  2A1A               	incf	(??_abs+1)^0,f,c
  2000   001A68  C019  F017         	movff	??_abs,?_abs
  2001   001A6C  C01A  F018         	movff	??_abs+1,?_abs+1
  2002   001A70  EF3E  F00D         	goto	l1115
  2003   001A74                     l1112:
  2004   001A74  C017  F017         	movff	abs@a,?_abs
  2005   001A78  C018  F018         	movff	abs@a+1,?_abs+1
  2006   001A7C                     l1115:
  2007   001A7C  0012               	return		;funcret
  2008   001A7E                     __end_of_abs:
  2009                           	callstack 0
  2010                           
  2011 ;; *************** function ___aomod *****************
  2012 ;; Defined at:
  2013 ;;		line 9 in file "D:\ECM\pic\sources\c99\common\aomod.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  dividend        8    4[COMRAM] long long 
  2016 ;;  divisor         8   12[COMRAM] long long 
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;  sign            1   21[COMRAM] unsigned char 
  2019 ;;  counter         1   20[COMRAM] unsigned char 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  8    4[COMRAM] long long 
  2022 ;; Registers used:
  2023 ;;		wreg, status,2, status,0
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2029 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2030 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2032 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2033 ;;Total ram usage:       18 bytes
  2034 ;; Hardware stack levels used: 1
  2035 ;; Hardware stack levels required when called: 2
  2036 ;; This function calls:
  2037 ;;		Nothing
  2038 ;; This function is called by:
  2039 ;;		_dtoa
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           	psect	text10
  2044   001236                     __ptext10:
  2045                           	callstack 0
  2046   001236                     ___aomod:
  2047                           	callstack 24
  2048   001236  0E00               	movlw	0
  2049   001238  6E16               	movwf	___aomod@sign^0,c
  2050   00123A  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  2051   00123C  EF24  F009         	goto	u1270
  2052   001240  EF22  F009         	goto	u1271
  2053   001244                     u1271:
  2054   001244  EF36  F009         	goto	l2248
  2055   001248                     u1270:
  2056   001248  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2057   00124A  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2058   00124C  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2059   00124E  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2060   001250  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2061   001252  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2062   001254  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2063   001256  6C05               	negf	___aomod@dividend^0,c
  2064   001258  0E00               	movlw	0
  2065   00125A  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2066   00125C  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2067   00125E  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2068   001260  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2069   001262  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2070   001264  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2071   001266  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2072   001268  0E01               	movlw	1
  2073   00126A  6E16               	movwf	___aomod@sign^0,c
  2074   00126C                     l2248:
  2075   00126C  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  2076   00126E  EF3D  F009         	goto	u1280
  2077   001272  EF3B  F009         	goto	u1281
  2078   001276                     u1281:
  2079   001276  EF4D  F009         	goto	l2252
  2080   00127A                     u1280:
  2081   00127A  1E14               	comf	(___aomod@divisor+7)^0,f,c
  2082   00127C  1E13               	comf	(___aomod@divisor+6)^0,f,c
  2083   00127E  1E12               	comf	(___aomod@divisor+5)^0,f,c
  2084   001280  1E11               	comf	(___aomod@divisor+4)^0,f,c
  2085   001282  1E10               	comf	(___aomod@divisor+3)^0,f,c
  2086   001284  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  2087   001286  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  2088   001288  6C0D               	negf	___aomod@divisor^0,c
  2089   00128A  0E00               	movlw	0
  2090   00128C  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  2091   00128E  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  2092   001290  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  2093   001292  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  2094   001294  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  2095   001296  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  2096   001298  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  2097   00129A                     l2252:
  2098   00129A  500D               	movf	___aomod@divisor^0,w,c
  2099   00129C  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  2100   00129E  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  2101   0012A0  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  2102   0012A2  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  2103   0012A4  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  2104   0012A6  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  2105   0012A8  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  2106   0012AA  B4D8               	btfsc	status,2,c
  2107   0012AC  EF5A  F009         	goto	u1291
  2108   0012B0  EF5C  F009         	goto	u1290
  2109   0012B4                     u1291:
  2110   0012B4  EFA4  F009         	goto	l2268
  2111   0012B8                     u1290:
  2112   0012B8  0E01               	movlw	1
  2113   0012BA  6E15               	movwf	___aomod@counter^0,c
  2114   0012BC  EF6A  F009         	goto	l2258
  2115   0012C0                     l2256:
  2116   0012C0  90D8               	bcf	status,0,c
  2117   0012C2  360D               	rlcf	___aomod@divisor^0,f,c
  2118   0012C4  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  2119   0012C6  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  2120   0012C8  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  2121   0012CA  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  2122   0012CC  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  2123   0012CE  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  2124   0012D0  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  2125   0012D2  2A15               	incf	___aomod@counter^0,f,c
  2126   0012D4                     l2258:
  2127   0012D4  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  2128   0012D6  EF6F  F009         	goto	u1301
  2129   0012DA  EF71  F009         	goto	u1300
  2130   0012DE                     u1301:
  2131   0012DE  EF60  F009         	goto	l2256
  2132   0012E2                     u1300:
  2133   0012E2                     l2260:
  2134   0012E2  500D               	movf	___aomod@divisor^0,w,c
  2135   0012E4  5C05               	subwf	___aomod@dividend^0,w,c
  2136   0012E6  500E               	movf	(___aomod@divisor+1)^0,w,c
  2137   0012E8  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  2138   0012EA  500F               	movf	(___aomod@divisor+2)^0,w,c
  2139   0012EC  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  2140   0012EE  5010               	movf	(___aomod@divisor+3)^0,w,c
  2141   0012F0  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  2142   0012F2  5011               	movf	(___aomod@divisor+4)^0,w,c
  2143   0012F4  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  2144   0012F6  5012               	movf	(___aomod@divisor+5)^0,w,c
  2145   0012F8  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  2146   0012FA  5013               	movf	(___aomod@divisor+6)^0,w,c
  2147   0012FC  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  2148   0012FE  5014               	movf	(___aomod@divisor+7)^0,w,c
  2149   001300  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  2150   001302  A0D8               	btfss	status,0,c
  2151   001304  EF86  F009         	goto	u1311
  2152   001308  EF88  F009         	goto	u1310
  2153   00130C                     u1311:
  2154   00130C  EF98  F009         	goto	l2264
  2155   001310                     u1310:
  2156   001310  500D               	movf	___aomod@divisor^0,w,c
  2157   001312  5E05               	subwf	___aomod@dividend^0,f,c
  2158   001314  500E               	movf	(___aomod@divisor+1)^0,w,c
  2159   001316  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  2160   001318  500F               	movf	(___aomod@divisor+2)^0,w,c
  2161   00131A  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  2162   00131C  5010               	movf	(___aomod@divisor+3)^0,w,c
  2163   00131E  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  2164   001320  5011               	movf	(___aomod@divisor+4)^0,w,c
  2165   001322  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  2166   001324  5012               	movf	(___aomod@divisor+5)^0,w,c
  2167   001326  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  2168   001328  5013               	movf	(___aomod@divisor+6)^0,w,c
  2169   00132A  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  2170   00132C  5014               	movf	(___aomod@divisor+7)^0,w,c
  2171   00132E  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  2172   001330                     l2264:
  2173   001330  90D8               	bcf	status,0,c
  2174   001332  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  2175   001334  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  2176   001336  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  2177   001338  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  2178   00133A  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  2179   00133C  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  2180   00133E  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  2181   001340  320D               	rrcf	___aomod@divisor^0,f,c
  2182   001342  2E15               	decfsz	___aomod@counter^0,f,c
  2183   001344  EF71  F009         	goto	l2260
  2184   001348                     l2268:
  2185   001348  5016               	movf	___aomod@sign^0,w,c
  2186   00134A  B4D8               	btfsc	status,2,c
  2187   00134C  EFAA  F009         	goto	u1321
  2188   001350  EFAC  F009         	goto	u1320
  2189   001354                     u1321:
  2190   001354  EFBC  F009         	goto	l2272
  2191   001358                     u1320:
  2192   001358  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2193   00135A  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2194   00135C  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2195   00135E  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2196   001360  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2197   001362  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2198   001364  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2199   001366  6C05               	negf	___aomod@dividend^0,c
  2200   001368  0E00               	movlw	0
  2201   00136A  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2202   00136C  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2203   00136E  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2204   001370  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2205   001372  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2206   001374  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2207   001376  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2208   001378                     l2272:
  2209   001378  C005  F005         	movff	___aomod@dividend,?___aomod
  2210   00137C  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  2211   001380  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  2212   001384  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  2213   001388  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  2214   00138C  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  2215   001390  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  2216   001394  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  2217   001398  0012               	return		;funcret
  2218   00139A                     __end_of___aomod:
  2219                           	callstack 0
  2220                           
  2221 ;; *************** function ___aodiv *****************
  2222 ;; Defined at:
  2223 ;;		line 9 in file "D:\ECM\pic\sources\c99\common\aodiv.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;  dividend        8    4[COMRAM] long long 
  2226 ;;  divisor         8   12[COMRAM] long long 
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;  quotient        8   22[COMRAM] long long 
  2229 ;;  sign            1   21[COMRAM] unsigned char 
  2230 ;;  counter         1   20[COMRAM] unsigned char 
  2231 ;; Return value:  Size  Location     Type
  2232 ;;                  8    4[COMRAM] long long 
  2233 ;; Registers used:
  2234 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2235 ;; Tracked objects:
  2236 ;;		On entry : 0/0
  2237 ;;		On exit  : 0/0
  2238 ;;		Unchanged: 0/0
  2239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2240 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2241 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2243 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2244 ;;Total ram usage:       26 bytes
  2245 ;; Hardware stack levels used: 1
  2246 ;; Hardware stack levels required when called: 2
  2247 ;; This function calls:
  2248 ;;		Nothing
  2249 ;; This function is called by:
  2250 ;;		_dtoa
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254                           	psect	text11
  2255   0010AE                     __ptext11:
  2256                           	callstack 0
  2257   0010AE                     ___aodiv:
  2258                           	callstack 24
  2259   0010AE  0E00               	movlw	0
  2260   0010B0  6E16               	movwf	___aodiv@sign^0,c
  2261   0010B2  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  2262   0010B4  EF60  F008         	goto	u1200
  2263   0010B8  EF5E  F008         	goto	u1201
  2264   0010BC                     u1201:
  2265   0010BC  EF72  F008         	goto	l2204
  2266   0010C0                     u1200:
  2267   0010C0  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  2268   0010C2  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  2269   0010C4  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  2270   0010C6  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  2271   0010C8  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  2272   0010CA  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  2273   0010CC  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  2274   0010CE  6C0D               	negf	___aodiv@divisor^0,c
  2275   0010D0  0E00               	movlw	0
  2276   0010D2  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  2277   0010D4  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  2278   0010D6  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  2279   0010D8  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  2280   0010DA  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  2281   0010DC  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  2282   0010DE  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  2283   0010E0  0E01               	movlw	1
  2284   0010E2  6E16               	movwf	___aodiv@sign^0,c
  2285   0010E4                     l2204:
  2286   0010E4  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  2287   0010E6  EF79  F008         	goto	u1210
  2288   0010EA  EF77  F008         	goto	u1211
  2289   0010EE                     u1211:
  2290   0010EE  EF8B  F008         	goto	l2210
  2291   0010F2                     u1210:
  2292   0010F2  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  2293   0010F4  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  2294   0010F6  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  2295   0010F8  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  2296   0010FA  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  2297   0010FC  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  2298   0010FE  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  2299   001100  6C05               	negf	___aodiv@dividend^0,c
  2300   001102  0E00               	movlw	0
  2301   001104  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  2302   001106  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  2303   001108  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  2304   00110A  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  2305   00110C  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  2306   00110E  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  2307   001110  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  2308   001112  0E01               	movlw	1
  2309   001114  1A16               	xorwf	___aodiv@sign^0,f,c
  2310   001116                     l2210:
  2311   001116  EE20  F017         	lfsr	2,___aodiv@quotient
  2312   00111A  0E07               	movlw	7
  2313   00111C                     u1221:
  2314   00111C  6ADE               	clrf	postinc2,c
  2315   00111E  06E8               	decf	wreg,f,c
  2316   001120  E2FD               	bc	u1221
  2317   001122  500D               	movf	___aodiv@divisor^0,w,c
  2318   001124  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  2319   001126  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  2320   001128  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  2321   00112A  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  2322   00112C  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  2323   00112E  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  2324   001130  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  2325   001132  B4D8               	btfsc	status,2,c
  2326   001134  EF9E  F008         	goto	u1231
  2327   001138  EFA0  F008         	goto	u1230
  2328   00113C                     u1231:
  2329   00113C  EFF2  F008         	goto	l2232
  2330   001140                     u1230:
  2331   001140  0E01               	movlw	1
  2332   001142  6E15               	movwf	___aodiv@counter^0,c
  2333   001144  EFAE  F008         	goto	l2218
  2334   001148                     l2216:
  2335   001148  90D8               	bcf	status,0,c
  2336   00114A  360D               	rlcf	___aodiv@divisor^0,f,c
  2337   00114C  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  2338   00114E  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  2339   001150  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  2340   001152  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  2341   001154  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  2342   001156  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  2343   001158  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  2344   00115A  2A15               	incf	___aodiv@counter^0,f,c
  2345   00115C                     l2218:
  2346   00115C  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  2347   00115E  EFB3  F008         	goto	u1241
  2348   001162  EFB5  F008         	goto	u1240
  2349   001166                     u1241:
  2350   001166  EFA4  F008         	goto	l2216
  2351   00116A                     u1240:
  2352   00116A                     l2220:
  2353   00116A  90D8               	bcf	status,0,c
  2354   00116C  3617               	rlcf	___aodiv@quotient^0,f,c
  2355   00116E  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  2356   001170  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  2357   001172  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  2358   001174  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  2359   001176  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  2360   001178  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  2361   00117A  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  2362   00117C  500D               	movf	___aodiv@divisor^0,w,c
  2363   00117E  5C05               	subwf	___aodiv@dividend^0,w,c
  2364   001180  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2365   001182  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  2366   001184  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2367   001186  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  2368   001188  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2369   00118A  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  2370   00118C  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2371   00118E  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  2372   001190  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2373   001192  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  2374   001194  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2375   001196  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  2376   001198  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2377   00119A  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  2378   00119C  A0D8               	btfss	status,0,c
  2379   00119E  EFD3  F008         	goto	u1251
  2380   0011A2  EFD5  F008         	goto	u1250
  2381   0011A6                     u1251:
  2382   0011A6  EFE6  F008         	goto	l2228
  2383   0011AA                     u1250:
  2384   0011AA  500D               	movf	___aodiv@divisor^0,w,c
  2385   0011AC  5E05               	subwf	___aodiv@dividend^0,f,c
  2386   0011AE  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2387   0011B0  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  2388   0011B2  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2389   0011B4  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  2390   0011B6  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2391   0011B8  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  2392   0011BA  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2393   0011BC  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  2394   0011BE  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2395   0011C0  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  2396   0011C2  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2397   0011C4  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  2398   0011C6  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2399   0011C8  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  2400   0011CA  8017               	bsf	___aodiv@quotient^0,0,c
  2401   0011CC                     l2228:
  2402   0011CC  90D8               	bcf	status,0,c
  2403   0011CE  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  2404   0011D0  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  2405   0011D2  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  2406   0011D4  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  2407   0011D6  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  2408   0011D8  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  2409   0011DA  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  2410   0011DC  320D               	rrcf	___aodiv@divisor^0,f,c
  2411   0011DE  2E15               	decfsz	___aodiv@counter^0,f,c
  2412   0011E0  EFB5  F008         	goto	l2220
  2413   0011E4                     l2232:
  2414   0011E4  5016               	movf	___aodiv@sign^0,w,c
  2415   0011E6  B4D8               	btfsc	status,2,c
  2416   0011E8  EFF8  F008         	goto	u1261
  2417   0011EC  EFFA  F008         	goto	u1260
  2418   0011F0                     u1261:
  2419   0011F0  EF0A  F009         	goto	l2236
  2420   0011F4                     u1260:
  2421   0011F4  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  2422   0011F6  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  2423   0011F8  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  2424   0011FA  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  2425   0011FC  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  2426   0011FE  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  2427   001200  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  2428   001202  6C17               	negf	___aodiv@quotient^0,c
  2429   001204  0E00               	movlw	0
  2430   001206  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  2431   001208  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  2432   00120A  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  2433   00120C  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  2434   00120E  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  2435   001210  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  2436   001212  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  2437   001214                     l2236:
  2438   001214  C017  F005         	movff	___aodiv@quotient,?___aodiv
  2439   001218  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  2440   00121C  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  2441   001220  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  2442   001224  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  2443   001228  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  2444   00122C  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  2445   001230  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  2446   001234  0012               	return		;funcret
  2447   001236                     __end_of___aodiv:
  2448                           	callstack 0
  2449                           
  2450 ;; *************** function _sendStringSerial4 *****************
  2451 ;; Defined at:
  2452 ;;		line 38 in file "../serial.c"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;  string          2    5[COMRAM] PTR unsigned char 
  2455 ;;		 -> main@buf(40), 
  2456 ;; Auto vars:     Size  Location     Type
  2457 ;;		None
  2458 ;; Return value:  Size  Location     Type
  2459 ;;                  1    wreg      void 
  2460 ;; Registers used:
  2461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2462 ;; Tracked objects:
  2463 ;;		On entry : 0/0
  2464 ;;		On exit  : 0/0
  2465 ;;		Unchanged: 0/0
  2466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2467 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2470 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2471 ;;Total ram usage:        2 bytes
  2472 ;; Hardware stack levels used: 1
  2473 ;; Hardware stack levels required when called: 3
  2474 ;; This function calls:
  2475 ;;		_sendCharSerial4
  2476 ;; This function is called by:
  2477 ;;		_main
  2478 ;; This function uses a non-reentrant model
  2479 ;;
  2480                           
  2481                           	psect	text12
  2482   001AE4                     __ptext12:
  2483                           	callstack 0
  2484   001AE4                     _sendStringSerial4:
  2485                           	callstack 27
  2486   001AE4                     
  2487                           ;../serial.c: 40:     while (*string != 0) {
  2488   001AE4  EF7D  F00D         	goto	l2062
  2489   001AE8                     l2058:
  2490                           
  2491                           ;../serial.c: 41:         sendCharSerial4(*string++);
  2492   001AE8  C006  FFD9         	movff	sendStringSerial4@string,fsr2l
  2493   001AEC  C007  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2494   001AF0  50DF               	movf	indf2,w,c
  2495   001AF2  ECFE  F00D         	call	_sendCharSerial4
  2496   001AF6  4A06               	infsnz	sendStringSerial4@string^0,f,c
  2497   001AF8  2A07               	incf	(sendStringSerial4@string+1)^0,f,c
  2498   001AFA                     l2062:
  2499                           
  2500                           ;../serial.c: 40:     while (*string != 0) {
  2501   001AFA  C006  FFD9         	movff	sendStringSerial4@string,fsr2l
  2502   001AFE  C007  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2503   001B02  50DF               	movf	indf2,w,c
  2504   001B04  A4D8               	btfss	status,2,c
  2505   001B06  EF87  F00D         	goto	u1041
  2506   001B0A  EF89  F00D         	goto	u1040
  2507   001B0E                     u1041:
  2508   001B0E  EF74  F00D         	goto	l2058
  2509   001B12                     u1040:
  2510   001B12  0012               	return		;funcret
  2511   001B14                     __end_of_sendStringSerial4:
  2512                           	callstack 0
  2513                           
  2514 ;; *************** function _sendCharSerial4 *****************
  2515 ;; Defined at:
  2516 ;;		line 31 in file "../serial.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;  charToSend      1    wreg     unsigned char 
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;  charToSend      1    4[COMRAM] unsigned char 
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  1    wreg      void 
  2523 ;; Registers used:
  2524 ;;		wreg
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2531 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2533 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2534 ;;Total ram usage:        1 bytes
  2535 ;; Hardware stack levels used: 1
  2536 ;; Hardware stack levels required when called: 2
  2537 ;; This function calls:
  2538 ;;		Nothing
  2539 ;; This function is called by:
  2540 ;;		_sendStringSerial4
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	text13
  2545   001BFC                     __ptext13:
  2546                           	callstack 0
  2547   001BFC                     _sendCharSerial4:
  2548                           	callstack 27
  2549                           
  2550                           ;incstack = 0
  2551                           ;sendCharSerial4@charToSend stored from wreg
  2552   001BFC  6E05               	movwf	sendCharSerial4@charToSend^0,c
  2553   001BFE                     l328:
  2554   001BFE  010E               	movlb	14	; () banked
  2555   001C00  A537               	btfss	55,2,b	;volatile
  2556   001C02  EF05  F00E         	goto	u1021
  2557   001C06  EF07  F00E         	goto	u1020
  2558   001C0A                     u1021:
  2559   001C0A  EFFF  F00D         	goto	l328
  2560   001C0E                     u1020:
  2561   001C0E                     
  2562                           ; BSR set to: 14
  2563                           ;../serial.c: 33:     TX4REG = charToSend;
  2564   001C0E  C005  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2565   001C12                     
  2566                           ; BSR set to: 14
  2567   001C12  0012               	return		;funcret
  2568   001C14                     __end_of_sendCharSerial4:
  2569                           	callstack 0
  2570                           
  2571 ;; *************** function _initUSART4 *****************
  2572 ;; Defined at:
  2573 ;;		line 5 in file "../serial.c"
  2574 ;; Parameters:    Size  Location     Type
  2575 ;;		None
  2576 ;; Auto vars:     Size  Location     Type
  2577 ;;		None
  2578 ;; Return value:  Size  Location     Type
  2579 ;;                  1    wreg      void 
  2580 ;; Registers used:
  2581 ;;		wreg, status,2
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2591 ;;Total ram usage:        0 bytes
  2592 ;; Hardware stack levels used: 1
  2593 ;; Hardware stack levels required when called: 2
  2594 ;; This function calls:
  2595 ;;		Nothing
  2596 ;; This function is called by:
  2597 ;;		_main
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text14
  2602   001BBC                     __ptext14:
  2603                           	callstack 0
  2604   001BBC                     _initUSART4:
  2605                           	callstack 28
  2606   001BBC                     
  2607                           ;../serial.c: 7:     RC0PPS = 0x12;
  2608   001BBC  0E12               	movlw	18
  2609   001BBE  010E               	movlb	14	; () banked
  2610   001BC0  6F62               	movwf	98,b	;volatile
  2611                           
  2612                           ;../serial.c: 8:     RX4PPS = 0x11;
  2613   001BC2  0E11               	movlw	17
  2614   001BC4  6F15               	movwf	21,b	;volatile
  2615   001BC6                     
  2616                           ; BSR set to: 14
  2617                           ;../serial.c: 9:     TRISCbits.TRISC1 = 1;
  2618   001BC6  8283               	bsf	131,1,c	;volatile
  2619   001BC8                     
  2620                           ; BSR set to: 14
  2621                           ;../serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  2622   001BC8  97E9               	bcf	233,3,b	;volatile
  2623   001BCA                     
  2624                           ; BSR set to: 14
  2625                           ;../serial.c: 13:     TX4STAbits.BRGH = 0;
  2626   001BCA  95E8               	bcf	232,2,b	;volatile
  2627                           
  2628                           ;../serial.c: 14:     SP4BRGL = 51;
  2629   001BCC  0E33               	movlw	51
  2630   001BCE  6FE5               	movwf	229,b	;volatile
  2631                           
  2632                           ;../serial.c: 15:     SP4BRGH = 0;
  2633   001BD0  0E00               	movlw	0
  2634   001BD2  6FE6               	movwf	230,b	;volatile
  2635   001BD4                     
  2636                           ; BSR set to: 14
  2637                           ;../serial.c: 17:     RC4STAbits.CREN = 1;
  2638   001BD4  89E7               	bsf	231,4,b	;volatile
  2639   001BD6                     
  2640                           ; BSR set to: 14
  2641                           ;../serial.c: 18:     TX4STAbits.TXEN = 1;
  2642   001BD6  8BE8               	bsf	232,5,b	;volatile
  2643   001BD8                     
  2644                           ; BSR set to: 14
  2645                           ;../serial.c: 19:     RC4STAbits.SPEN = 1;
  2646   001BD8  8FE7               	bsf	231,7,b	;volatile
  2647   001BDA                     
  2648                           ; BSR set to: 14
  2649   001BDA  0012               	return		;funcret
  2650   001BDC                     __end_of_initUSART4:
  2651                           	callstack 0
  2652                           
  2653 ;; *************** function _initDCmotorsPWM *****************
  2654 ;; Defined at:
  2655 ;;		line 5 in file "../dc_motor.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;  PWMperiod       2    4[COMRAM] unsigned int 
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;		None
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  1    wreg      void 
  2662 ;; Registers used:
  2663 ;;		wreg, status,2
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2669 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2672 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2673 ;;Total ram usage:        2 bytes
  2674 ;; Hardware stack levels used: 1
  2675 ;; Hardware stack levels required when called: 2
  2676 ;; This function calls:
  2677 ;;		Nothing
  2678 ;; This function is called by:
  2679 ;;		_main
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683                           	psect	text15
  2684   0016CC                     __ptext15:
  2685                           	callstack 0
  2686   0016CC                     _initDCmotorsPWM:
  2687                           	callstack 28
  2688   0016CC                     
  2689                           ;../dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2690   0016CC  9485               	bcf	133,2,c	;volatile
  2691                           
  2692                           ;../dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2693   0016CE  9885               	bcf	133,4,c	;volatile
  2694                           
  2695                           ;../dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2696   0016D0  9E83               	bcf	131,7,c	;volatile
  2697                           
  2698                           ;../dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2699   0016D2  9C87               	bcf	135,6,c	;volatile
  2700                           
  2701                           ;../dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2702   0016D4  947D               	bcf	125,2,c	;volatile
  2703                           
  2704                           ;../dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2705   0016D6  987D               	bcf	125,4,c	;volatile
  2706                           
  2707                           ;../dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2708   0016D8  9E7B               	bcf	123,7,c	;volatile
  2709                           
  2710                           ;../dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2711   0016DA  9C7F               	bcf	127,6,c	;volatile
  2712   0016DC                     
  2713                           ;../dc_motor.c: 18:     RE2PPS=0x05;
  2714   0016DC  0E05               	movlw	5
  2715   0016DE  010E               	movlb	14	; () banked
  2716   0016E0  6F74               	movwf	116,b	;volatile
  2717                           
  2718                           ;../dc_motor.c: 19:     RE4PPS=0x06;
  2719   0016E2  0E06               	movlw	6
  2720   0016E4  6F76               	movwf	118,b	;volatile
  2721                           
  2722                           ;../dc_motor.c: 20:     RC7PPS=0x07;
  2723   0016E6  0E07               	movlw	7
  2724   0016E8  6F69               	movwf	105,b	;volatile
  2725                           
  2726                           ;../dc_motor.c: 21:     RG6PPS=0x08;
  2727   0016EA  0E08               	movlw	8
  2728   0016EC  6F88               	movwf	136,b	;volatile
  2729                           
  2730                           ;../dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  2731   0016EE  50BD               	movf	189,w,c	;volatile
  2732   0016F0  0B8F               	andlw	-113
  2733   0016F2  0940               	iorlw	64
  2734   0016F4  6EBD               	movwf	189,c	;volatile
  2735                           
  2736                           ;../dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  2737   0016F6  0EE0               	movlw	-32
  2738   0016F8  16BE               	andwf	190,f,c	;volatile
  2739                           
  2740                           ;../dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  2741   0016FA  50BF               	movf	191,w,c	;volatile
  2742   0016FC  0BF0               	andlw	-16
  2743   0016FE  0901               	iorlw	1
  2744   001700  6EBF               	movwf	191,c	;volatile
  2745   001702                     
  2746                           ; BSR set to: 14
  2747                           ;../dc_motor.c: 30:     T2PR=PWMperiod;
  2748   001702  C005  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  2749   001706                     
  2750                           ; BSR set to: 14
  2751                           ;../dc_motor.c: 31:     T2CONbits.ON=1;
  2752   001706  8EBD               	bsf	189,7,c	;volatile
  2753                           
  2754                           ;../dc_motor.c: 35:     CCPR1H=0;
  2755   001708  0E00               	movlw	0
  2756   00170A  6EAA               	movwf	170,c	;volatile
  2757                           
  2758                           ;../dc_motor.c: 36:     CCPR2H=0;
  2759   00170C  0E00               	movlw	0
  2760   00170E  6EA6               	movwf	166,c	;volatile
  2761                           
  2762                           ;../dc_motor.c: 37:     CCPR3H=0;
  2763   001710  0E00               	movlw	0
  2764   001712  010F               	movlb	15	; () banked
  2765   001714  6F25               	movwf	37,b	;volatile
  2766                           
  2767                           ;../dc_motor.c: 38:     CCPR4H=0;
  2768   001716  0E00               	movlw	0
  2769   001718  6F21               	movwf	33,b	;volatile
  2770                           
  2771                           ;../dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  2772   00171A  0EFC               	movlw	-4
  2773   00171C  16AD               	andwf	173,f,c	;volatile
  2774                           
  2775                           ;../dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  2776   00171E  0EF3               	movlw	-13
  2777   001720  16AD               	andwf	173,f,c	;volatile
  2778                           
  2779                           ;../dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  2780   001722  0ECF               	movlw	-49
  2781   001724  16AD               	andwf	173,f,c	;volatile
  2782                           
  2783                           ;../dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  2784   001726  0E3F               	movlw	-193
  2785   001728  16AD               	andwf	173,f,c	;volatile
  2786   00172A                     
  2787                           ; BSR set to: 15
  2788                           ;../dc_motor.c: 47:     CCP1CONbits.FMT=1;
  2789   00172A  88AB               	bsf	171,4,c	;volatile
  2790                           
  2791                           ;../dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  2792   00172C  50AB               	movf	171,w,c	;volatile
  2793   00172E  0BF0               	andlw	-16
  2794   001730  090C               	iorlw	12
  2795   001732  6EAB               	movwf	171,c	;volatile
  2796   001734                     
  2797                           ; BSR set to: 15
  2798                           ;../dc_motor.c: 49:     CCP1CONbits.EN=1;
  2799   001734  8EAB               	bsf	171,7,c	;volatile
  2800   001736                     
  2801                           ; BSR set to: 15
  2802                           ;../dc_motor.c: 52:     CCP2CONbits.FMT=1;
  2803   001736  88A7               	bsf	167,4,c	;volatile
  2804                           
  2805                           ;../dc_motor.c: 53:     CCP2CONbits.CCP2MODE=0b1100;
  2806   001738  50A7               	movf	167,w,c	;volatile
  2807   00173A  0BF0               	andlw	-16
  2808   00173C  090C               	iorlw	12
  2809   00173E  6EA7               	movwf	167,c	;volatile
  2810   001740                     
  2811                           ; BSR set to: 15
  2812                           ;../dc_motor.c: 54:     CCP2CONbits.EN=1;
  2813   001740  8EA7               	bsf	167,7,c	;volatile
  2814   001742                     
  2815                           ; BSR set to: 15
  2816                           ;../dc_motor.c: 58:     CCP3CONbits.FMT=1;
  2817   001742  8926               	bsf	38,4,b	;volatile
  2818                           
  2819                           ;../dc_motor.c: 59:     CCP3CONbits.CCP3MODE=0b1100;
  2820   001744  5126               	movf	38,w,b	;volatile
  2821   001746  0BF0               	andlw	-16
  2822   001748  090C               	iorlw	12
  2823   00174A  6F26               	movwf	38,b	;volatile
  2824   00174C                     
  2825                           ; BSR set to: 15
  2826                           ;../dc_motor.c: 60:     CCP3CONbits.EN=1;
  2827   00174C  8F26               	bsf	38,7,b	;volatile
  2828   00174E                     
  2829                           ; BSR set to: 15
  2830                           ;../dc_motor.c: 63:     CCP4CONbits.FMT=1;
  2831   00174E  8922               	bsf	34,4,b	;volatile
  2832                           
  2833                           ;../dc_motor.c: 64:     CCP4CONbits.CCP4MODE=0b1100;
  2834   001750  5122               	movf	34,w,b	;volatile
  2835   001752  0BF0               	andlw	-16
  2836   001754  090C               	iorlw	12
  2837   001756  6F22               	movwf	34,b	;volatile
  2838   001758                     
  2839                           ; BSR set to: 15
  2840                           ;../dc_motor.c: 65:     CCP4CONbits.EN=1;
  2841   001758  8F22               	bsf	34,7,b	;volatile
  2842   00175A                     
  2843                           ; BSR set to: 15
  2844   00175A  0012               	return		;funcret
  2845   00175C                     __end_of_initDCmotorsPWM:
  2846                           	callstack 0
  2847                           
  2848 ;; *************** function _color_read_Red *****************
  2849 ;; Defined at:
  2850 ;;		line 29 in file "../color.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;		None
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;  tmp             2   13[COMRAM] unsigned int 
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  2    8[COMRAM] unsigned int 
  2857 ;; Registers used:
  2858 ;;		wreg, status,2, status,0, cstack
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2864 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2865 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2866 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2867 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2868 ;;Total ram usage:        7 bytes
  2869 ;; Hardware stack levels used: 1
  2870 ;; Hardware stack levels required when called: 4
  2871 ;; This function calls:
  2872 ;;		_I2C_2_Master_Read
  2873 ;;		_I2C_2_Master_RepStart
  2874 ;;		_I2C_2_Master_Start
  2875 ;;		_I2C_2_Master_Stop
  2876 ;;		_I2C_2_Master_Write
  2877 ;; This function is called by:
  2878 ;;		_main
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           	psect	text16
  2883   001878                     __ptext16:
  2884                           	callstack 0
  2885   001878                     _color_read_Red:
  2886                           	callstack 26
  2887   001878                     
  2888                           ;../color.c: 31:  unsigned int tmp;;../color.c: 32:  I2C_2_Master_Start();
  2889   001878  EC2C  F00E         	call	_I2C_2_Master_Start	;wreg free
  2890                           
  2891                           ;../color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  2892   00187C  0E52               	movlw	82
  2893   00187E  EC16  F00E         	call	_I2C_2_Master_Write
  2894                           
  2895                           ;../color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  2896   001882  0EB6               	movlw	182
  2897   001884  EC16  F00E         	call	_I2C_2_Master_Write
  2898                           
  2899                           ;../color.c: 35:  I2C_2_Master_RepStart();
  2900   001888  EC22  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  2901                           
  2902                           ;../color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  2903   00188C  0E53               	movlw	83
  2904   00188E  EC16  F00E         	call	_I2C_2_Master_Write
  2905                           
  2906                           ;../color.c: 37:  tmp=I2C_2_Master_Read(1);
  2907   001892  0E01               	movlw	1
  2908   001894  ECFE  F00C         	call	_I2C_2_Master_Read
  2909   001898  6E0B               	movwf	??_color_read_Red^0,c
  2910   00189A  500B               	movf	??_color_read_Red^0,w,c
  2911   00189C  6E0E               	movwf	color_read_Red@tmp^0,c
  2912   00189E  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
  2913                           
  2914                           ;../color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2915   0018A0  0E00               	movlw	0
  2916   0018A2  ECFE  F00C         	call	_I2C_2_Master_Read
  2917   0018A6  6E0B               	movwf	??_color_read_Red^0,c
  2918   0018A8  500B               	movf	??_color_read_Red^0,w,c
  2919   0018AA  6E0D               	movwf	(??_color_read_Red+2)^0,c
  2920   0018AC  6A0C               	clrf	(??_color_read_Red+1)^0,c
  2921   0018AE  500E               	movf	color_read_Red@tmp^0,w,c
  2922   0018B0  100C               	iorwf	(??_color_read_Red+1)^0,w,c
  2923   0018B2  6E0E               	movwf	color_read_Red@tmp^0,c
  2924   0018B4  500F               	movf	(color_read_Red@tmp+1)^0,w,c
  2925   0018B6  100D               	iorwf	(??_color_read_Red+2)^0,w,c
  2926   0018B8  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
  2927                           
  2928                           ;../color.c: 39:  I2C_2_Master_Stop();
  2929   0018BA  EC27  F00E         	call	_I2C_2_Master_Stop	;wreg free
  2930   0018BE                     
  2931                           ;../color.c: 40:  return tmp;
  2932   0018BE  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
  2933   0018C2  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2934   0018C6  0012               	return		;funcret
  2935   0018C8                     __end_of_color_read_Red:
  2936                           	callstack 0
  2937                           
  2938 ;; *************** function _color_read_Green *****************
  2939 ;; Defined at:
  2940 ;;		line 58 in file "../color.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;		None
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;  tmp             2   13[COMRAM] unsigned int 
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  2    8[COMRAM] unsigned int 
  2947 ;; Registers used:
  2948 ;;		wreg, status,2, status,0, cstack
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2954 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2955 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2956 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2957 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2958 ;;Total ram usage:        7 bytes
  2959 ;; Hardware stack levels used: 1
  2960 ;; Hardware stack levels required when called: 4
  2961 ;; This function calls:
  2962 ;;		_I2C_2_Master_Read
  2963 ;;		_I2C_2_Master_RepStart
  2964 ;;		_I2C_2_Master_Start
  2965 ;;		_I2C_2_Master_Stop
  2966 ;;		_I2C_2_Master_Write
  2967 ;; This function is called by:
  2968 ;;		_main
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           	psect	text17
  2973   0018C8                     __ptext17:
  2974                           	callstack 0
  2975   0018C8                     _color_read_Green:
  2976                           	callstack 26
  2977   0018C8                     
  2978                           ;../color.c: 60:  unsigned int tmp;;../color.c: 61:  I2C_2_Master_Start();
  2979   0018C8  EC2C  F00E         	call	_I2C_2_Master_Start	;wreg free
  2980                           
  2981                           ;../color.c: 62:  I2C_2_Master_Write(0x52 | 0x00);
  2982   0018CC  0E52               	movlw	82
  2983   0018CE  EC16  F00E         	call	_I2C_2_Master_Write
  2984                           
  2985                           ;../color.c: 64:  I2C_2_Master_Write(0xA0 | 0x18);
  2986   0018D2  0EB8               	movlw	184
  2987   0018D4  EC16  F00E         	call	_I2C_2_Master_Write
  2988                           
  2989                           ;../color.c: 65:  I2C_2_Master_RepStart();
  2990   0018D8  EC22  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  2991                           
  2992                           ;../color.c: 66:  I2C_2_Master_Write(0x52 | 0x01);
  2993   0018DC  0E53               	movlw	83
  2994   0018DE  EC16  F00E         	call	_I2C_2_Master_Write
  2995                           
  2996                           ;../color.c: 67:  tmp=I2C_2_Master_Read(1);
  2997   0018E2  0E01               	movlw	1
  2998   0018E4  ECFE  F00C         	call	_I2C_2_Master_Read
  2999   0018E8  6E0B               	movwf	??_color_read_Green^0,c
  3000   0018EA  500B               	movf	??_color_read_Green^0,w,c
  3001   0018EC  6E0E               	movwf	color_read_Green@tmp^0,c
  3002   0018EE  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
  3003                           
  3004                           ;../color.c: 68:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3005   0018F0  0E00               	movlw	0
  3006   0018F2  ECFE  F00C         	call	_I2C_2_Master_Read
  3007   0018F6  6E0B               	movwf	??_color_read_Green^0,c
  3008   0018F8  500B               	movf	??_color_read_Green^0,w,c
  3009   0018FA  6E0D               	movwf	(??_color_read_Green+2)^0,c
  3010   0018FC  6A0C               	clrf	(??_color_read_Green+1)^0,c
  3011   0018FE  500E               	movf	color_read_Green@tmp^0,w,c
  3012   001900  100C               	iorwf	(??_color_read_Green+1)^0,w,c
  3013   001902  6E0E               	movwf	color_read_Green@tmp^0,c
  3014   001904  500F               	movf	(color_read_Green@tmp+1)^0,w,c
  3015   001906  100D               	iorwf	(??_color_read_Green+2)^0,w,c
  3016   001908  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
  3017                           
  3018                           ;../color.c: 69:  I2C_2_Master_Stop();
  3019   00190A  EC27  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3020   00190E                     
  3021                           ;../color.c: 70:  return tmp;
  3022   00190E  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
  3023   001912  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3024   001916  0012               	return		;funcret
  3025   001918                     __end_of_color_read_Green:
  3026                           	callstack 0
  3027                           
  3028 ;; *************** function _color_read_Clear *****************
  3029 ;; Defined at:
  3030 ;;		line 73 in file "../color.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;		None
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;  tmp             2   13[COMRAM] unsigned int 
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  2    8[COMRAM] unsigned int 
  3037 ;; Registers used:
  3038 ;;		wreg, status,2, status,0, cstack
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3044 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3045 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3046 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3047 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3048 ;;Total ram usage:        7 bytes
  3049 ;; Hardware stack levels used: 1
  3050 ;; Hardware stack levels required when called: 4
  3051 ;; This function calls:
  3052 ;;		_I2C_2_Master_Read
  3053 ;;		_I2C_2_Master_RepStart
  3054 ;;		_I2C_2_Master_Start
  3055 ;;		_I2C_2_Master_Stop
  3056 ;;		_I2C_2_Master_Write
  3057 ;; This function is called by:
  3058 ;;		_main
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062                           	psect	text18
  3063   001918                     __ptext18:
  3064                           	callstack 0
  3065   001918                     _color_read_Clear:
  3066                           	callstack 26
  3067   001918                     
  3068                           ;../color.c: 75:  unsigned int tmp;;../color.c: 76:  I2C_2_Master_Start();
  3069   001918  EC2C  F00E         	call	_I2C_2_Master_Start	;wreg free
  3070                           
  3071                           ;../color.c: 77:  I2C_2_Master_Write(0x52 | 0x00);
  3072   00191C  0E52               	movlw	82
  3073   00191E  EC16  F00E         	call	_I2C_2_Master_Write
  3074                           
  3075                           ;../color.c: 79:  I2C_2_Master_Write(0xA0 | 0x14);
  3076   001922  0EB4               	movlw	180
  3077   001924  EC16  F00E         	call	_I2C_2_Master_Write
  3078                           
  3079                           ;../color.c: 80:  I2C_2_Master_RepStart();
  3080   001928  EC22  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3081                           
  3082                           ;../color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  3083   00192C  0E53               	movlw	83
  3084   00192E  EC16  F00E         	call	_I2C_2_Master_Write
  3085                           
  3086                           ;../color.c: 82:  tmp=I2C_2_Master_Read(1);
  3087   001932  0E01               	movlw	1
  3088   001934  ECFE  F00C         	call	_I2C_2_Master_Read
  3089   001938  6E0B               	movwf	??_color_read_Clear^0,c
  3090   00193A  500B               	movf	??_color_read_Clear^0,w,c
  3091   00193C  6E0E               	movwf	color_read_Clear@tmp^0,c
  3092   00193E  6A0F               	clrf	(color_read_Clear@tmp+1)^0,c
  3093                           
  3094                           ;../color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3095   001940  0E00               	movlw	0
  3096   001942  ECFE  F00C         	call	_I2C_2_Master_Read
  3097   001946  6E0B               	movwf	??_color_read_Clear^0,c
  3098   001948  500B               	movf	??_color_read_Clear^0,w,c
  3099   00194A  6E0D               	movwf	(??_color_read_Clear+2)^0,c
  3100   00194C  6A0C               	clrf	(??_color_read_Clear+1)^0,c
  3101   00194E  500E               	movf	color_read_Clear@tmp^0,w,c
  3102   001950  100C               	iorwf	(??_color_read_Clear+1)^0,w,c
  3103   001952  6E0E               	movwf	color_read_Clear@tmp^0,c
  3104   001954  500F               	movf	(color_read_Clear@tmp+1)^0,w,c
  3105   001956  100D               	iorwf	(??_color_read_Clear+2)^0,w,c
  3106   001958  6E0F               	movwf	(color_read_Clear@tmp+1)^0,c
  3107                           
  3108                           ;../color.c: 84:  I2C_2_Master_Stop();
  3109   00195A  EC27  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3110   00195E                     
  3111                           ;../color.c: 85:  return tmp;
  3112   00195E  C00E  F009         	movff	color_read_Clear@tmp,?_color_read_Clear
  3113   001962  C00F  F00A         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  3114   001966  0012               	return		;funcret
  3115   001968                     __end_of_color_read_Clear:
  3116                           	callstack 0
  3117                           
  3118 ;; *************** function _color_read_Blue *****************
  3119 ;; Defined at:
  3120 ;;		line 43 in file "../color.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;		None
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  tmp             2   13[COMRAM] unsigned int 
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  2    8[COMRAM] unsigned int 
  3127 ;; Registers used:
  3128 ;;		wreg, status,2, status,0, cstack
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3134 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3135 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3136 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3137 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3138 ;;Total ram usage:        7 bytes
  3139 ;; Hardware stack levels used: 1
  3140 ;; Hardware stack levels required when called: 4
  3141 ;; This function calls:
  3142 ;;		_I2C_2_Master_Read
  3143 ;;		_I2C_2_Master_RepStart
  3144 ;;		_I2C_2_Master_Start
  3145 ;;		_I2C_2_Master_Stop
  3146 ;;		_I2C_2_Master_Write
  3147 ;; This function is called by:
  3148 ;;		_main
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152                           	psect	text19
  3153   001968                     __ptext19:
  3154                           	callstack 0
  3155   001968                     _color_read_Blue:
  3156                           	callstack 26
  3157   001968                     
  3158                           ;../color.c: 45:  unsigned int tmp;;../color.c: 46:  I2C_2_Master_Start();
  3159   001968  EC2C  F00E         	call	_I2C_2_Master_Start	;wreg free
  3160                           
  3161                           ;../color.c: 47:  I2C_2_Master_Write(0x52 | 0x00);
  3162   00196C  0E52               	movlw	82
  3163   00196E  EC16  F00E         	call	_I2C_2_Master_Write
  3164                           
  3165                           ;../color.c: 49:  I2C_2_Master_Write(0xA0 | 0x1A);
  3166   001972  0EBA               	movlw	186
  3167   001974  EC16  F00E         	call	_I2C_2_Master_Write
  3168                           
  3169                           ;../color.c: 50:  I2C_2_Master_RepStart();
  3170   001978  EC22  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3171                           
  3172                           ;../color.c: 51:  I2C_2_Master_Write(0x52 | 0x01);
  3173   00197C  0E53               	movlw	83
  3174   00197E  EC16  F00E         	call	_I2C_2_Master_Write
  3175                           
  3176                           ;../color.c: 52:  tmp=I2C_2_Master_Read(1);
  3177   001982  0E01               	movlw	1
  3178   001984  ECFE  F00C         	call	_I2C_2_Master_Read
  3179   001988  6E0B               	movwf	??_color_read_Blue^0,c
  3180   00198A  500B               	movf	??_color_read_Blue^0,w,c
  3181   00198C  6E0E               	movwf	color_read_Blue@tmp^0,c
  3182   00198E  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
  3183                           
  3184                           ;../color.c: 53:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3185   001990  0E00               	movlw	0
  3186   001992  ECFE  F00C         	call	_I2C_2_Master_Read
  3187   001996  6E0B               	movwf	??_color_read_Blue^0,c
  3188   001998  500B               	movf	??_color_read_Blue^0,w,c
  3189   00199A  6E0D               	movwf	(??_color_read_Blue+2)^0,c
  3190   00199C  6A0C               	clrf	(??_color_read_Blue+1)^0,c
  3191   00199E  500E               	movf	color_read_Blue@tmp^0,w,c
  3192   0019A0  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
  3193   0019A2  6E0E               	movwf	color_read_Blue@tmp^0,c
  3194   0019A4  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
  3195   0019A6  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
  3196   0019A8  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
  3197                           
  3198                           ;../color.c: 54:  I2C_2_Master_Stop();
  3199   0019AA  EC27  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3200   0019AE                     
  3201                           ;../color.c: 55:  return tmp;
  3202   0019AE  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
  3203   0019B2  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3204   0019B6  0012               	return		;funcret
  3205   0019B8                     __end_of_color_read_Blue:
  3206                           	callstack 0
  3207                           
  3208 ;; *************** function _I2C_2_Master_RepStart *****************
  3209 ;; Defined at:
  3210 ;;		line 33 in file "../i2c.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;		None
  3213 ;; Auto vars:     Size  Location     Type
  3214 ;;		None
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  1    wreg      void 
  3217 ;; Registers used:
  3218 ;;		wreg, status,2, status,0, cstack
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3228 ;;Total ram usage:        0 bytes
  3229 ;; Hardware stack levels used: 1
  3230 ;; Hardware stack levels required when called: 3
  3231 ;; This function calls:
  3232 ;;		_I2C_2_Master_Idle
  3233 ;; This function is called by:
  3234 ;;		_color_read_Red
  3235 ;;		_color_read_Blue
  3236 ;;		_color_read_Green
  3237 ;;		_color_read_Clear
  3238 ;; This function uses a non-reentrant model
  3239 ;;
  3240                           
  3241                           	psect	text20
  3242   001C44                     __ptext20:
  3243                           	callstack 0
  3244   001C44                     _I2C_2_Master_RepStart:
  3245                           	callstack 26
  3246   001C44                     
  3247                           ;../i2c.c: 35:   I2C_2_Master_Idle();
  3248   001C44  ECCA  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3249   001C48                     
  3250                           ;../i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3251   001C48  010E               	movlb	14	; () banked
  3252   001C4A  83DA               	bsf	218,1,b	;volatile
  3253   001C4C                     
  3254                           ; BSR set to: 14
  3255   001C4C  0012               	return		;funcret
  3256   001C4E                     __end_of_I2C_2_Master_RepStart:
  3257                           	callstack 0
  3258                           
  3259 ;; *************** function _I2C_2_Master_Read *****************
  3260 ;; Defined at:
  3261 ;;		line 51 in file "../i2c.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;  ack             1    wreg     unsigned char 
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;  ack             1    6[COMRAM] unsigned char 
  3266 ;;  tmp             1    7[COMRAM] unsigned char 
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  1    wreg      unsigned char 
  3269 ;; Registers used:
  3270 ;;		wreg, status,2, status,0, cstack
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3277 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3278 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3279 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3280 ;;Total ram usage:        3 bytes
  3281 ;; Hardware stack levels used: 1
  3282 ;; Hardware stack levels required when called: 3
  3283 ;; This function calls:
  3284 ;;		_I2C_2_Master_Idle
  3285 ;; This function is called by:
  3286 ;;		_color_read_Red
  3287 ;;		_color_read_Blue
  3288 ;;		_color_read_Green
  3289 ;;		_color_read_Clear
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293                           	psect	text21
  3294   0019FC                     __ptext21:
  3295                           	callstack 0
  3296   0019FC                     _I2C_2_Master_Read:
  3297                           	callstack 26
  3298                           
  3299                           ; BSR set to: 14
  3300                           ;incstack = 0
  3301                           ;I2C_2_Master_Read@ack stored from wreg
  3302   0019FC  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  3303   0019FE                     
  3304                           ;../i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);../i2c.c: 52: {;../i2c
      +                          .c: 53:   unsigned char tmp;;../i2c.c: 54:   I2C_2_Master_Idle();
  3305   0019FE  ECCA  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3306   001A02                     
  3307                           ;../i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3308   001A02  010E               	movlb	14	; () banked
  3309   001A04  87DA               	bsf	218,3,b	;volatile
  3310                           
  3311                           ;../i2c.c: 56:   I2C_2_Master_Idle();
  3312   001A06  ECCA  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3313   001A0A                     
  3314                           ;../i2c.c: 57:   tmp = SSP2BUF;
  3315   001A0A  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3316                           
  3317                           ;../i2c.c: 58:   I2C_2_Master_Idle();
  3318   001A0E  ECCA  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3319   001A12                     
  3320                           ;../i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3321   001A12  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  3322   001A14  B4D8               	btfsc	status,2,c
  3323   001A16  EF0F  F00D         	goto	u1001
  3324   001A1A  EF13  F00D         	goto	u1000
  3325   001A1E                     u1001:
  3326   001A1E  6A06               	clrf	??_I2C_2_Master_Read^0,c
  3327   001A20  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  3328   001A22  EF14  F00D         	goto	u1018
  3329   001A26                     u1000:
  3330   001A26  6A06               	clrf	??_I2C_2_Master_Read^0,c
  3331   001A28                     u1018:
  3332   001A28  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  3333   001A2A  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  3334   001A2C  010E               	movlb	14	; () banked
  3335   001A2E  51DA               	movf	218,w,b	;volatile
  3336   001A30  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  3337   001A32  0BDF               	andlw	-33
  3338   001A34  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  3339   001A36  6FDA               	movwf	218,b	;volatile
  3340   001A38                     
  3341                           ; BSR set to: 14
  3342                           ;../i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3343   001A38  89DA               	bsf	218,4,b	;volatile
  3344   001A3A                     
  3345                           ; BSR set to: 14
  3346                           ;../i2c.c: 61:   return tmp;
  3347   001A3A  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  3348   001A3C                     
  3349                           ; BSR set to: 14
  3350   001A3C  0012               	return		;funcret
  3351   001A3E                     __end_of_I2C_2_Master_Read:
  3352                           	callstack 0
  3353                           
  3354 ;; *************** function _color_click_init *****************
  3355 ;; Defined at:
  3356 ;;		line 5 in file "../color.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;		None
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;		None
  3361 ;; Return value:  Size  Location     Type
  3362 ;;                  1    wreg      void 
  3363 ;; Registers used:
  3364 ;;		wreg, status,2, status,0, cstack
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3372 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3373 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3374 ;;Total ram usage:        1 bytes
  3375 ;; Hardware stack levels used: 1
  3376 ;; Hardware stack levels required when called: 5
  3377 ;; This function calls:
  3378 ;;		_I2C_2_Master_Init
  3379 ;;		_color_writetoaddr
  3380 ;; This function is called by:
  3381 ;;		_main
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385                           	psect	text22
  3386   001A7E                     __ptext22:
  3387                           	callstack 0
  3388   001A7E                     _color_click_init:
  3389                           	callstack 25
  3390   001A7E                     
  3391                           ;../color.c: 8:     I2C_2_Master_Init();
  3392   001A7E  ECA0  F00D         	call	_I2C_2_Master_Init	;wreg free
  3393   001A82                     
  3394                           ;../color.c: 11:   color_writetoaddr(0x00, 0x01);
  3395   001A82  0E01               	movlw	1
  3396   001A84  6E07               	movwf	color_writetoaddr@value^0,c
  3397   001A86  0E00               	movlw	0
  3398   001A88  ECEE  F00D         	call	_color_writetoaddr
  3399   001A8C                     
  3400                           ;../color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3401   001A8C  0E3F               	movlw	63
  3402   001A8E  6E09               	movwf	??_color_click_init^0,c
  3403   001A90  0E55               	movlw	85
  3404   001A92                     u1527:
  3405   001A92  2EE8               	decfsz	wreg,f,c
  3406   001A94  D7FE               	bra	u1527
  3407   001A96  2E09               	decfsz	??_color_click_init^0,f,c
  3408   001A98  D7FC               	bra	u1527
  3409   001A9A  F000               	nop	
  3410   001A9C                     
  3411                           ;../color.c: 15:  color_writetoaddr(0x00, 0x03);
  3412   001A9C  0E03               	movlw	3
  3413   001A9E  6E07               	movwf	color_writetoaddr@value^0,c
  3414   001AA0  0E00               	movlw	0
  3415   001AA2  ECEE  F00D         	call	_color_writetoaddr
  3416   001AA6                     
  3417                           ;../color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3418   001AA6  0ED5               	movlw	213
  3419   001AA8  6E07               	movwf	color_writetoaddr@value^0,c
  3420   001AAA  0E01               	movlw	1
  3421   001AAC  ECEE  F00D         	call	_color_writetoaddr
  3422   001AB0  0012               	return		;funcret
  3423   001AB2                     __end_of_color_click_init:
  3424                           	callstack 0
  3425                           
  3426 ;; *************** function _color_writetoaddr *****************
  3427 ;; Defined at:
  3428 ;;		line 21 in file "../color.c"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;  address         1    wreg     unsigned char 
  3431 ;;  value           1    6[COMRAM] unsigned char 
  3432 ;; Auto vars:     Size  Location     Type
  3433 ;;  address         1    7[COMRAM] unsigned char 
  3434 ;; Return value:  Size  Location     Type
  3435 ;;                  1    wreg      void 
  3436 ;; Registers used:
  3437 ;;		wreg, status,2, status,0, cstack
  3438 ;; Tracked objects:
  3439 ;;		On entry : 0/0
  3440 ;;		On exit  : 0/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3443 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3444 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3446 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3447 ;;Total ram usage:        2 bytes
  3448 ;; Hardware stack levels used: 1
  3449 ;; Hardware stack levels required when called: 4
  3450 ;; This function calls:
  3451 ;;		_I2C_2_Master_Start
  3452 ;;		_I2C_2_Master_Stop
  3453 ;;		_I2C_2_Master_Write
  3454 ;; This function is called by:
  3455 ;;		_color_click_init
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459                           	psect	text23
  3460   001BDC                     __ptext23:
  3461                           	callstack 0
  3462   001BDC                     _color_writetoaddr:
  3463                           	callstack 25
  3464                           
  3465                           ;incstack = 0
  3466                           ;color_writetoaddr@address stored from wreg
  3467   001BDC  6E08               	movwf	color_writetoaddr@address^0,c
  3468   001BDE                     
  3469                           ;../color.c: 22:     I2C_2_Master_Start();
  3470   001BDE  EC2C  F00E         	call	_I2C_2_Master_Start	;wreg free
  3471                           
  3472                           ;../color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  3473   001BE2  0E52               	movlw	82
  3474   001BE4  EC16  F00E         	call	_I2C_2_Master_Write
  3475                           
  3476                           ;../color.c: 24:     I2C_2_Master_Write(0x80 | address);
  3477   001BE8  5008               	movf	color_writetoaddr@address^0,w,c
  3478   001BEA  0980               	iorlw	128
  3479   001BEC  EC16  F00E         	call	_I2C_2_Master_Write
  3480                           
  3481                           ;../color.c: 25:     I2C_2_Master_Write(value);
  3482   001BF0  5007               	movf	color_writetoaddr@value^0,w,c
  3483   001BF2  EC16  F00E         	call	_I2C_2_Master_Write
  3484                           
  3485                           ;../color.c: 26:     I2C_2_Master_Stop();
  3486   001BF6  EC27  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3487   001BFA  0012               	return		;funcret
  3488   001BFC                     __end_of_color_writetoaddr:
  3489                           	callstack 0
  3490                           
  3491 ;; *************** function _I2C_2_Master_Write *****************
  3492 ;; Defined at:
  3493 ;;		line 45 in file "../i2c.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;  data_byte       1    wreg     unsigned char 
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;  data_byte       1    5[COMRAM] unsigned char 
  3498 ;; Return value:  Size  Location     Type
  3499 ;;                  1    wreg      void 
  3500 ;; Registers used:
  3501 ;;		wreg, status,2, status,0, cstack
  3502 ;; Tracked objects:
  3503 ;;		On entry : 0/0
  3504 ;;		On exit  : 0/0
  3505 ;;		Unchanged: 0/0
  3506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3508 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3510 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3511 ;;Total ram usage:        1 bytes
  3512 ;; Hardware stack levels used: 1
  3513 ;; Hardware stack levels required when called: 3
  3514 ;; This function calls:
  3515 ;;		_I2C_2_Master_Idle
  3516 ;; This function is called by:
  3517 ;;		_color_writetoaddr
  3518 ;;		_color_read_Red
  3519 ;;		_color_read_Blue
  3520 ;;		_color_read_Green
  3521 ;;		_color_read_Clear
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525                           	psect	text24
  3526   001C2C                     __ptext24:
  3527                           	callstack 0
  3528   001C2C                     _I2C_2_Master_Write:
  3529                           	callstack 26
  3530                           
  3531                           ;incstack = 0
  3532                           ;I2C_2_Master_Write@data_byte stored from wreg
  3533   001C2C  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  3534   001C2E                     
  3535                           ;../i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);../i2c.c: 46: {;../i2c.c
      +                          : 47:   I2C_2_Master_Idle();
  3536   001C2E  ECCA  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3537   001C32                     
  3538                           ;../i2c.c: 48:   SSP2BUF = data_byte;
  3539   001C32  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3540   001C36  0012               	return		;funcret
  3541   001C38                     __end_of_I2C_2_Master_Write:
  3542                           	callstack 0
  3543                           
  3544 ;; *************** function _I2C_2_Master_Stop *****************
  3545 ;; Defined at:
  3546 ;;		line 39 in file "../i2c.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;		None
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;		None
  3551 ;; Return value:  Size  Location     Type
  3552 ;;                  1    wreg      void 
  3553 ;; Registers used:
  3554 ;;		wreg, status,2, status,0, cstack
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 0/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3564 ;;Total ram usage:        0 bytes
  3565 ;; Hardware stack levels used: 1
  3566 ;; Hardware stack levels required when called: 3
  3567 ;; This function calls:
  3568 ;;		_I2C_2_Master_Idle
  3569 ;; This function is called by:
  3570 ;;		_color_writetoaddr
  3571 ;;		_color_read_Red
  3572 ;;		_color_read_Blue
  3573 ;;		_color_read_Green
  3574 ;;		_color_read_Clear
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577                           
  3578                           	psect	text25
  3579   001C4E                     __ptext25:
  3580                           	callstack 0
  3581   001C4E                     _I2C_2_Master_Stop:
  3582                           	callstack 26
  3583   001C4E                     
  3584                           ;../i2c.c: 41:   I2C_2_Master_Idle();
  3585   001C4E  ECCA  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3586   001C52                     
  3587                           ;../i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3588   001C52  010E               	movlb	14	; () banked
  3589   001C54  85DA               	bsf	218,2,b	;volatile
  3590   001C56                     
  3591                           ; BSR set to: 14
  3592   001C56  0012               	return		;funcret
  3593   001C58                     __end_of_I2C_2_Master_Stop:
  3594                           	callstack 0
  3595                           
  3596 ;; *************** function _I2C_2_Master_Start *****************
  3597 ;; Defined at:
  3598 ;;		line 27 in file "../i2c.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;		None
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;		None
  3603 ;; Return value:  Size  Location     Type
  3604 ;;                  1    wreg      void 
  3605 ;; Registers used:
  3606 ;;		wreg, status,2, status,0, cstack
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3616 ;;Total ram usage:        0 bytes
  3617 ;; Hardware stack levels used: 1
  3618 ;; Hardware stack levels required when called: 3
  3619 ;; This function calls:
  3620 ;;		_I2C_2_Master_Idle
  3621 ;; This function is called by:
  3622 ;;		_color_writetoaddr
  3623 ;;		_color_read_Red
  3624 ;;		_color_read_Blue
  3625 ;;		_color_read_Green
  3626 ;;		_color_read_Clear
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           
  3630                           	psect	text26
  3631   001C58                     __ptext26:
  3632                           	callstack 0
  3633   001C58                     _I2C_2_Master_Start:
  3634                           	callstack 26
  3635   001C58                     
  3636                           ;../i2c.c: 29:   I2C_2_Master_Idle();
  3637   001C58  ECCA  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3638   001C5C                     
  3639                           ;../i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3640   001C5C  010E               	movlb	14	; () banked
  3641   001C5E  81DA               	bsf	218,0,b	;volatile
  3642   001C60                     
  3643                           ; BSR set to: 14
  3644   001C60  0012               	return		;funcret
  3645   001C62                     __end_of_I2C_2_Master_Start:
  3646                           	callstack 0
  3647                           
  3648 ;; *************** function _I2C_2_Master_Idle *****************
  3649 ;; Defined at:
  3650 ;;		line 22 in file "../i2c.c"
  3651 ;; Parameters:    Size  Location     Type
  3652 ;;		None
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;		None
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  1    wreg      void 
  3657 ;; Registers used:
  3658 ;;		wreg, status,2, status,0
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3666 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3667 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3668 ;;Total ram usage:        1 bytes
  3669 ;; Hardware stack levels used: 1
  3670 ;; Hardware stack levels required when called: 2
  3671 ;; This function calls:
  3672 ;;		Nothing
  3673 ;; This function is called by:
  3674 ;;		_I2C_2_Master_Start
  3675 ;;		_I2C_2_Master_RepStart
  3676 ;;		_I2C_2_Master_Stop
  3677 ;;		_I2C_2_Master_Write
  3678 ;;		_I2C_2_Master_Read
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           	psect	text27
  3683   001B94                     __ptext27:
  3684                           	callstack 0
  3685   001B94                     _I2C_2_Master_Idle:
  3686                           	callstack 26
  3687   001B94                     l64:
  3688   001B94  010E               	movlb	14	; () banked
  3689   001B96  B5D8               	btfsc	216,2,b	;volatile
  3690   001B98  EFD0  F00D         	goto	u851
  3691   001B9C  EFD2  F00D         	goto	u850
  3692   001BA0                     u851:
  3693   001BA0  EFCA  F00D         	goto	l64
  3694   001BA4                     u850:
  3695   001BA4                     
  3696                           ; BSR set to: 14
  3697   001BA4  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3698   001BA8  0E1F               	movlw	31
  3699   001BAA  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  3700   001BAC  A4D8               	btfss	status,2,c
  3701   001BAE  EFDB  F00D         	goto	u861
  3702   001BB2  EFDD  F00D         	goto	u860
  3703   001BB6                     u861:
  3704   001BB6  EFCA  F00D         	goto	l64
  3705   001BBA                     u860:
  3706   001BBA                     
  3707                           ; BSR set to: 14
  3708   001BBA  0012               	return		;funcret
  3709   001BBC                     __end_of_I2C_2_Master_Idle:
  3710                           	callstack 0
  3711                           
  3712 ;; *************** function _I2C_2_Master_Init *****************
  3713 ;; Defined at:
  3714 ;;		line 4 in file "../i2c.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;		None
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;		None
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  1    wreg      void 
  3721 ;; Registers used:
  3722 ;;		wreg, status,2
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3732 ;;Total ram usage:        0 bytes
  3733 ;; Hardware stack levels used: 1
  3734 ;; Hardware stack levels required when called: 2
  3735 ;; This function calls:
  3736 ;;		Nothing
  3737 ;; This function is called by:
  3738 ;;		_color_click_init
  3739 ;;		_main
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           	psect	text28
  3744   001B40                     __ptext28:
  3745                           	callstack 0
  3746   001B40                     _I2C_2_Master_Init:
  3747                           	callstack 27
  3748   001B40                     
  3749                           ;../i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3750   001B40  010E               	movlb	14	; () banked
  3751   001B42  51D9               	movf	217,w,b	;volatile
  3752   001B44  0BF0               	andlw	-16
  3753   001B46  0908               	iorlw	8
  3754   001B48  6FD9               	movwf	217,b	;volatile
  3755   001B4A                     
  3756                           ; BSR set to: 14
  3757                           ;../i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3758   001B4A  8BD9               	bsf	217,5,b	;volatile
  3759                           
  3760                           ;../i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3761   001B4C  0E9F               	movlw	159
  3762   001B4E  6FD6               	movwf	214,b	;volatile
  3763   001B50                     
  3764                           ; BSR set to: 14
  3765                           ;../i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3766   001B50  8A84               	bsf	132,5,c	;volatile
  3767   001B52                     
  3768                           ; BSR set to: 14
  3769                           ;../i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3770   001B52  8C84               	bsf	132,6,c	;volatile
  3771   001B54                     
  3772                           ; BSR set to: 14
  3773                           ;../i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3774   001B54  9BA7               	bcf	167,5,b	;volatile
  3775   001B56                     
  3776                           ; BSR set to: 14
  3777                           ;../i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3778   001B56  9DA7               	bcf	167,6,b	;volatile
  3779                           
  3780                           ;../i2c.c: 16:   SSP2DATPPS=0x1D;
  3781   001B58  0E1D               	movlw	29
  3782   001B5A  6F1D               	movwf	29,b	;volatile
  3783                           
  3784                           ;../i2c.c: 17:   SSP2CLKPPS=0x1E;
  3785   001B5C  0E1E               	movlw	30
  3786   001B5E  6F1C               	movwf	28,b	;volatile
  3787                           
  3788                           ;../i2c.c: 18:   RD5PPS=0x1C;
  3789   001B60  0E1C               	movlw	28
  3790   001B62  6F6F               	movwf	111,b	;volatile
  3791                           
  3792                           ;../i2c.c: 19:   RD6PPS=0x1B;
  3793   001B64  0E1B               	movlw	27
  3794   001B66  6F70               	movwf	112,b	;volatile
  3795   001B68                     
  3796                           ; BSR set to: 14
  3797   001B68  0012               	return		;funcret
  3798   001B6A                     __end_of_I2C_2_Master_Init:
  3799                           	callstack 0
  3800                           
  3801 ;; *************** function _Interrupts_init *****************
  3802 ;; Defined at:
  3803 ;;		line 9 in file "../interrupts.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;		None
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;		None
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  1    wreg      void 
  3810 ;; Registers used:
  3811 ;;		None
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3821 ;;Total ram usage:        0 bytes
  3822 ;; Hardware stack levels used: 1
  3823 ;; Hardware stack levels required when called: 2
  3824 ;; This function calls:
  3825 ;;		Nothing
  3826 ;; This function is called by:
  3827 ;;		_main
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830                           
  3831                           	psect	text29
  3832   001C38                     __ptext29:
  3833                           	callstack 0
  3834   001C38                     _Interrupts_init:
  3835                           	callstack 28
  3836   001C38                     
  3837                           ;../interrupts.c: 15:     INTCONbits.PEIE=1;
  3838   001C38  8CF2               	bsf	242,6,c	;volatile
  3839                           
  3840                           ;../interrupts.c: 16:     PIE4bits.RC4IE=1;
  3841   001C3A  010E               	movlb	14	; () banked
  3842   001C3C  872D               	bsf	45,3,b	;volatile
  3843                           
  3844                           ;../interrupts.c: 17:     PIE4bits.TX4IE=0;
  3845   001C3E  952D               	bcf	45,2,b	;volatile
  3846                           
  3847                           ;../interrupts.c: 18:     INTCONbits.GIE=1;
  3848   001C40  8EF2               	bsf	242,7,c	;volatile
  3849   001C42                     
  3850                           ; BSR set to: 14
  3851   001C42  0012               	return		;funcret
  3852   001C44                     __end_of_Interrupts_init:
  3853                           	callstack 0
  3854                           
  3855 ;; *************** function _HighISR *****************
  3856 ;; Defined at:
  3857 ;;		line 36 in file "../interrupts.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;		None
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;		None
  3862 ;; Return value:  Size  Location     Type
  3863 ;;                  1    wreg      void 
  3864 ;; Registers used:
  3865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3866 ;; Tracked objects:
  3867 ;;		On entry : 0/0
  3868 ;;		On exit  : 0/0
  3869 ;;		Unchanged: 0/0
  3870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3873 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3874 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3875 ;;Total ram usage:        2 bytes
  3876 ;; Hardware stack levels used: 1
  3877 ;; Hardware stack levels required when called: 1
  3878 ;; This function calls:
  3879 ;;		_getCharFromTxBuf
  3880 ;;		_isDataInTxBuf
  3881 ;;		_putCharToRxBuf
  3882 ;; This function is called by:
  3883 ;;		Interrupt level 2
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887                           	psect	intcode
  3888   000008                     __pintcode:
  3889                           	callstack 0
  3890   000008                     _HighISR:
  3891                           	callstack 21
  3892                           
  3893                           ; BSR set to: 14
  3894                           ;incstack = 0
  3895   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3896   00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  3897   00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  3898   000012                     
  3899                           ;../interrupts.c: 38:     if (PIR4bits.RC4IF == 1){
  3900   000012  010E               	movlb	14	; () banked
  3901   000014  A737               	btfss	55,3,b	;volatile
  3902   000016  EF0F  F000         	goto	i2u109_41
  3903   00001A  EF11  F000         	goto	i2u109_40
  3904   00001E                     i2u109_41:
  3905   00001E  EF14  F000         	goto	i2l2148
  3906   000022                     i2u109_40:
  3907   000022                     
  3908                           ; BSR set to: 14
  3909                           ;../interrupts.c: 39:         putCharToRxBuf(RC4REG);
  3910   000022  51E3               	movf	227,w,b	;volatile
  3911   000024  ECB5  F00D         	call	_putCharToRxBuf
  3912   000028                     i2l2148:
  3913                           
  3914                           ;../interrupts.c: 41:     if (PIR4bits.TX4IF == 1 && PIE4bits.TX4IE==1){
  3915   000028  010E               	movlb	14	; () banked
  3916   00002A  A537               	btfss	55,2,b	;volatile
  3917   00002C  EF1A  F000         	goto	i2u110_41
  3918   000030  EF1C  F000         	goto	i2u110_40
  3919   000034                     i2u110_41:
  3920   000034  EF35  F000         	goto	i2l280
  3921   000038                     i2u110_40:
  3922   000038                     
  3923                           ; BSR set to: 14
  3924   000038  A52D               	btfss	45,2,b	;volatile
  3925   00003A  EF21  F000         	goto	i2u111_41
  3926   00003E  EF23  F000         	goto	i2u111_40
  3927   000042                     i2u111_41:
  3928   000042  EF35  F000         	goto	i2l280
  3929   000046                     i2u111_40:
  3930   000046                     
  3931                           ; BSR set to: 14
  3932                           ;../interrupts.c: 42:         if (isDataInTxBuf()==1 ) {TX4REG = getCharFromTxBuf();}
  3933   000046  EC0A  F00E         	call	_isDataInTxBuf	;wreg free
  3934   00004A  06E8               	decf	wreg,f,c
  3935   00004C  A4D8               	btfss	status,2,c
  3936   00004E  EF2B  F000         	goto	i2u112_41
  3937   000052  EF2D  F000         	goto	i2u112_40
  3938   000056                     i2u112_41:
  3939   000056  EF33  F000         	goto	i2l278
  3940   00005A                     i2u112_40:
  3941   00005A  EC8A  F00D         	call	_getCharFromTxBuf	;wreg free
  3942   00005E  010E               	movlb	14	; () banked
  3943   000060  6FE4               	movwf	228,b	;volatile
  3944   000062  EF35  F000         	goto	i2l280
  3945   000066                     i2l278:
  3946   000066  010E               	movlb	14	; () banked
  3947   000068  952D               	bcf	45,2,b	;volatile
  3948   00006A                     i2l280:
  3949                           
  3950                           ; BSR set to: 14
  3951   00006A  C004  FFDA         	movff	??_HighISR+1,fsr2h
  3952   00006E  C003  FFD9         	movff	??_HighISR,fsr2l
  3953   000072  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3954   000074  0011               	retfie		f
  3955   000076                     __end_of_HighISR:
  3956                           	callstack 0
  3957                           
  3958 ;; *************** function _putCharToRxBuf *****************
  3959 ;; Defined at:
  3960 ;;		line 57 in file "../serial.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;  byte            1    wreg     unsigned char 
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;  byte            1    0[COMRAM] unsigned char 
  3965 ;; Return value:  Size  Location     Type
  3966 ;;                  1    wreg      void 
  3967 ;; Registers used:
  3968 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/0
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3975 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3977 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3978 ;;Total ram usage:        1 bytes
  3979 ;; Hardware stack levels used: 1
  3980 ;; This function calls:
  3981 ;;		Nothing
  3982 ;; This function is called by:
  3983 ;;		_HighISR
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987                           	psect	text31
  3988   001B6A                     __ptext31:
  3989                           	callstack 0
  3990   001B6A                     _putCharToRxBuf:
  3991                           	callstack 21
  3992                           
  3993                           ; BSR set to: 14
  3994                           ;incstack = 0
  3995                           ;putCharToRxBuf@byte stored from wreg
  3996   001B6A  6E01               	movwf	putCharToRxBuf@byte^0,c
  3997   001B6C                     
  3998                           ;../serial.c: 58:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  3999   001B6C  0E13               	movlw	19
  4000   001B6E  645A               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  4001   001B70  EFBC  F00D         	goto	i2u105_41
  4002   001B74  EFBE  F00D         	goto	i2u105_40
  4003   001B78                     i2u105_41:
  4004   001B78  EFC0  F00D         	goto	i2l2068
  4005   001B7C                     i2u105_40:
  4006   001B7C  0E00               	movlw	0
  4007   001B7E  6E5A               	movwf	_RxBufWriteCnt^0,c	;volatile
  4008   001B80                     i2l2068:
  4009                           
  4010                           ;../serial.c: 59:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  4011   001B80  0EC3               	movlw	low _EUSART4RXbuf
  4012   001B82  245A               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  4013   001B84  6ED9               	movwf	fsr2l,c
  4014   001B86  6ADA               	clrf	fsr2h,c
  4015   001B88  0E00               	movlw	high _EUSART4RXbuf
  4016   001B8A  22DA               	addwfc	fsr2h,f,c
  4017   001B8C  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  4018   001B90  2A5A               	incf	_RxBufWriteCnt^0,f,c	;volatile
  4019   001B92  0012               	return		;funcret
  4020   001B94                     __end_of_putCharToRxBuf:
  4021                           	callstack 0
  4022                           
  4023 ;; *************** function _isDataInTxBuf *****************
  4024 ;; Defined at:
  4025 ;;		line 85 in file "../serial.c"
  4026 ;; Parameters:    Size  Location     Type
  4027 ;;		None
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;		None
  4030 ;; Return value:  Size  Location     Type
  4031 ;;                  1    wreg      unsigned char 
  4032 ;; Registers used:
  4033 ;;		wreg, status,2, status,0
  4034 ;; Tracked objects:
  4035 ;;		On entry : 0/0
  4036 ;;		On exit  : 0/0
  4037 ;;		Unchanged: 0/0
  4038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4043 ;;Total ram usage:        0 bytes
  4044 ;; Hardware stack levels used: 1
  4045 ;; This function calls:
  4046 ;;		Nothing
  4047 ;; This function is called by:
  4048 ;;		_HighISR
  4049 ;;		_sendTxBuf
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053                           	psect	text32
  4054   001C14                     __ptext32:
  4055                           	callstack 0
  4056   001C14                     _isDataInTxBuf:
  4057                           	callstack 21
  4058   001C14                     
  4059                           ;../serial.c: 86:     return (TxBufWriteCnt!=TxBufReadCnt);
  4060   001C14  5057               	movf	_TxBufReadCnt^0,w,c	;volatile
  4061   001C16  1858               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  4062   001C18  A4D8               	btfss	status,2,c
  4063   001C1A  EF11  F00E         	goto	i2u45_41
  4064   001C1E  EF14  F00E         	goto	i2u45_40
  4065   001C22                     i2u45_41:
  4066   001C22  0E01               	movlw	1
  4067   001C24  EF15  F00E         	goto	i2u46_40
  4068   001C28                     i2u45_40:
  4069   001C28  0E00               	movlw	0
  4070   001C2A                     i2u46_40:
  4071   001C2A  0012               	return		;funcret
  4072   001C2C                     __end_of_isDataInTxBuf:
  4073                           	callstack 0
  4074                           
  4075 ;; *************** function _getCharFromTxBuf *****************
  4076 ;; Defined at:
  4077 ;;		line 71 in file "../serial.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;		None
  4080 ;; Auto vars:     Size  Location     Type
  4081 ;;		None
  4082 ;; Return value:  Size  Location     Type
  4083 ;;                  1    wreg      unsigned char 
  4084 ;; Registers used:
  4085 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4086 ;; Tracked objects:
  4087 ;;		On entry : 0/0
  4088 ;;		On exit  : 0/0
  4089 ;;		Unchanged: 0/0
  4090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4093 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4094 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4095 ;;Total ram usage:        2 bytes
  4096 ;; Hardware stack levels used: 1
  4097 ;; This function calls:
  4098 ;;		Nothing
  4099 ;; This function is called by:
  4100 ;;		_HighISR
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           
  4104                           	psect	text33
  4105   001B14                     __ptext33:
  4106                           	callstack 0
  4107   001B14                     _getCharFromTxBuf:
  4108                           	callstack 21
  4109   001B14                     
  4110                           ;../serial.c: 72:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  4111   001B14  0E3B               	movlw	59
  4112   001B16  6457               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  4113   001B18  EF90  F00D         	goto	i2u106_41
  4114   001B1C  EF92  F00D         	goto	i2u106_40
  4115   001B20                     i2u106_41:
  4116   001B20  EF94  F00D         	goto	i2l2076
  4117   001B24                     i2u106_40:
  4118   001B24  0E00               	movlw	0
  4119   001B26  6E57               	movwf	_TxBufReadCnt^0,c	;volatile
  4120   001B28                     i2l2076:
  4121                           
  4122                           ;../serial.c: 73:     return EUSART4TXbuf[TxBufReadCnt++];
  4123   001B28  2A57               	incf	_TxBufReadCnt^0,f,c	;volatile
  4124   001B2A  0457               	decf	_TxBufReadCnt^0,w,c	;volatile
  4125   001B2C  6E01               	movwf	??_getCharFromTxBuf^0,c
  4126   001B2E  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  4127   001B30  0E00               	movlw	low _EUSART4TXbuf
  4128   001B32  2401               	addwf	??_getCharFromTxBuf^0,w,c
  4129   001B34  6ED9               	movwf	fsr2l,c
  4130   001B36  0E01               	movlw	high _EUSART4TXbuf
  4131   001B38  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  4132   001B3A  6EDA               	movwf	fsr2h,c
  4133   001B3C  50DF               	movf	indf2,w,c
  4134   001B3E  0012               	return		;funcret
  4135   001B40                     __end_of_getCharFromTxBuf:
  4136                           	callstack 0
  4137                           
  4138                           	psect	rparam
  4139   000000                     
  4140                           	psect	temp
  4141   00005B                     btemp:
  4142                           	callstack 0
  4143   00005B                     	ds	1
  4144   000000                     int$flags	set	btemp
  4145   000000                     wtemp8	set	btemp+1
  4146   000000                     ttemp5	set	btemp+1
  4147   000000                     ttemp6	set	btemp+4
  4148   000000                     ttemp7	set	btemp+8
  4149                           
  4150                           	psect	idloc
  4151                           
  4152                           ;Config register IDLOC0 @ 0x200000
  4153                           ;	unspecified, using default values
  4154   200000                     	org	2097152
  4155   200000  0FFF               	dw	4095
  4156                           
  4157                           ;Config register IDLOC1 @ 0x200002
  4158                           ;	unspecified, using default values
  4159   200002                     	org	2097154
  4160   200002  0FFF               	dw	4095
  4161                           
  4162                           ;Config register IDLOC2 @ 0x200004
  4163                           ;	unspecified, using default values
  4164   200004                     	org	2097156
  4165   200004  0FFF               	dw	4095
  4166                           
  4167                           ;Config register IDLOC3 @ 0x200006
  4168                           ;	unspecified, using default values
  4169   200006                     	org	2097158
  4170   200006  0FFF               	dw	4095
  4171                           
  4172                           ;Config register IDLOC4 @ 0x200008
  4173                           ;	unspecified, using default values
  4174   200008                     	org	2097160
  4175   200008  0FFF               	dw	4095
  4176                           
  4177                           ;Config register IDLOC5 @ 0x20000A
  4178                           ;	unspecified, using default values
  4179   20000A                     	org	2097162
  4180   20000A  0FFF               	dw	4095
  4181                           
  4182                           ;Config register IDLOC6 @ 0x20000C
  4183                           ;	unspecified, using default values
  4184   20000C                     	org	2097164
  4185   20000C  0FFF               	dw	4095
  4186                           
  4187                           ;Config register IDLOC7 @ 0x20000E
  4188                           ;	unspecified, using default values
  4189   20000E                     	org	2097166
  4190   20000E  0FFF               	dw	4095
  4191                           
  4192                           	psect	config
  4193                           
  4194                           ;Config register CONFIG1L @ 0x300000
  4195                           ;	External Oscillator mode Selection bits
  4196                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4197                           ;	Power-up default value for COSC bits
  4198                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4199   300000                     	org	3145728
  4200   300000  AA                 	db	170
  4201                           
  4202                           ;Config register CONFIG1H @ 0x300001
  4203                           ;	unspecified, using default values
  4204                           ;	Clock Out Enable bit
  4205                           ;	CLKOUTEN = 0x1, unprogrammed default
  4206                           ;	Clock Switch Enable bit
  4207                           ;	CSWEN = 0x1, unprogrammed default
  4208                           ;	Fail-Safe Clock Monitor Enable bit
  4209                           ;	FCMEN = 0x1, unprogrammed default
  4210   300001                     	org	3145729
  4211   300001  FF                 	db	255
  4212                           
  4213                           ;Config register CONFIG2L @ 0x300002
  4214                           ;	unspecified, using default values
  4215                           ;	Master Clear Enable bit
  4216                           ;	MCLRE = 0x1, unprogrammed default
  4217                           ;	Power-up Timer Enable bit
  4218                           ;	PWRTE = 0x1, unprogrammed default
  4219                           ;	Low-power BOR enable bit
  4220                           ;	LPBOREN = 0x1, unprogrammed default
  4221                           ;	Brown-out Reset Enable bits
  4222                           ;	BOREN = 0x3, unprogrammed default
  4223   300002                     	org	3145730
  4224   300002  FF                 	db	255
  4225                           
  4226                           ;Config register CONFIG2H @ 0x300003
  4227                           ;	unspecified, using default values
  4228                           ;	Brown Out Reset Voltage selection bits
  4229                           ;	BORV = 0x3, unprogrammed default
  4230                           ;	ZCD Disable bit
  4231                           ;	ZCD = 0x1, unprogrammed default
  4232                           ;	PPSLOCK bit One-Way Set Enable bit
  4233                           ;	PPS1WAY = 0x1, unprogrammed default
  4234                           ;	Stack Full/Underflow Reset Enable bit
  4235                           ;	STVREN = 0x1, unprogrammed default
  4236                           ;	Debugger Enable bit
  4237                           ;	DEBUG = 0x1, unprogrammed default
  4238                           ;	Extended Instruction Set Enable bit
  4239                           ;	XINST = 0x1, unprogrammed default
  4240   300003                     	org	3145731
  4241   300003  FF                 	db	255
  4242                           
  4243                           ;Config register CONFIG3L @ 0x300004
  4244                           ;	WDT Period Select bits
  4245                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4246                           ;	WDT operating mode
  4247                           ;	WDTE = OFF, WDT Disabled
  4248   300004                     	org	3145732
  4249   300004  9F                 	db	159
  4250                           
  4251                           ;Config register CONFIG3H @ 0x300005
  4252                           ;	unspecified, using default values
  4253                           ;	WDT Window Select bits
  4254                           ;	WDTCWS = 0x7, unprogrammed default
  4255                           ;	WDT input clock selector
  4256                           ;	WDTCCS = 0x7, unprogrammed default
  4257   300005                     	org	3145733
  4258   300005  FF                 	db	255
  4259                           
  4260                           ;Config register CONFIG4L @ 0x300006
  4261                           ;	unspecified, using default values
  4262                           ;	Write Protection Block 0
  4263                           ;	WRT0 = 0x1, unprogrammed default
  4264                           ;	Write Protection Block 1
  4265                           ;	WRT1 = 0x1, unprogrammed default
  4266                           ;	Write Protection Block 2
  4267                           ;	WRT2 = 0x1, unprogrammed default
  4268                           ;	Write Protection Block 3
  4269                           ;	WRT3 = 0x1, unprogrammed default
  4270                           ;	Write Protection Block 3
  4271                           ;	WRT4 = 0x1, unprogrammed default
  4272                           ;	Write Protection Block 3
  4273                           ;	WRT5 = 0x1, unprogrammed default
  4274                           ;	Write Protection Block 3
  4275                           ;	WRT6 = 0x1, unprogrammed default
  4276                           ;	Write Protection Block 3
  4277                           ;	WRT7 = 0x1, unprogrammed default
  4278   300006                     	org	3145734
  4279   300006  FF                 	db	255
  4280                           
  4281                           ;Config register CONFIG4H @ 0x300007
  4282                           ;	unspecified, using default values
  4283                           ;	Configuration Register Write Protection bit
  4284                           ;	WRTC = 0x1, unprogrammed default
  4285                           ;	Boot Block Write Protection bit
  4286                           ;	WRTB = 0x1, unprogrammed default
  4287                           ;	Data EEPROM Write Protection bit
  4288                           ;	WRTD = 0x1, unprogrammed default
  4289                           ;	Scanner Enable bit
  4290                           ;	SCANE = 0x1, unprogrammed default
  4291                           ;	Low Voltage Programming Enable bit
  4292                           ;	LVP = 0x1, unprogrammed default
  4293   300007                     	org	3145735
  4294   300007  FF                 	db	255
  4295                           
  4296                           ;Config register CONFIG5L @ 0x300008
  4297                           ;	unspecified, using default values
  4298                           ;	UserNVM Program Memory Code Protection bit
  4299                           ;	CP = 0x1, unprogrammed default
  4300                           ;	DataNVM Memory Code Protection bit
  4301                           ;	CPD = 0x1, unprogrammed default
  4302   300008                     	org	3145736
  4303   300008  FF                 	db	255
  4304                           
  4305                           ;Config register CONFIG5H @ 0x300009
  4306                           ;	unspecified, using default values
  4307   300009                     	org	3145737
  4308   300009  FF                 	db	255
  4309                           
  4310                           ;Config register CONFIG6L @ 0x30000A
  4311                           ;	unspecified, using default values
  4312                           ;	Table Read Protection Block 0
  4313                           ;	EBTR0 = 0x1, unprogrammed default
  4314                           ;	Table Read Protection Block 1
  4315                           ;	EBTR1 = 0x1, unprogrammed default
  4316                           ;	Table Read Protection Block 2
  4317                           ;	EBTR2 = 0x1, unprogrammed default
  4318                           ;	Table Read Protection Block 3
  4319                           ;	EBTR3 = 0x1, unprogrammed default
  4320                           ;	Table Read Protection Block 4
  4321                           ;	EBTR4 = 0x1, unprogrammed default
  4322                           ;	Table Read Protection Block 5
  4323                           ;	EBTR5 = 0x1, unprogrammed default
  4324                           ;	Table Read Protection Block 6
  4325                           ;	EBTR6 = 0x1, unprogrammed default
  4326                           ;	Table Read Protection Block 7
  4327                           ;	EBTR7 = 0x1, unprogrammed default
  4328   30000A                     	org	3145738
  4329   30000A  FF                 	db	255
  4330                           
  4331                           ;Config register CONFIG6H @ 0x30000B
  4332                           ;	unspecified, using default values
  4333                           ;	Boot Block Table Read Protection bit
  4334                           ;	EBTRB = 0x1, unprogrammed default
  4335   30000B                     	org	3145739
  4336   30000B  FF                 	db	255
  4337                           tosu	equ	0xFFF
  4338                           tosh	equ	0xFFE
  4339                           tosl	equ	0xFFD
  4340                           stkptr	equ	0xFFC
  4341                           pclatu	equ	0xFFB
  4342                           pclath	equ	0xFFA
  4343                           pcl	equ	0xFF9
  4344                           tblptru	equ	0xFF8
  4345                           tblptrh	equ	0xFF7
  4346                           tblptrl	equ	0xFF6
  4347                           tablat	equ	0xFF5
  4348                           prodh	equ	0xFF4
  4349                           prodl	equ	0xFF3
  4350                           indf0	equ	0xFEF
  4351                           postinc0	equ	0xFEE
  4352                           postdec0	equ	0xFED
  4353                           preinc0	equ	0xFEC
  4354                           plusw0	equ	0xFEB
  4355                           fsr0h	equ	0xFEA
  4356                           fsr0l	equ	0xFE9
  4357                           wreg	equ	0xFE8
  4358                           indf1	equ	0xFE7
  4359                           postinc1	equ	0xFE6
  4360                           postdec1	equ	0xFE5
  4361                           preinc1	equ	0xFE4
  4362                           plusw1	equ	0xFE3
  4363                           fsr1h	equ	0xFE2
  4364                           fsr1l	equ	0xFE1
  4365                           bsr	equ	0xFE0
  4366                           indf2	equ	0xFDF
  4367                           postinc2	equ	0xFDE
  4368                           postdec2	equ	0xFDD
  4369                           preinc2	equ	0xFDC
  4370                           plusw2	equ	0xFDB
  4371                           fsr2h	equ	0xFDA
  4372                           fsr2l	equ	0xFD9
  4373                           status	equ	0xFD8

Data Sizes:
    Strings     47
    Constant    0
    Data        0
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     99     156
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 47
		 -> STR_1(CODE[47]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 47
		 -> STR_1(CODE[47]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 47
		 -> STR_1(CODE[47]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2118$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 47
		 -> STR_1(CODE[47]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2065$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2065$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    S851DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    S851DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                68    68      0    8895
                                             31 BANK0     68    68      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                   _color_click_init
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                    _initDCmotorsPWM
                         _initUSART4
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    7316
                                              6 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6830
                                             84 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    6369
                                             66 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4802
                                             31 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2533
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1177
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              5 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Green                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Clear                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Blue                                      7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              2     2      0      22
                                              2 COMRAM     2     2      0
                   _getCharFromTxBuf
                      _isDataInTxBuf
                     _putCharToRxBuf
 ---------------------------------------------------------------------------------
 (10) _putCharToRxBuf                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _isDataInTxBuf                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _getCharFromTxBuf                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_read_Blue
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Clear
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Green
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Red
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 _HighISR (ROOT)
   _getCharFromTxBuf
   _isDataInTxBuf
   _putCharToRxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     63      9C       5       97.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBIGSFRhlllhl     52      0       0      43        0.0%
BITBIGSFRhlllll     37      0       0      45        0.0%
BITBIGSFRhhhhl      32      0       0      33        0.0%
BITBIGSFRlllhll     2A      0       0      56        0.0%
BITBIGSFRlllll      26      0       0      60        0.0%
BITBIGSFRllhh       20      0       0      48        0.0%
BITBIGSFRlllhhh     1E      0       0      50        0.0%
BITBIGSFRhhhlll     17      0       0      37        0.0%
BITBIGSFRlllhhh     11      0       0      51        0.0%
BITBIGSFRlllhll      F      0       0      58        0.0%
BITBIGSFRhhhlhh      E      0       0      34        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRllhl        C      0       0      49        0.0%
BITBIGSFRlllhll      9      0       0      57        0.0%
BITBIGSFRhlllll      8      0       0      46        0.0%
BITBIGSFRllllh       6      0       0      59        0.0%
BITBIGSFRlllhll      6      0       0      55        0.0%
BITBIGSFRhhhlll      6      0       0      38        0.0%
BITBIGSFRlllhlh      5      0       0      54        0.0%
BITBIGSFRlllhhl      3      0       0      53        0.0%
BITBIGSFRhllllh      2      0       0      44        0.0%
BITBIGSFRhhhllh      2      0       0      36        0.0%
BITBIGSFRhlllhh      1      0       0      42        0.0%
BITBIGSFRhlhhh       1      0       0      39        0.0%
BITBIGSFRhhhlhl      1      0       0      35        0.0%
BITBIGSFRlllhhh      1      0       0      52        0.0%
BITBIGSFRhlhhl       1      0       0      40        0.0%
BITBIGSFRhllh        1      0       0      41        0.0%
BITBIGSFRlh          1      0       0      47        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     132      61        0.0%
DATA                 0      0     132       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Mar 08 19:57:05 2023

               _color_read_Red 1878                _color_read_Blue 1968                             l22 1BFA  
                           l31 1916                             l25 18C6                             l34 1966  
                           l19 1AB0                             l28 19B6                             l61 1B68  
                           l70 1C60                             l64 1B94                             l73 1C4C  
                           l82 1A3C                             l67 1BBA                             l76 1C56  
                           l79 1C36               _color_read_Clear 1918               _color_read_Green 18C8  
            ??_Interrupts_init 0005                            l133 175A                            l331 1C12  
                          l235 1560                            l271 1C42                            l319 1BDA  
                          l328 1BFE                            l337 1B12                            l486 1234  
                          l499 1398                            u850 1BA4                            u851 1BA0  
                          u860 1BBA                            u861 1BB6                            _abs 1A3E  
                          _pad 175C                            wreg 000FE8                           l1102 14E6  
                         l2000 195E                           l1112 1A74                           l2010 1706  
                         l1050 1826                           l1115 1A7C                           ?_abs 0017  
                         l2020 1742                           l2012 172A                           l2004 16CC  
                         l1108 1876                           l2022 174C                           l2014 1734  
                         l2006 16DC                           l2030 1BC6                           l1127 16CA  
                         l1135 19FA                           l2024 174E                           l2016 1736  
                         l2008 1702                           l2040 1BD8                           l2032 1BC8  
                         l2200 10C0                           l1072 177E                           l1081 0EBE  
                         l2042 1C38                           l2026 1758                           l2018 1740  
                         l2034 1BCA                           l2210 1116                           l2202 10E0  
                         l1138 1C62                           l1083 0EC6                           l2036 1BD4  
                         l2028 1BBC                           l2060 1AF6                           l2220 116A  
                         l2212 1122                           l2204 10E4                           l1076 17D4  
                         l1084 0F0C                           l2300 0E76                           l2038 1BD6  
                         l2062 1AFA                           l2230 11DE                           l2222 117C  
                         l2214 1140                           l2206 10F2                           l2310 0EE4  
                         l2302 0E96                           l1095 10AC                           l2056 1AE4  
                         l2224 11AA                           l2216 1148                           l2232 11E4  
                         l2208 1112                           l2240 1236                           l2320 0F1C  
                         l2312 0EF4                           l2304 0EB2                           l2400 14F4  
                         l2058 1AE8                           l2234 11F4                           l2226 11CA  
                         l2218 115C                           l2250 127A                           l2242 123A  
                         l2322 0F22                           l2330 1014                           l2314 0F00  
                         l2306 0ECE                           l2410 1512                           l2402 14FA  
                         l2236 1214                           l2228 11CC                           l2260 12E2  
                         l2252 129A                           l2244 1248                           l2180 1630  
                         l2340 107C                           l2332 102E                           l2324 0FA4  
                         l2316 0F08                           l2308 0EDE                           l2420 152E  
                         l2412 151A                           l2404 14FE                           l2270 1358  
                         l2262 1310                           l2254 12B8                           l2246 1268  
                         l2182 164E                           l2174 1602                           l2190 19C4  
                         l2342 108C                           l2334 104C                           l2326 0FAA  
                         l2318 0F14                           l2350 13CC                           l2430 154E  
                         l2422 1536                           l2414 151E                           l2406 1502  
                         l2272 1378                           l2264 1330                           l2256 12C0  
                         l2248 126C                           l2184 1684                           l2176 1614  
                         l2192 19D6                           l2280 1776                           l2336 1066  
                         l2328 0FB0                           l2360 1426                           l2352 13DA  
                         l2440 1558                           l2432 1550                           l2424 1542  
                         l2416 1522                           l2408 150A                           l2266 1342  
                         l2258 12D4                           l2290 1A3E                           l2178 1626  
                         l2194 19DA                           l2282 178A                           l2338 1076  
                         l2362 147C                           l2354 13DE                           l2370 14BE  
                         l2346 139A                           l2450 15D4                           l2442 155A  
                         l2434 1552                           l2426 1546                           l2418 1526  
                         l2196 10AE                           l2268 1348                           l2292 1A58  
                         l2188 19B8                           l2284 179E                           l2276 175C  
                         l2356 13EE                           l2348 13BE                           l2380 1850  
                         l2452 15E0                           l2444 155C                           l2436 1554  
                         l2428 154A                           l2198 10B2                           l2286 17A2  
                         l2278 176A                           l2294 0E32                           l2366 14AC  
                         l2358 140A                           l2382 186C                           l2390 17F0  
                         l2446 156E                           l2438 1556                           l2288 17C0  
                         l2296 0E52                           l2376 1828                           l2392 17F8  
                         l2448 159E                           l1930 1B52                           l1826 1B94  
                         l2298 0E66                           l2378 1834                           l2394 1814  
                         l2386 17D6                           l1932 1B54                           l1924 1B40  
                         l1828 1BA4                           l1940 1C48                           l2388 17E8  
                         l1934 1B56                           l1926 1B4A                           l1950 1A38  
                         l1942 19FE                           l2398 14E8                           l1928 1B50  
                         l1936 1BDE                           l1952 1A3A                           l1944 1A02  
                         l1882 1C58                           l1890 1C4E                           l1970 1A7E  
                         l1946 1A0A                           l1938 1C44                           l1884 1C5C  
                         l1892 1C52                           l1972 1A82                           l1948 1A12  
                         l1980 1878                           l1956 1BFE                           l1886 1C2E  
                         l1974 1A8C                           l1982 18BE                           l1958 1C0E  
                         ?_pad 0015                           l1888 1C32                           l1976 1A9C  
                         l1992 18C8                           l1978 1AA6                           l1986 1968  
                         l1994 190E                           l1988 19AE                           l1998 1918  
                         STR_1 0E01                           u1000 1A26                           u1001 1A1E  
                         u1020 1C0E                           u1021 1C0A                           u1040 1B12  
                         u1200 10C0                           u1041 1B0E                           u1201 10BC  
                         u1018 1A28                           u1210 10F2                           u1211 10EE  
                         u1300 12E2                           u1221 111C                           u1301 12DE  
                         u1230 1140                           u1310 1310                           u1150 1614  
                         u1231 113C                           u1311 130C                           u1151 1610  
                         u1240 116A                           u1320 1358                           u1160 1626  
                         u1400 0EDE                           u1241 1166                           u1321 1354  
                         u1161 1622                           u1401 0EDA                           u1250 11AA  
                         u1170 164E                           u1330 176A                           u1410 0EF4  
                         u1251 11A6                           u1171 164A                           u1331 1766  
                         u1411 0EF0                           u1260 11F4                           u1180 1684  
                         u1340 17C0                           u1420 102E                           u1500 156E  
                         u1261 11F0                           u1181 1680                           u1341 17BC  
                         u1421 102A                           u1501 156A                           u1270 1248  
                         u1350 1A58                           u1190 19FA                           u1430 104C  
                         u1271 1244                           u1351 1A54                           u1191 19F6  
                         u1431 1048                           u1280 127A                           u1440 1066  
                         u1360 0E62                   _BAUD4CONbits 000EE9                           u1281 1276  
                         u1441 1062                           u1361 0E5C                           u1290 12B8  
                         u1450 1076                           u1370 0E64                           u1291 12B4  
                         u1451 1072                           u1380 0E76                           u1460 13BE  
                         u1381 0E72                           u1461 13BA                           u1517 15EC  
                         u1390 0EB2                           u1470 140A                           u1527 1A92  
                         u1391 0EAE                           u1471 1406                           u1480 1426  
                         u1481 1422                           u1490 186C                           _T2PR 000FBC  
                         u1491 1868                           abs@a 0017                           _dbuf 00DC  
                         _main 14E8                           _dtoa 0E32                           _prec 00D9  
                         pad@i 001C                           pad@p 0019                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 001E                           fsr2l 000FD9                           btemp 005B  
                         start 0076         __end_of_color_read_Red 18C8                __end_of_HighISR 0076  
                 ___param_bank 000000                          ??_abs 0019                          ??_pad 001B  
              __end_of___aodiv 1236                          ?_main 0001                          ?_dtoa 0020  
              __end_of___aomod 139A                          i2l352 1B3E                          i2l280 006A  
                        i2l345 1B92                          i2l278 0066                          i2l359 1C2A  
                 vfpfcnvrt@fmt 0045        __end_of_sendCharSerial4 1C14     __end_of_I2C_2_Master_Start 1C62  
   __end_of_I2C_2_Master_Write 1C38                          _flags 00DB                          _fputc 1602  
                        _fputs 19B8                          pad@fp 0015                          main@B 00AB  
                        main@C 00AF                          main@G 00AD                          _width 00D7  
                        main@R 00A9                          _putch 1C62                          dtoa@d 0022  
                        dtoa@i 0041                          dtoa@n 0038                          dtoa@p 0034  
                        dtoa@s 0040                          dtoa@w 0036                          tablat 000FF5  
                        ttemp5 005C                          ttemp6 005F                          ttemp7 0063  
                        status 000FD8                          wtemp8 005C                __end_of_sprintf 1828  
      __end_of_color_read_Blue 19B8          _I2C_2_Master_RepStart 1C44             putCharToRxBuf@byte 0001  
              ?_color_read_Red 0009                __initialization 1AB2                   __end_of_main 1602  
                 __end_of_dtoa 10AE                         ??_main 007F                         ??_dtoa 002A  
                __activetblptr 000001                         ?_fputc 0005                         ?_fputs 000E  
                       _CCPR1H 000FAA                         _CCPR2H 000FA6                         _CCPR3H 000F25  
                       _CCPR4H 000F21                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RE2PPS 000E74                         _RD5PPS 000E6F  
                       _RC7PPS 000E69                         _RE4PPS 000E76                         _RD6PPS 000E70  
                       i2l2070 1B90                         i2l2150 0038                         i2l2072 1B14  
                       i2l2064 1B6C                         i2l2152 0046                         i2l2144 0012  
                       i2l2074 1B24                         i2l2066 1B7C                         i2l2154 005A  
                       i2l2146 0022                         i2l2076 1B28                         i2l2068 1B80  
                       i2l2148 0028                         i2l1536 1C14                         _RG6PPS 000E88  
                    ??_HighISR 0003       __end_of_color_click_init 1AB2                         _RX4PPS 000E15  
                       _TX4REG 000EE4                   _CCPTMRS0bits 000FAD                   vfprintf@cfmt 0055  
             _getCharFromTxBuf 1B14                      ??___aodiv 0015                      ??___aomod 0015  
                       clear_0 1AB8                         clear_1 1AC4                         isa$std 000001  
                       pad@buf 0017                         dtoa@fp 0020                         fputc@c 0005  
                       fputs@c 0012                         fputs@i 0013                         fputs@s 000E  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8               ?_sendCharSerial4 0001                         putch@c 0001  
             __end_of_vfprintf 1878              ??_initDCmotorsPWM 0007                      ??_sprintf 0057  
        __end_of_isDataInTxBuf 1C2C                     __accesstop 0060        __end_of__initialization 1AD2  
     __end_of_color_read_Clear 1968       __end_of_color_read_Green 1918         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 000001               ?_color_read_Blue 0009                _Interrupts_init 1C38  
               __pcstackCOMRAM 0001                  __end_of_fputc 16CC                  __end_of_fputs 19FC  
                __end_of_putch 1C64                        ??_fputc 0009                        ??_fputs 0012  
                      ??_putch 0005                     __pbssBANK0 00C3                     __pbssBANK1 0100  
            _color_writetoaddr 1BDC                   _T2CLKCONbits 000FBF             ?_color_writetoaddr 0007  
          ??_color_writetoaddr 0008                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
                      i2u45_40 1C28                        i2u45_41 1C22                        i2u46_40 1C2A  
                      _SSP2ADD 000ED6                        _SSP2BUF 000ED5        __end_of_Interrupts_init 1C44  
       color_writetoaddr@value 0007               ??_color_read_Red 000B                        _HighISR 0008  
    __end_of_color_writetoaddr 1BFC             _I2C_2_Master_Start 1C58                     _initUSART4 1BBC  
           _I2C_2_Master_Write 1C2C                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000E        sendStringSerial4@string 0006                        ___aodiv 10AE  
                      ___aomod 1236            ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 0060                   __psmallconst 0E00                        __pcinit 1AB2  
                      __ramtop 0E00                        __ptext0 14E8                        __ptext1 17D6  
                      __ptext2 1828                        __ptext3 139A                        __ptext4 0E32  
                      __ptext5 175C                        __ptext6 19B8                        __ptext7 1602  
                      __ptext8 1C62                        __ptext9 1A3E                      _T2CONbits 000FBD  
                    _T2HLTbits 000FBE                  _RxBufWriteCnt 005A       __end_of_getCharFromTxBuf 1B40  
                      main@buf 0081                        _sprintf 17D6           ??_I2C_2_Master_Start 0006  
         ??_I2C_2_Master_Write 0006           end_of_initialization 1AD2                        fputc@fp 0007  
                      fputs@fp 0010              ?_color_click_init 0001             ??_color_click_init 0009  
            __end_of_vfpfcnvrt 14E8                        postdec2 000FDD                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE               vfpfcnvrt@convarg 004B  
                   ??_vfprintf 0055                _initDCmotorsPWM 16CC                      _PORTFbits 000F8E  
                    _TRISAbits 000F81                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISFbits 000F86                      _TRISGbits 000F87  
     color_writetoaddr@address 0008        ??_I2C_2_Master_RepStart 0006               ?_Interrupts_init 0001  
                  _CCP1CONbits 000FAB              ?_color_read_Clear 0009                   _EUSART4RXbuf 00C3  
                 _EUSART4TXbuf 0100                    _CCP2CONbits 000FA7              ?_color_read_Green 0009  
                  _CCP3CONbits 000F26                    ?_initUSART4 0001                    _CCP4CONbits 000F22  
    sendCharSerial4@charToSend 0005                     main@motorL 00B1                     main@motorR 00BA  
           ??_color_read_Clear 000B             ??_color_read_Green 000B                    vfpfcnvrt@ap 0047  
                  vfpfcnvrt@cp 0053                    vfpfcnvrt@fp 0043            color_read_Clear@tmp 000E  
          start_initialization 1AB2                    __end_of_abs 1A7E                    __end_of_pad 17D6  
                _TxBufWriteCnt 0058            color_read_Green@tmp 000E        __end_of_initDCmotorsPWM 175C  
                  vfprintf@fmt 0062                 _putCharToRxBuf 1B6A                    __pbssCOMRAM 0057  
                __pcstackBANK0 0060               ___aodiv@dividend 0005                       ?_HighISR 0001  
                    _dtoa$2146 0032         __end_of_putCharToRxBuf 1B94                      __pintcode 0008  
                     ?___aodiv 0005                       ?___aomod 0005               ___aodiv@quotient 0017  
         I2C_2_Master_Read@ack 0007           I2C_2_Master_Read@tmp 0008                    __smallconst 0E00  
            _I2C_2_Master_Idle 1B94              _I2C_2_Master_Init 1B40              _I2C_2_Master_Read 19FC  
            _I2C_2_Master_Stop 1C4E                   _RxBufReadCnt 0059             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
     initDCmotorsPWM@PWMperiod 0005                       ?_sprintf 0066              ?_getCharFromTxBuf 0001  
           ??_getCharFromTxBuf 0001              _sendStringSerial4 1AE4            ??_I2C_2_Master_Idle 0005  
          ??_I2C_2_Master_Init 0005            ??_I2C_2_Master_Read 0006                       _LATAbits 000F79  
          ??_I2C_2_Master_Stop 0006                       _LATCbits 000F7B                  _isDataInTxBuf 1C14  
                     _LATEbits 000F7D                       _LATFbits 000F7E                       _LATGbits 000F7F  
           ?_sendStringSerial4 0006                       _PIE4bits 000E2D                       i2u110_40 0038  
                     i2u110_41 0034                       i2u111_40 0046                       i2u111_41 0042  
                     i2u112_40 005A                       i2u112_41 0056                       i2u105_40 1B7C  
                     i2u105_41 1B78                       i2u106_40 1B24                       i2u106_41 1B20  
                     i2u109_40 0022                       i2u109_41 001E                       _PIR4bits 000E37  
              ?_putCharToRxBuf 0001               ?_initDCmotorsPWM 0005              ??_sendCharSerial4 0005  
                     _SSP2CON2 000EDA            ??_sendStringSerial4 0008                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 139A      __end_of_I2C_2_Master_Idle 1BBC      __end_of_I2C_2_Master_Init 1B6A  
    __end_of_I2C_2_Master_Read 1A3E      __end_of_I2C_2_Master_Stop 1C58    I2C_2_Master_Write@data_byte 0006  
            ??_color_read_Blue 000B                   _TxBufReadCnt 0057      __end_of_sendStringSerial4 1B14  
               ?_isDataInTxBuf 0001  __end_of_I2C_2_Master_RepStart 1C4E             color_read_Blue@tmp 000E  
                 ??_initUSART4 0005                       __Hrparam 0000                     vfprintf@ap 0064  
                     __Lrparam 0000                     vfprintf@fp 0060                   __Lsmallconst 0E00  
                   ?_vfpfcnvrt 0043                ___aodiv@divisor 000D                ___aodiv@counter 0015  
                   _ANSELDbits 000EA7                     _ANSELFbits 000EB4                     sprintf@fmt 0068  
           __end_of_initUSART4 1BDC                       __ptext10 1236                       __ptext11 10AE  
                     __ptext20 1C44                       __ptext12 1AE4                       __ptext21 19FC  
                     __ptext13 1BFC                       __ptext22 1A7E                       __ptext14 1BBC  
                     __ptext31 1B6A                       __ptext23 1BDC                       __ptext15 16CC  
                     __ptext32 1C14                       __ptext24 1C2C                       __ptext16 1878  
                     __ptext33 1B14                       __ptext25 1C4E                       __ptext17 18C8  
                     __ptext26 1C58                       __ptext18 1918                       __ptext27 1B94  
                     __ptext19 1968                       __ptext28 1B40                       __ptext29 1C38  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       int$flags 005B                       _vfprintf 1828  
             ___aomod@dividend 0005                     _INTCONbits 000FF2                ??_isDataInTxBuf 0001  
                     intlevel2 0000                      sprintf@ap 0072                ___aomod@divisor 000D  
                  ??_vfpfcnvrt 0049                ___aomod@counter 0015               _color_click_init 1A7E  
                     sprintf@f 0074                       sprintf@s 0066                     _SSP2DATPPS 000E1D  
                   _SSP2CLKPPS 000E1C                     _TX4STAbits 000EE8                   ___aodiv@sign 0016  
              _sendCharSerial4 1BFC               ??_putCharToRxBuf 0001                   ___aomod@sign 0016  
