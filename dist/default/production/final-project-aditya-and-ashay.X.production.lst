

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Mar 08 18:33:58 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51   000000                     
    52                           ; Generated 06/04/2022 GMT
    53                           ; 
    54                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F67K40 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86   000000                     _TX4REG	set	3812
    87   000000                     _RC4STAbits	set	3815
    88   000000                     _SP4BRGH	set	3814
    89   000000                     _SSP2CON2bits	set	3802
    90   000000                     _RX4PPS	set	3605
    91   000000                     _SSP2CLKPPS	set	3612
    92   000000                     _SSP2DATPPS	set	3613
    93   000000                     _ANSELDbits	set	3751
    94   000000                     _SSP2ADD	set	3798
    95   000000                     _SSP2CON1bits	set	3801
    96   000000                     _RC4REG	set	3811
    97   000000                     _SP4BRGL	set	3813
    98   000000                     _TX4STAbits	set	3816
    99   000000                     _BAUD4CONbits	set	3817
   100   000000                     _TRISCbits	set	3971
   101   000000                     _SSP2CON2	set	3802
   102   000000                     _TRISDbits	set	3972
   103   000000                     _SSP2STAT	set	3800
   104   000000                     _TRISGbits	set	3975
   105   000000                     _TRISEbits	set	3973
   106   000000                     _SSP2BUF	set	3797
   107   000000                     _PIE4bits	set	3629
   108   000000                     _PIR4bits	set	3639
   109   000000                     _RC0PPS	set	3682
   110   000000                     _RD5PPS	set	3695
   111   000000                     _RE2PPS	set	3700
   112   000000                     _RD6PPS	set	3696
   113   000000                     _RC7PPS	set	3689
   114   000000                     _LATCbits	set	3963
   115   000000                     _LATEbits	set	3965
   116   000000                     _CCPR4H	set	3873
   117   000000                     _CCPR3H	set	3877
   118   000000                     _T2PR	set	4028
   119   000000                     _T2CONbits	set	4029
   120   000000                     _CCPR2H	set	4006
   121   000000                     _CCPR1H	set	4010
   122   000000                     _LATGbits	set	3967
   123   000000                     _RE4PPS	set	3702
   124   000000                     _RG6PPS	set	3720
   125   000000                     _INTCONbits	set	4082
   126   000000                     _T2CLKCONbits	set	4031
   127   000000                     _T2HLTbits	set	4030
   128   000000                     _CCP1CONbits	set	4011
   129   000000                     _CCPTMRS0bits	set	4013
   130   000000                     _CCP2CONbits	set	4007
   131   000000                     _CCP3CONbits	set	3878
   132   000000                     _CCP4CONbits	set	3874
   133                           
   134                           	psect	smallconst
   135   000E00                     __psmallconst:
   136                           	callstack 0
   137   000E00  00                 	db	0
   138   000E01                     STR_1:
   139   000E01  25                 	db	37
   140   000E02  64                 	db	100	;'d'
   141   000E03  00                 	db	0
   142   000E04  00                 	db	0	; dummy byte at the end
   143   000000                     
   144                           ; #config settings
   145                           
   146                           	psect	cinit
   147   001A1C                     __pcinit:
   148                           	callstack 0
   149   001A1C                     start_initialization:
   150                           	callstack 0
   151   001A1C                     __initialization:
   152                           	callstack 0
   153                           
   154                           ; Clear objects allocated to BANK1 (60 bytes)
   155   001A1C  EE01  F000         	lfsr	0,__pbssBANK1
   156   001A20  0E3C               	movlw	60
   157   001A22                     clear_0:
   158   001A22  6AEE               	clrf	postinc0,c
   159   001A24  06E8               	decf	wreg,f,c
   160   001A26  E1FD               	bnz	clear_0
   161                           
   162                           ; Clear objects allocated to BANK0 (57 bytes)
   163   001A28  EE00  F0B5         	lfsr	0,__pbssBANK0
   164   001A2C  0E39               	movlw	57
   165   001A2E                     clear_1:
   166   001A2E  6AEE               	clrf	postinc0,c
   167   001A30  06E8               	decf	wreg,f,c
   168   001A32  E1FD               	bnz	clear_1
   169                           
   170                           ; Clear objects allocated to COMRAM (4 bytes)
   171   001A34  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   172   001A36  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   173   001A38  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   174   001A3A  6A57               	clrf	__pbssCOMRAM& (0+255),c
   175   001A3C                     end_of_initialization:
   176                           	callstack 0
   177   001A3C                     __end_of__initialization:
   178                           	callstack 0
   179   001A3C  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   180   001A3E  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   181   001A40  0E00               	movlw	low (__Lsmallconst shr (0+16))
   182   001A42  6EF8               	movwf	tblptru,c
   183   001A44  0E0E               	movlw	high __Lsmallconst
   184   001A46  6EF7               	movwf	tblptrh,c
   185   001A48  0100               	movlb	0
   186   001A4A  EFC3  F00A         	goto	_main	;jump to C main() function
   187                           
   188                           	psect	bssCOMRAM
   189   000057                     __pbssCOMRAM:
   190                           	callstack 0
   191   000057                     _TxBufReadCnt:
   192                           	callstack 0
   193   000057                     	ds	1
   194   000058                     _TxBufWriteCnt:
   195                           	callstack 0
   196   000058                     	ds	1
   197   000059                     _RxBufReadCnt:
   198                           	callstack 0
   199   000059                     	ds	1
   200   00005A                     _RxBufWriteCnt:
   201                           	callstack 0
   202   00005A                     	ds	1
   203                           
   204                           	psect	bssBANK0
   205   0000B5                     __pbssBANK0:
   206                           	callstack 0
   207   0000B5                     _EUSART4RXbuf:
   208                           	callstack 0
   209   0000B5                     	ds	20
   210   0000C9                     _width:
   211                           	callstack 0
   212   0000C9                     	ds	2
   213   0000CB                     _prec:
   214                           	callstack 0
   215   0000CB                     	ds	2
   216   0000CD                     _flags:
   217                           	callstack 0
   218   0000CD                     	ds	1
   219   0000CE                     _dbuf:
   220                           	callstack 0
   221   0000CE                     	ds	32
   222                           
   223                           	psect	bssBANK1
   224   000100                     __pbssBANK1:
   225                           	callstack 0
   226   000100                     _EUSART4TXbuf:
   227                           	callstack 0
   228   000100                     	ds	60
   229                           
   230                           	psect	cstackBANK0
   231   000060                     __pcstackBANK0:
   232                           	callstack 0
   233   000060                     ?_vfprintf:
   234                           	callstack 0
   235   000060                     vfprintf@fp:
   236                           	callstack 0
   237                           
   238                           ; 2 bytes @ 0x0
   239   000060                     	ds	2
   240   000062                     vfprintf@fmt:
   241                           	callstack 0
   242                           
   243                           ; 2 bytes @ 0x2
   244   000062                     	ds	2
   245   000064                     vfprintf@ap:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0x4
   249   000064                     	ds	2
   250   000066                     ?_sprintf:
   251                           	callstack 0
   252   000066                     sprintf@s:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0x6
   256   000066                     	ds	2
   257   000068                     sprintf@fmt:
   258                           	callstack 0
   259                           
   260                           ; 2 bytes @ 0x8
   261   000068                     	ds	4
   262   00006C                     sprintf@ap:
   263                           	callstack 0
   264                           
   265                           ; 2 bytes @ 0xC
   266   00006C                     	ds	2
   267   00006E                     sprintf@f:
   268                           	callstack 0
   269                           
   270                           ; 11 bytes @ 0xE
   271   00006E                     	ds	11
   272   000079                     main@buf:
   273                           	callstack 0
   274                           
   275                           ; 40 bytes @ 0x19
   276   000079                     	ds	40
   277   0000A1                     main@R:
   278                           	callstack 0
   279                           
   280                           ; 2 bytes @ 0x41
   281   0000A1                     	ds	2
   282   0000A3                     main@motorL:
   283                           	callstack 0
   284                           
   285                           ; 9 bytes @ 0x43
   286   0000A3                     	ds	9
   287   0000AC                     main@motorR:
   288                           	callstack 0
   289                           
   290                           ; 9 bytes @ 0x4C
   291   0000AC                     	ds	9
   292                           
   293                           	psect	cstackCOMRAM
   294   000001                     __pcstackCOMRAM:
   295                           	callstack 0
   296   000001                     ??_getCharFromTxBuf:
   297   000001                     putCharToRxBuf@byte:
   298                           	callstack 0
   299   000001                     
   300                           ; 1 bytes @ 0x0
   301   000001                     	ds	2
   302   000003                     ??_HighISR:
   303                           
   304                           ; 1 bytes @ 0x2
   305   000003                     	ds	2
   306   000005                     ??_I2C_2_Master_Idle:
   307   000005                     ?___aodiv:
   308                           	callstack 0
   309   000005                     ?___aomod:
   310                           	callstack 0
   311   000005                     sendCharSerial4@charToSend:
   312                           	callstack 0
   313   000005                     initDCmotorsPWM@PWMperiod:
   314                           	callstack 0
   315   000005                     fputc@c:
   316                           	callstack 0
   317   000005                     ___aodiv@dividend:
   318                           	callstack 0
   319   000005                     ___aomod@dividend:
   320                           	callstack 0
   321                           
   322                           ; 8 bytes @ 0x4
   323   000005                     	ds	1
   324   000006                     ??_I2C_2_Master_Read:
   325   000006                     I2C_2_Master_Write@data_byte:
   326                           	callstack 0
   327   000006                     sendStringSerial4@string:
   328                           	callstack 0
   329                           
   330                           ; 2 bytes @ 0x5
   331   000006                     	ds	1
   332   000007                     I2C_2_Master_Read@ack:
   333                           	callstack 0
   334   000007                     color_writetoaddr@value:
   335                           	callstack 0
   336   000007                     fputc@fp:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x6
   340   000007                     	ds	1
   341   000008                     I2C_2_Master_Read@tmp:
   342                           	callstack 0
   343   000008                     color_writetoaddr@address:
   344                           	callstack 0
   345                           
   346                           ; 1 bytes @ 0x7
   347   000008                     	ds	1
   348   000009                     ??_fputc:
   349   000009                     ??_color_click_init:
   350   000009                     ?_color_read_Red:
   351                           	callstack 0
   352   000009                     ?_color_read_Blue:
   353                           	callstack 0
   354   000009                     ?_color_read_Green:
   355                           	callstack 0
   356   000009                     ?_color_read_Clear:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x8
   360   000009                     	ds	2
   361   00000B                     ??_color_read_Red:
   362   00000B                     ??_color_read_Blue:
   363   00000B                     ??_color_read_Green:
   364   00000B                     ??_color_read_Clear:
   365                           
   366                           ; 1 bytes @ 0xA
   367   00000B                     	ds	2
   368   00000D                     ___aodiv@divisor:
   369                           	callstack 0
   370   00000D                     ___aomod@divisor:
   371                           	callstack 0
   372                           
   373                           ; 8 bytes @ 0xC
   374   00000D                     	ds	1
   375   00000E                     color_read_Red@tmp:
   376                           	callstack 0
   377   00000E                     color_read_Blue@tmp:
   378                           	callstack 0
   379   00000E                     color_read_Green@tmp:
   380                           	callstack 0
   381   00000E                     color_read_Clear@tmp:
   382                           	callstack 0
   383   00000E                     fputs@s:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0xD
   387   00000E                     	ds	2
   388   000010                     fputs@fp:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0xF
   392   000010                     	ds	2
   393   000012                     fputs@c:
   394                           	callstack 0
   395                           
   396                           ; 1 bytes @ 0x11
   397   000012                     	ds	1
   398   000013                     fputs@i:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0x12
   402   000013                     	ds	2
   403   000015                     ___aodiv@counter:
   404                           	callstack 0
   405   000015                     ___aomod@counter:
   406                           	callstack 0
   407   000015                     pad@fp:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x14
   411   000015                     	ds	1
   412   000016                     ___aodiv@sign:
   413                           	callstack 0
   414   000016                     ___aomod@sign:
   415                           	callstack 0
   416                           
   417                           ; 1 bytes @ 0x15
   418   000016                     	ds	1
   419   000017                     ?_abs:
   420                           	callstack 0
   421   000017                     pad@buf:
   422                           	callstack 0
   423   000017                     abs@a:
   424                           	callstack 0
   425   000017                     ___aodiv@quotient:
   426                           	callstack 0
   427                           
   428                           ; 8 bytes @ 0x16
   429   000017                     	ds	2
   430   000019                     ??_abs:
   431   000019                     pad@p:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x18
   435   000019                     	ds	2
   436   00001B                     ??_pad:
   437                           
   438                           ; 1 bytes @ 0x1A
   439   00001B                     	ds	1
   440   00001C                     pad@i:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x1B
   444   00001C                     	ds	2
   445   00001E                     pad@w:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x1D
   449   00001E                     	ds	2
   450   000020                     dtoa@fp:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x1F
   454   000020                     	ds	2
   455   000022                     dtoa@d:
   456                           	callstack 0
   457                           
   458                           ; 8 bytes @ 0x21
   459   000022                     	ds	8
   460   00002A                     ??_dtoa:
   461                           
   462                           ; 1 bytes @ 0x29
   463   00002A                     	ds	8
   464   000032                     _dtoa$1866:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x31
   468   000032                     	ds	2
   469   000034                     dtoa@p:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x33
   473   000034                     	ds	2
   474   000036                     dtoa@w:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x35
   478   000036                     	ds	2
   479   000038                     dtoa@n:
   480                           	callstack 0
   481                           
   482                           ; 8 bytes @ 0x37
   483   000038                     	ds	8
   484   000040                     dtoa@s:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0x3F
   488   000040                     	ds	1
   489   000041                     dtoa@i:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x40
   493   000041                     	ds	2
   494   000043                     vfpfcnvrt@fp:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x42
   498   000043                     	ds	2
   499   000045                     vfpfcnvrt@fmt:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x44
   503   000045                     	ds	2
   504   000047                     vfpfcnvrt@ap:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x46
   508   000047                     	ds	2
   509   000049                     ??_vfpfcnvrt:
   510                           
   511                           ; 1 bytes @ 0x48
   512   000049                     	ds	2
   513   00004B                     vfpfcnvrt@convarg:
   514                           	callstack 0
   515                           
   516                           ; 8 bytes @ 0x4A
   517   00004B                     	ds	8
   518   000053                     vfpfcnvrt@cp:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x52
   522   000053                     	ds	2
   523   000055                     vfprintf@cfmt:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x54
   527   000055                     	ds	2
   528   000057                     
   529                           ; 1 bytes @ 0x56
   530 ;;
   531 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   532 ;;
   533 ;; *************** function _main *****************
   534 ;; Defined at:
   535 ;;		line 19 in file "main.c"
   536 ;; Parameters:    Size  Location     Type
   537 ;;		None
   538 ;; Auto vars:     Size  Location     Type
   539 ;;  buf            40   25[BANK0 ] unsigned char [40]
   540 ;;  motorR          9   76[BANK0 ] struct DC_motor
   541 ;;  motorL          9   67[BANK0 ] struct DC_motor
   542 ;;  R               2   65[BANK0 ] unsigned int 
   543 ;;  C               2    0        unsigned int 
   544 ;;  G               2    0        unsigned int 
   545 ;;  B               2    0        unsigned int 
   546 ;; Return value:  Size  Location     Type
   547 ;;                  1    wreg      void 
   548 ;; Registers used:
   549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   550 ;; Tracked objects:
   551 ;;		On entry : 0/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   556 ;;      Locals:         0      60       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   558 ;;      Totals:         0      60       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   559 ;;Total ram usage:       60 bytes
   560 ;; Hardware stack levels required when called: 10
   561 ;; This function calls:
   562 ;;		_I2C_2_Master_Init
   563 ;;		_Interrupts_init
   564 ;;		_color_click_init
   565 ;;		_color_read_Blue
   566 ;;		_color_read_Clear
   567 ;;		_color_read_Green
   568 ;;		_color_read_Red
   569 ;;		_initDCmotorsPWM
   570 ;;		_initUSART4
   571 ;;		_sendStringSerial4
   572 ;;		_sprintf
   573 ;; This function is called by:
   574 ;;		Startup code after reset
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           	psect	text0
   579   001586                     __ptext0:
   580                           	callstack 0
   581   001586                     _main:
   582                           	callstack 21
   583   001586                     
   584                           ;main.c: 21:     initDCmotorsPWM(99);
   585   001586  0E00               	movlw	0
   586   001588  6E06               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   587   00158A  0E63               	movlw	99
   588   00158C  6E05               	movwf	initDCmotorsPWM@PWMperiod^0,c
   589   00158E  EC1B  F00B         	call	_initDCmotorsPWM	;wreg free
   590   001592                     
   591                           ;main.c: 23:     struct DC_motor motorL, motorR;;main.c: 25:     motorL.power=0;
   592   001592  0E00               	movlw	0
   593   001594  0100               	movlb	0	; () banked
   594   001596  6FA3               	movwf	main@motorL& (0+255),b
   595   001598                     
   596                           ; BSR set to: 0
   597                           ;main.c: 26:     motorL.direction=1;
   598   001598  0E01               	movlw	1
   599   00159A  6FA4               	movwf	(main@motorL+1)& (0+255),b
   600   00159C                     
   601                           ; BSR set to: 0
   602                           ;main.c: 27:     motorL.brakemode=1;
   603   00159C  0E01               	movlw	1
   604   00159E  6FA5               	movwf	(main@motorL+2)& (0+255),b
   605   0015A0                     
   606                           ; BSR set to: 0
   607                           ;main.c: 28:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   608   0015A0  0EAA               	movlw	170
   609   0015A2  6FA8               	movwf	(main@motorL+5)& (0+255),b
   610   0015A4  0E0F               	movlw	15
   611   0015A6  6FA9               	movwf	(main@motorL+6)& (0+255),b
   612   0015A8                     
   613                           ; BSR set to: 0
   614                           ;main.c: 29:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   615   0015A8  0EA6               	movlw	166
   616   0015AA  6FAA               	movwf	(main@motorL+7)& (0+255),b
   617   0015AC  0E0F               	movlw	15
   618   0015AE  6FAB               	movwf	(main@motorL+8)& (0+255),b
   619   0015B0                     
   620                           ; BSR set to: 0
   621                           ;main.c: 30:     motorL.PWMperiod=99;
   622   0015B0  0E00               	movlw	0
   623   0015B2  6FA7               	movwf	(main@motorL+4)& (0+255),b
   624   0015B4  0E63               	movlw	99
   625   0015B6  6FA6               	movwf	(main@motorL+3)& (0+255),b
   626   0015B8                     
   627                           ; BSR set to: 0
   628                           ;main.c: 32:     motorR.power=0;
   629   0015B8  0E00               	movlw	0
   630   0015BA  6FAC               	movwf	main@motorR& (0+255),b
   631   0015BC                     
   632                           ; BSR set to: 0
   633                           ;main.c: 33:     motorR.direction=1;
   634   0015BC  0E01               	movlw	1
   635   0015BE  6FAD               	movwf	(main@motorR+1)& (0+255),b
   636   0015C0                     
   637                           ; BSR set to: 0
   638                           ;main.c: 34:     motorR.brakemode=1;
   639   0015C0  0E01               	movlw	1
   640   0015C2  6FAE               	movwf	(main@motorR+2)& (0+255),b
   641   0015C4                     
   642                           ; BSR set to: 0
   643                           ;main.c: 35:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   644   0015C4  0E25               	movlw	37
   645   0015C6  6FB1               	movwf	(main@motorR+5)& (0+255),b
   646   0015C8  0E0F               	movlw	15
   647   0015CA  6FB2               	movwf	(main@motorR+6)& (0+255),b
   648   0015CC                     
   649                           ; BSR set to: 0
   650                           ;main.c: 36:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   651   0015CC  0E21               	movlw	33
   652   0015CE  6FB3               	movwf	(main@motorR+7)& (0+255),b
   653   0015D0  0E0F               	movlw	15
   654   0015D2  6FB4               	movwf	(main@motorR+8)& (0+255),b
   655   0015D4                     
   656                           ; BSR set to: 0
   657                           ;main.c: 37:     motorR.PWMperiod=99;
   658   0015D4  0E00               	movlw	0
   659   0015D6  6FB0               	movwf	(main@motorR+4)& (0+255),b
   660   0015D8  0E63               	movlw	99
   661   0015DA  6FAF               	movwf	(main@motorR+3)& (0+255),b
   662                           
   663                           ;main.c: 41:     initUSART4();
   664   0015DC  EC93  F00D         	call	_initUSART4	;wreg free
   665   0015E0                     
   666                           ;main.c: 42:     color_click_init();
   667   0015E0  ECF4  F00C         	call	_color_click_init	;wreg free
   668   0015E4                     
   669                           ;main.c: 43:     Interrupts_init();
   670   0015E4  ECD1  F00D         	call	_Interrupts_init	;wreg free
   671   0015E8                     
   672                           ;main.c: 44:     I2C_2_Master_Init();
   673   0015E8  EC55  F00D         	call	_I2C_2_Master_Init	;wreg free
   674   0015EC                     
   675                           ;main.c: 46:     unsigned int R = color_read_Red();
   676   0015EC  ECF1  F00B         	call	_color_read_Red	;wreg free
   677   0015F0  C009  F0A1         	movff	?_color_read_Red,main@R
   678   0015F4  C00A  F0A2         	movff	?_color_read_Red+1,main@R+1
   679   0015F8  EC69  F00C         	call	_color_read_Blue	;wreg free
   680   0015FC  EC19  F00C         	call	_color_read_Green	;wreg free
   681   001600  EC41  F00C         	call	_color_read_Clear	;wreg free
   682   001604                     l2393:
   683                           
   684                           ;main.c: 52:     char buf[40];;main.c: 53:     sprintf(buf,"%d",R);
   685   001604  0E79               	movlw	low main@buf
   686   001606  0100               	movlb	0	; () banked
   687   001608  6F66               	movwf	sprintf@s& (0+255),b
   688   00160A  0E00               	movlw	high main@buf
   689   00160C  6F67               	movwf	(sprintf@s+1)& (0+255),b
   690   00160E  0E01               	movlw	low STR_1
   691   001610  6F68               	movwf	sprintf@fmt& (0+255),b
   692   001612  0E0E               	movlw	high STR_1
   693   001614  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
   694   001616  C0A1  F06A         	movff	main@R,?_sprintf+4
   695   00161A  C0A2  F06B         	movff	main@R+1,?_sprintf+5
   696   00161E  ECA0  F00B         	call	_sprintf	;wreg free
   697   001622                     
   698                           ;main.c: 54:     sendStringSerial4(buf);
   699   001622  0E79               	movlw	low main@buf
   700   001624  6E06               	movwf	sendStringSerial4@string^0,c
   701   001626  0E00               	movlw	high main@buf
   702   001628  6E07               	movwf	(sendStringSerial4@string+1)^0,c
   703   00162A  EC27  F00D         	call	_sendStringSerial4	;wreg free
   704   00162E  EF02  F00B         	goto	l2393
   705   001632  EF3B  F000         	goto	start
   706   001636                     __end_of_main:
   707                           	callstack 0
   708                           
   709 ;; *************** function _sprintf *****************
   710 ;; Defined at:
   711 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;  s               2    6[BANK0 ] PTR unsigned char 
   714 ;;		 -> main@buf(40), 
   715 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
   716 ;;		 -> STR_1(3), 
   717 ;; Auto vars:     Size  Location     Type
   718 ;;  f              11   14[BANK0 ] struct _IO_FILE
   719 ;;  ap              2   12[BANK0 ] PTR void [1]
   720 ;;		 -> ?_sprintf(2), 
   721 ;;  ret             2    0        int 
   722 ;; Return value:  Size  Location     Type
   723 ;;                  2    6[BANK0 ] int 
   724 ;; Registers used:
   725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   731 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   732 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   734 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   735 ;;Total ram usage:       19 bytes
   736 ;; Hardware stack levels used: 1
   737 ;; Hardware stack levels required when called: 9
   738 ;; This function calls:
   739 ;;		_vfprintf
   740 ;; This function is called by:
   741 ;;		_main
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           	psect	text1
   746   001740                     __ptext1:
   747                           	callstack 0
   748   001740                     _sprintf:
   749                           	callstack 21
   750   001740  0E6A               	movlw	low (?_sprintf+4)
   751   001742  0100               	movlb	0	; () banked
   752   001744  6F6C               	movwf	sprintf@ap& (0+255),b
   753   001746  0E00               	movlw	high (?_sprintf+4)
   754   001748  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
   755   00174A  C066  F06E         	movff	sprintf@s,sprintf@f
   756   00174E  C067  F06F         	movff	sprintf@s+1,sprintf@f+1
   757   001752                     
   758                           ; BSR set to: 0
   759   001752  0E00               	movlw	0
   760   001754  6F72               	movwf	(sprintf@f+4)& (0+255),b
   761   001756  0E00               	movlw	0
   762   001758  6F71               	movwf	(sprintf@f+3)& (0+255),b
   763   00175A                     
   764                           ; BSR set to: 0
   765   00175A  0E00               	movlw	0
   766   00175C  6F78               	movwf	(sprintf@f+10)& (0+255),b
   767   00175E  0E00               	movlw	0
   768   001760  6F77               	movwf	(sprintf@f+9)& (0+255),b
   769   001762                     
   770                           ; BSR set to: 0
   771   001762  0E6E               	movlw	low sprintf@f
   772   001764  6F60               	movwf	vfprintf@fp& (0+255),b
   773   001766  0E00               	movlw	high sprintf@f
   774   001768  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
   775   00176A  C068  F062         	movff	sprintf@fmt,vfprintf@fmt
   776   00176E  C069  F063         	movff	sprintf@fmt+1,vfprintf@fmt+1
   777   001772  0E6C               	movlw	low sprintf@ap
   778   001774  6F64               	movwf	vfprintf@ap& (0+255),b
   779   001776  0E00               	movlw	high sprintf@ap
   780   001778  6F65               	movwf	(vfprintf@ap+1)& (0+255),b
   781   00177A  ECC9  F00B         	call	_vfprintf	;wreg free
   782   00177E  0100               	movlb	0	; () banked
   783   001780  5171               	movf	(sprintf@f+3)& (0+255),w,b
   784   001782  2566               	addwf	sprintf@s& (0+255),w,b
   785   001784  6ED9               	movwf	fsr2l,c
   786   001786  5172               	movf	(sprintf@f+4)& (0+255),w,b
   787   001788  2167               	addwfc	(sprintf@s+1)& (0+255),w,b
   788   00178A  6EDA               	movwf	fsr2h,c
   789   00178C  0E00               	movlw	0
   790   00178E  6EDF               	movwf	indf2,c
   791   001790                     
   792                           ; BSR set to: 0
   793   001790  0012               	return		;funcret
   794   001792                     __end_of_sprintf:
   795                           	callstack 0
   796                           
   797 ;; *************** function _vfprintf *****************
   798 ;; Defined at:
   799 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
   802 ;;		 -> sprintf@f(11), 
   803 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   804 ;;		 -> STR_1(3), 
   805 ;;  ap              2    4[BANK0 ] PTR PTR void 
   806 ;;		 -> sprintf@ap(2), 
   807 ;; Auto vars:     Size  Location     Type
   808 ;;  cfmt            2   84[COMRAM] PTR unsigned char 
   809 ;;		 -> STR_1(3), 
   810 ;; Return value:  Size  Location     Type
   811 ;;                  2    0[BANK0 ] int 
   812 ;; Registers used:
   813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   814 ;; Tracked objects:
   815 ;;		On entry : 0/0
   816 ;;		On exit  : 0/0
   817 ;;		Unchanged: 0/0
   818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   819 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   820 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   822 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   823 ;;Total ram usage:        8 bytes
   824 ;; Hardware stack levels used: 1
   825 ;; Hardware stack levels required when called: 8
   826 ;; This function calls:
   827 ;;		_vfpfcnvrt
   828 ;; This function is called by:
   829 ;;		_sprintf
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833                           	psect	text2
   834   001792                     __ptext2:
   835                           	callstack 0
   836   001792                     _vfprintf:
   837                           	callstack 21
   838   001792                     
   839                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
   840   001792  C062  F055         	movff	vfprintf@fmt,vfprintf@cfmt
   841   001796  C063  F056         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   842                           
   843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   844   00179A  EFDD  F00B         	goto	l2335
   845   00179E                     l2333:
   846                           
   847                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   848   00179E  C060  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
   849   0017A2  C061  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   850   0017A6  0E55               	movlw	low vfprintf@cfmt
   851   0017A8  6E45               	movwf	vfpfcnvrt@fmt^0,c
   852   0017AA  0E00               	movlw	high vfprintf@cfmt
   853   0017AC  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
   854   0017AE  C064  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
   855   0017B2  C065  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   856   0017B6  ECB7  F009         	call	_vfpfcnvrt	;wreg free
   857   0017BA                     l2335:
   858                           
   859                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   860   0017BA  C055  FFF6         	movff	vfprintf@cfmt,tblptrl
   861   0017BE  C056  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   862   0017C2                     	if	0	;tblptru may be non-zero
   863   0017C2                     	endif
   864   0017C2                     	if	0	;tblptru may be non-zero
   865   0017C2                     	endif
   866   0017C2  0008               	tblrd		*
   867   0017C4  50F5               	movf	tablat,w,c
   868   0017C6  0900               	iorlw	0
   869   0017C8  A4D8               	btfss	status,2,c
   870   0017CA  EFE9  F00B         	goto	u1471
   871   0017CE  EFEB  F00B         	goto	u1470
   872   0017D2                     u1471:
   873   0017D2  EFCF  F00B         	goto	l2333
   874   0017D6                     u1470:
   875   0017D6                     
   876                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
   877   0017D6  0E00               	movlw	0
   878   0017D8  0100               	movlb	0	; () banked
   879   0017DA  6F61               	movwf	(?_vfprintf+1)& (0+255),b
   880   0017DC  0E00               	movlw	0
   881   0017DE  6F60               	movwf	?_vfprintf& (0+255),b
   882   0017E0                     
   883                           ; BSR set to: 0
   884   0017E0  0012               	return		;funcret
   885   0017E2                     __end_of_vfprintf:
   886                           	callstack 0
   887                           
   888 ;; *************** function _vfpfcnvrt *****************
   889 ;; Defined at:
   890 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
   893 ;;		 -> sprintf@f(11), 
   894 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
   895 ;;		 -> vfprintf@cfmt(2), 
   896 ;;  ap              2   70[COMRAM] PTR PTR void 
   897 ;;		 -> sprintf@ap(2), 
   898 ;; Auto vars:     Size  Location     Type
   899 ;;  convarg         8   74[COMRAM] struct .
   900 ;;  cp              2   82[COMRAM] PTR unsigned char 
   901 ;;		 -> STR_1(3), 
   902 ;;  i               2    0        int 
   903 ;;  done            2    0        int 
   904 ;;  c               1    0        unsigned char 
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   914 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   915 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   916 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   917 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   918 ;;Total ram usage:       18 bytes
   919 ;; Hardware stack levels used: 1
   920 ;; Hardware stack levels required when called: 7
   921 ;; This function calls:
   922 ;;		_dtoa
   923 ;;		_fputc
   924 ;; This function is called by:
   925 ;;		_vfprintf
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           	psect	text3
   930   00136E                     __ptext3:
   931                           	callstack 0
   932   00136E                     _vfpfcnvrt:
   933                           	callstack 21
   934   00136E                     
   935                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
   936   00136E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   937   001372  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   938   001376  CFDE FFF6          	movff	postinc2,tblptrl
   939   00137A  CFDD FFF7          	movff	postdec2,tblptrh
   940   00137E                     	if	0	;tblptru may be non-zero
   941   00137E                     	endif
   942   00137E                     	if	0	;tblptru may be non-zero
   943   00137E                     	endif
   944   00137E  0008               	tblrd		*
   945   001380  50F5               	movf	tablat,w,c
   946   001382  0A25               	xorlw	37
   947   001384  A4D8               	btfss	status,2,c
   948   001386  EFC7  F009         	goto	u1441
   949   00138A  EFC9  F009         	goto	u1440
   950   00138E                     u1441:
   951   00138E  EF49  F00A         	goto	l2325
   952   001392                     u1440:
   953   001392                     
   954                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
   955   001392  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   956   001396  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   957   00139A  2ADE               	incf	postinc2,f,c
   958   00139C  0E00               	movlw	0
   959   00139E  22DD               	addwfc	postdec2,f,c
   960   0013A0                     
   961                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
   962   0013A0  0E00               	movlw	0
   963   0013A2  0100               	movlb	0	; () banked
   964   0013A4  6FCA               	movwf	(_width+1)& (0+255),b
   965   0013A6  0E00               	movlw	0
   966   0013A8  6FC9               	movwf	_width& (0+255),b
   967   0013AA  C0C9  F0CD         	movff	_width,_flags
   968   0013AE                     
   969                           ; BSR set to: 0
   970                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
   971   0013AE  69CB               	setf	_prec& (0+255),b
   972   0013B0  69CC               	setf	(_prec+1)& (0+255),b
   973   0013B2                     
   974                           ; BSR set to: 0
   975                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
   976   0013B2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   977   0013B6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   978   0013BA  CFDE F053          	movff	postinc2,vfpfcnvrt@cp
   979   0013BE  CFDD F054          	movff	postdec2,vfpfcnvrt@cp+1
   980   0013C2                     
   981                           ; BSR set to: 0
   982                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
   983   0013C2  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   984   0013C6  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
   985   0013CA                     	if	0	;tblptru may be non-zero
   986   0013CA                     	endif
   987   0013CA                     	if	0	;tblptru may be non-zero
   988   0013CA                     	endif
   989   0013CA  0008               	tblrd		*
   990   0013CC  50F5               	movf	tablat,w,c
   991   0013CE  0A64               	xorlw	100
   992   0013D0  B4D8               	btfsc	status,2,c
   993   0013D2  EFED  F009         	goto	u1451
   994   0013D6  EFEF  F009         	goto	u1450
   995   0013DA                     u1451:
   996   0013DA  EFFD  F009         	goto	l2315
   997   0013DE                     u1450:
   998   0013DE                     
   999                           ; BSR set to: 0
  1000   0013DE  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1001   0013E2  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1002   0013E6                     	if	0	;tblptru may be non-zero
  1003   0013E6                     	endif
  1004   0013E6                     	if	0	;tblptru may be non-zero
  1005   0013E6                     	endif
  1006   0013E6  0008               	tblrd		*
  1007   0013E8  50F5               	movf	tablat,w,c
  1008   0013EA  0A69               	xorlw	105
  1009   0013EC  A4D8               	btfss	status,2,c
  1010   0013EE  EFFB  F009         	goto	u1461
  1011   0013F2  EFFD  F009         	goto	u1460
  1012   0013F6                     u1461:
  1013   0013F6  EF40  F00A         	goto	l2321
  1014   0013FA                     u1460:
  1015   0013FA                     l2315:
  1016                           
  1017                           ; BSR set to: 0
  1018                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1019   0013FA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1020   0013FE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1021   001402  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1022   001406  0E02               	movlw	2
  1023   001408  26DE               	addwf	postinc2,f,c
  1024   00140A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1025   00140E  0E00               	movlw	0
  1026   001410  22DD               	addwfc	postdec2,f,c
  1027   001412  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1028   001416  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1029   00141A  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg
  1030   00141E  CFDD F04C          	movff	postdec2,vfpfcnvrt@convarg+1
  1031   001422  0E00               	movlw	0
  1032   001424  BE4C               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1033   001426  0EFF               	movlw	-1
  1034   001428  6E4D               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1035   00142A  6E4E               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1036   00142C  6E4F               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1037   00142E  6E50               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1038   001430  6E51               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1039   001432  6E52               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1040                           
  1041                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1042   001434  0E01               	movlw	1
  1043   001436  2453               	addwf	vfpfcnvrt@cp^0,w,c
  1044   001438  6E49               	movwf	??_vfpfcnvrt^0,c
  1045   00143A  0E00               	movlw	0
  1046   00143C  2054               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1047   00143E  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1048   001440  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1049   001444  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1050   001448  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  1051   00144C  C04A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1052   001450                     
  1053                           ; BSR set to: 0
  1054                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1055   001450  C043  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  1056   001454  C044  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1057   001458  C04B  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  1058   00145C  C04C  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1059   001460  C04D  F024         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1060   001464  C04E  F025         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1061   001468  C04F  F026         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1062   00146C  C050  F027         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1063   001470  C051  F028         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1064   001474  C052  F029         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1065   001478  EC03  F007         	call	_dtoa	;wreg free
  1066   00147C  EF5D  F00A         	goto	l1081
  1067   001480                     l2321:
  1068                           
  1069                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1070   001480  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1071   001484  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1072   001488  2ADE               	incf	postinc2,f,c
  1073   00148A  0E00               	movlw	0
  1074   00148C  22DD               	addwfc	postdec2,f,c
  1075   00148E  EF5D  F00A         	goto	l1081
  1076   001492                     l2325:
  1077                           
  1078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1079   001492  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1080   001496  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1081   00149A  CFDE FFF6          	movff	postinc2,tblptrl
  1082   00149E  CFDD FFF7          	movff	postdec2,tblptrh
  1083   0014A2                     	if	0	;tblptru may be non-zero
  1084   0014A2                     	endif
  1085   0014A2                     	if	0	;tblptru may be non-zero
  1086   0014A2                     	endif
  1087   0014A2  0008               	tblrd		*
  1088   0014A4  50F5               	movf	tablat,w,c
  1089   0014A6  6E05               	movwf	fputc@c^0,c
  1090   0014A8  6A06               	clrf	(fputc@c+1)^0,c
  1091   0014AA  C043  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1092   0014AE  C044  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1093   0014B2  EC5E  F00A         	call	_fputc	;wreg free
  1094   0014B6  EF40  F00A         	goto	l2321
  1095   0014BA                     l1081:
  1096   0014BA  0012               	return		;funcret
  1097   0014BC                     __end_of_vfpfcnvrt:
  1098                           	callstack 0
  1099                           
  1100 ;; *************** function _dtoa *****************
  1101 ;; Defined at:
  1102 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  1105 ;;		 -> sprintf@f(11), 
  1106 ;;  d               8   33[COMRAM] long long 
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;  n               8   55[COMRAM] long long 
  1109 ;;  i               2   64[COMRAM] int 
  1110 ;;  w               2   53[COMRAM] int 
  1111 ;;  p               2   51[COMRAM] int 
  1112 ;;  s               1   63[COMRAM] unsigned char 
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  1    wreg      void 
  1115 ;; Registers used:
  1116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1122 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1123 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1124 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1125 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1126 ;;Total ram usage:       35 bytes
  1127 ;; Hardware stack levels used: 1
  1128 ;; Hardware stack levels required when called: 6
  1129 ;; This function calls:
  1130 ;;		___aodiv
  1131 ;;		___aomod
  1132 ;;		_abs
  1133 ;;		_pad
  1134 ;; This function is called by:
  1135 ;;		_vfpfcnvrt
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text4
  1140   000E06                     __ptext4:
  1141                           	callstack 0
  1142   000E06                     _dtoa:
  1143                           	callstack 21
  1144   000E06                     
  1145                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1146   000E06  C022  F038         	movff	dtoa@d,dtoa@n
  1147   000E0A  C023  F039         	movff	dtoa@d+1,dtoa@n+1
  1148   000E0E  C024  F03A         	movff	dtoa@d+2,dtoa@n+2
  1149   000E12  C025  F03B         	movff	dtoa@d+3,dtoa@n+3
  1150   000E16  C026  F03C         	movff	dtoa@d+4,dtoa@n+4
  1151   000E1A  C027  F03D         	movff	dtoa@d+5,dtoa@n+5
  1152   000E1E  C028  F03E         	movff	dtoa@d+6,dtoa@n+6
  1153   000E22  C029  F03F         	movff	dtoa@d+7,dtoa@n+7
  1154   000E26                     
  1155                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1156   000E26  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  1157   000E28  EF18  F007         	goto	u1341
  1158   000E2C  EF1B  F007         	goto	u1340
  1159   000E30                     u1341:
  1160   000E30  0E01               	movlw	1
  1161   000E32  EF1C  F007         	goto	u1350
  1162   000E36                     u1340:
  1163   000E36  0E00               	movlw	0
  1164   000E38                     u1350:
  1165   000E38  6E40               	movwf	dtoa@s^0,c
  1166   000E3A                     
  1167                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1168   000E3A  5040               	movf	dtoa@s^0,w,c
  1169   000E3C  B4D8               	btfsc	status,2,c
  1170   000E3E  EF23  F007         	goto	u1361
  1171   000E42  EF25  F007         	goto	u1360
  1172   000E46                     u1361:
  1173   000E46  EF35  F007         	goto	l2257
  1174   000E4A                     u1360:
  1175   000E4A                     
  1176                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1177   000E4A  1E3F               	comf	(dtoa@n+7)^0,f,c
  1178   000E4C  1E3E               	comf	(dtoa@n+6)^0,f,c
  1179   000E4E  1E3D               	comf	(dtoa@n+5)^0,f,c
  1180   000E50  1E3C               	comf	(dtoa@n+4)^0,f,c
  1181   000E52  1E3B               	comf	(dtoa@n+3)^0,f,c
  1182   000E54  1E3A               	comf	(dtoa@n+2)^0,f,c
  1183   000E56  1E39               	comf	(dtoa@n+1)^0,f,c
  1184   000E58  6C38               	negf	dtoa@n^0,c
  1185   000E5A  0E00               	movlw	0
  1186   000E5C  2239               	addwfc	(dtoa@n+1)^0,f,c
  1187   000E5E  223A               	addwfc	(dtoa@n+2)^0,f,c
  1188   000E60  223B               	addwfc	(dtoa@n+3)^0,f,c
  1189   000E62  223C               	addwfc	(dtoa@n+4)^0,f,c
  1190   000E64  223D               	addwfc	(dtoa@n+5)^0,f,c
  1191   000E66  223E               	addwfc	(dtoa@n+6)^0,f,c
  1192   000E68  223F               	addwfc	(dtoa@n+7)^0,f,c
  1193   000E6A                     l2257:
  1194                           
  1195                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1196   000E6A  0100               	movlb	0	; () banked
  1197   000E6C  BFCC               	btfsc	(_prec+1)& (0+255),7,b
  1198   000E6E  EF43  F007         	goto	u1370
  1199   000E72  51CC               	movf	(_prec+1)& (0+255),w,b
  1200   000E74  E106               	bnz	u1371
  1201   000E76  05CB               	decf	_prec& (0+255),w,b
  1202   000E78  B0D8               	btfsc	status,0,c
  1203   000E7A  EF41  F007         	goto	u1371
  1204   000E7E  EF43  F007         	goto	u1370
  1205   000E82                     u1371:
  1206   000E82  EF49  F007         	goto	l1060
  1207   000E86                     u1370:
  1208   000E86                     
  1209                           ; BSR set to: 0
  1210   000E86  0E00               	movlw	0
  1211   000E88  6E35               	movwf	(dtoa@p+1)^0,c
  1212   000E8A  0E01               	movlw	1
  1213   000E8C  6E34               	movwf	dtoa@p^0,c
  1214   000E8E  EF4D  F007         	goto	l1062
  1215   000E92                     l1060:
  1216                           
  1217                           ; BSR set to: 0
  1218   000E92  C0CB  F034         	movff	_prec,dtoa@p
  1219   000E96  C0CC  F035         	movff	_prec+1,dtoa@p+1
  1220   000E9A                     l1062:
  1221                           
  1222                           ; BSR set to: 0
  1223                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1224   000E9A  C0C9  F036         	movff	_width,dtoa@w
  1225   000E9E  C0CA  F037         	movff	_width+1,dtoa@w+1
  1226   000EA2                     
  1227                           ; BSR set to: 0
  1228                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1229   000EA2  5040               	movf	dtoa@s^0,w,c
  1230   000EA4  B4D8               	btfsc	status,2,c
  1231   000EA6  EF57  F007         	goto	u1381
  1232   000EAA  EF59  F007         	goto	u1380
  1233   000EAE                     u1381:
  1234   000EAE  EF70  F007         	goto	l1063
  1235   000EB2                     u1380:
  1236   000EB2                     
  1237                           ; BSR set to: 0
  1238                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1239   000EB2  0636               	decf	dtoa@w^0,f,c
  1240   000EB4  A0D8               	btfss	status,0,c
  1241   000EB6  0637               	decf	(dtoa@w+1)^0,f,c
  1242   000EB8                     
  1243                           ; BSR set to: 0
  1244                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1245   000EB8  5040               	movf	dtoa@s^0,w,c
  1246   000EBA  A4D8               	btfss	status,2,c
  1247   000EBC  EF62  F007         	goto	u1391
  1248   000EC0  EF64  F007         	goto	u1390
  1249   000EC4                     u1391:
  1250   000EC4  EF6A  F007         	goto	l2269
  1251   000EC8                     u1390:
  1252   000EC8                     
  1253                           ; BSR set to: 0
  1254   000EC8  0E00               	movlw	0
  1255   000ECA  6E33               	movwf	(_dtoa$1866+1)^0,c
  1256   000ECC  0E2B               	movlw	43
  1257   000ECE  6E32               	movwf	_dtoa$1866^0,c
  1258   000ED0  EF6E  F007         	goto	l2271
  1259   000ED4                     l2269:
  1260                           
  1261                           ; BSR set to: 0
  1262   000ED4  0E00               	movlw	0
  1263   000ED6  6E33               	movwf	(_dtoa$1866+1)^0,c
  1264   000ED8  0E2D               	movlw	45
  1265   000EDA  6E32               	movwf	_dtoa$1866^0,c
  1266   000EDC                     l2271:
  1267                           
  1268                           ; BSR set to: 0
  1269   000EDC  C032  F040         	movff	_dtoa$1866,dtoa@s
  1270   000EE0                     l1063:
  1271                           
  1272                           ; BSR set to: 0
  1273                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1274   000EE0  0E00               	movlw	0
  1275   000EE2  6E42               	movwf	(dtoa@i+1)^0,c
  1276   000EE4  0E1F               	movlw	31
  1277   000EE6  6E41               	movwf	dtoa@i^0,c
  1278   000EE8                     
  1279                           ; BSR set to: 0
  1280                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1281   000EE8  0E00               	movlw	0
  1282   000EEA  6FED               	movwf	(_dbuf+31)& (0+255),b
  1283                           
  1284                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1285   000EEC  EFF4  F007         	goto	l2285
  1286   000EF0                     l2275:
  1287                           
  1288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1289   000EF0  0641               	decf	dtoa@i^0,f,c
  1290   000EF2  A0D8               	btfss	status,0,c
  1291   000EF4  0642               	decf	(dtoa@i+1)^0,f,c
  1292   000EF6                     
  1293                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1294   000EF6  0ECE               	movlw	low _dbuf
  1295   000EF8  2441               	addwf	dtoa@i^0,w,c
  1296   000EFA  6ED9               	movwf	fsr2l,c
  1297   000EFC  0E00               	movlw	high _dbuf
  1298   000EFE  2042               	addwfc	(dtoa@i+1)^0,w,c
  1299   000F00  6EDA               	movwf	fsr2h,c
  1300   000F02  C038  F005         	movff	dtoa@n,___aomod@dividend
  1301   000F06  C039  F006         	movff	dtoa@n+1,___aomod@dividend+1
  1302   000F0A  C03A  F007         	movff	dtoa@n+2,___aomod@dividend+2
  1303   000F0E  C03B  F008         	movff	dtoa@n+3,___aomod@dividend+3
  1304   000F12  C03C  F009         	movff	dtoa@n+4,___aomod@dividend+4
  1305   000F16  C03D  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  1306   000F1A  C03E  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  1307   000F1E  C03F  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  1308   000F22  0E0A               	movlw	10
  1309   000F24  6E0D               	movwf	___aomod@divisor^0,c
  1310   000F26  0E00               	movlw	0
  1311   000F28  6E0E               	movwf	(___aomod@divisor+1)^0,c
  1312   000F2A  0E00               	movlw	0
  1313   000F2C  6E0F               	movwf	(___aomod@divisor+2)^0,c
  1314   000F2E  0E00               	movlw	0
  1315   000F30  6E10               	movwf	(___aomod@divisor+3)^0,c
  1316   000F32  0E00               	movlw	0
  1317   000F34  6E11               	movwf	(___aomod@divisor+4)^0,c
  1318   000F36  0E00               	movlw	0
  1319   000F38  6E12               	movwf	(___aomod@divisor+5)^0,c
  1320   000F3A  0E00               	movlw	0
  1321   000F3C  6E13               	movwf	(___aomod@divisor+6)^0,c
  1322   000F3E  0E00               	movlw	0
  1323   000F40  6E14               	movwf	(___aomod@divisor+7)^0,c
  1324   000F42  EC05  F009         	call	___aomod	;wreg free
  1325   000F46  C005  F02A         	movff	?___aomod,??_dtoa
  1326   000F4A  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  1327   000F4E  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  1328   000F52  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  1329   000F56  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  1330   000F5A  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  1331   000F5E  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  1332   000F62  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  1333   000F66  C02A  F017         	movff	??_dtoa,abs@a
  1334   000F6A  C02B  F018         	movff	??_dtoa+1,abs@a+1
  1335   000F6E  ECD4  F00C         	call	_abs	;wreg free
  1336   000F72  5017               	movf	?_abs^0,w,c
  1337   000F74  0F30               	addlw	48
  1338   000F76  6EDF               	movwf	indf2,c
  1339   000F78                     
  1340                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1341   000F78  0634               	decf	dtoa@p^0,f,c
  1342   000F7A  A0D8               	btfss	status,0,c
  1343   000F7C  0635               	decf	(dtoa@p+1)^0,f,c
  1344   000F7E                     
  1345                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1346   000F7E  0636               	decf	dtoa@w^0,f,c
  1347   000F80  A0D8               	btfss	status,0,c
  1348   000F82  0637               	decf	(dtoa@w+1)^0,f,c
  1349   000F84                     
  1350                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1351   000F84  C038  F005         	movff	dtoa@n,___aodiv@dividend
  1352   000F88  C039  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  1353   000F8C  C03A  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  1354   000F90  C03B  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  1355   000F94  C03C  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  1356   000F98  C03D  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  1357   000F9C  C03E  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  1358   000FA0  C03F  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  1359   000FA4  0E0A               	movlw	10
  1360   000FA6  6E0D               	movwf	___aodiv@divisor^0,c
  1361   000FA8  0E00               	movlw	0
  1362   000FAA  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  1363   000FAC  0E00               	movlw	0
  1364   000FAE  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  1365   000FB0  0E00               	movlw	0
  1366   000FB2  6E10               	movwf	(___aodiv@divisor+3)^0,c
  1367   000FB4  0E00               	movlw	0
  1368   000FB6  6E11               	movwf	(___aodiv@divisor+4)^0,c
  1369   000FB8  0E00               	movlw	0
  1370   000FBA  6E12               	movwf	(___aodiv@divisor+5)^0,c
  1371   000FBC  0E00               	movlw	0
  1372   000FBE  6E13               	movwf	(___aodiv@divisor+6)^0,c
  1373   000FC0  0E00               	movlw	0
  1374   000FC2  6E14               	movwf	(___aodiv@divisor+7)^0,c
  1375   000FC4  EC41  F008         	call	___aodiv	;wreg free
  1376   000FC8  C005  F038         	movff	?___aodiv,dtoa@n
  1377   000FCC  C006  F039         	movff	?___aodiv+1,dtoa@n+1
  1378   000FD0  C007  F03A         	movff	?___aodiv+2,dtoa@n+2
  1379   000FD4  C008  F03B         	movff	?___aodiv+3,dtoa@n+3
  1380   000FD8  C009  F03C         	movff	?___aodiv+4,dtoa@n+4
  1381   000FDC  C00A  F03D         	movff	?___aodiv+5,dtoa@n+5
  1382   000FE0  C00B  F03E         	movff	?___aodiv+6,dtoa@n+6
  1383   000FE4  C00C  F03F         	movff	?___aodiv+7,dtoa@n+7
  1384   000FE8                     l2285:
  1385                           
  1386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1387   000FE8  BE42               	btfsc	(dtoa@i+1)^0,7,c
  1388   000FEA  EFFF  F007         	goto	u1401
  1389   000FEE  5042               	movf	(dtoa@i+1)^0,w,c
  1390   000FF0  E108               	bnz	u1400
  1391   000FF2  0441               	decf	dtoa@i^0,w,c
  1392   000FF4  A0D8               	btfss	status,0,c
  1393   000FF6  EFFF  F007         	goto	u1401
  1394   000FFA  EF01  F008         	goto	u1400
  1395   000FFE                     u1401:
  1396   000FFE  EF1D  F008         	goto	l2291
  1397   001002                     u1400:
  1398   001002  5038               	movf	dtoa@n^0,w,c
  1399   001004  1039               	iorwf	(dtoa@n+1)^0,w,c
  1400   001006  103A               	iorwf	(dtoa@n+2)^0,w,c
  1401   001008  103B               	iorwf	(dtoa@n+3)^0,w,c
  1402   00100A  103C               	iorwf	(dtoa@n+4)^0,w,c
  1403   00100C  103D               	iorwf	(dtoa@n+5)^0,w,c
  1404   00100E  103E               	iorwf	(dtoa@n+6)^0,w,c
  1405   001010  103F               	iorwf	(dtoa@n+7)^0,w,c
  1406   001012  A4D8               	btfss	status,2,c
  1407   001014  EF0E  F008         	goto	u1411
  1408   001018  EF10  F008         	goto	u1410
  1409   00101C                     u1411:
  1410   00101C  EF78  F007         	goto	l2275
  1411   001020                     u1410:
  1412   001020  BE35               	btfsc	(dtoa@p+1)^0,7,c
  1413   001022  EF1D  F008         	goto	u1420
  1414   001026  5035               	movf	(dtoa@p+1)^0,w,c
  1415   001028  E106               	bnz	u1421
  1416   00102A  0434               	decf	dtoa@p^0,w,c
  1417   00102C  B0D8               	btfsc	status,0,c
  1418   00102E  EF1B  F008         	goto	u1421
  1419   001032  EF1D  F008         	goto	u1420
  1420   001036                     u1421:
  1421   001036  EF78  F007         	goto	l2275
  1422   00103A                     u1420:
  1423   00103A                     l2291:
  1424                           
  1425                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1426   00103A  5040               	movf	dtoa@s^0,w,c
  1427   00103C  B4D8               	btfsc	status,2,c
  1428   00103E  EF23  F008         	goto	u1431
  1429   001042  EF25  F008         	goto	u1430
  1430   001046                     u1431:
  1431   001046  EF30  F008         	goto	l2297
  1432   00104A                     u1430:
  1433   00104A                     
  1434                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1435   00104A  0641               	decf	dtoa@i^0,f,c
  1436   00104C  A0D8               	btfss	status,0,c
  1437   00104E  0642               	decf	(dtoa@i+1)^0,f,c
  1438   001050                     
  1439                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1440   001050  0ECE               	movlw	low _dbuf
  1441   001052  2441               	addwf	dtoa@i^0,w,c
  1442   001054  6ED9               	movwf	fsr2l,c
  1443   001056  0E00               	movlw	high _dbuf
  1444   001058  2042               	addwfc	(dtoa@i+1)^0,w,c
  1445   00105A  6EDA               	movwf	fsr2h,c
  1446   00105C  C040  FFDF         	movff	dtoa@s,indf2
  1447   001060                     l2297:
  1448                           
  1449                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1450   001060  C020  F015         	movff	dtoa@fp,pad@fp
  1451   001064  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  1452   001068  0ECE               	movlw	low _dbuf
  1453   00106A  2441               	addwf	dtoa@i^0,w,c
  1454   00106C  6E17               	movwf	pad@buf^0,c
  1455   00106E  0E00               	movlw	high _dbuf
  1456   001070  2042               	addwfc	(dtoa@i+1)^0,w,c
  1457   001072  6E18               	movwf	(pad@buf+1)^0,c
  1458   001074  C036  F019         	movff	dtoa@w,pad@p
  1459   001078  C037  F01A         	movff	dtoa@w+1,pad@p+1
  1460   00107C  EC63  F00B         	call	_pad	;wreg free
  1461   001080  0012               	return		;funcret
  1462   001082                     __end_of_dtoa:
  1463                           	callstack 0
  1464                           
  1465 ;; *************** function _pad *****************
  1466 ;; Defined at:
  1467 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  1470 ;;		 -> sprintf@f(11), 
  1471 ;;  buf             2   22[COMRAM] PTR unsigned char 
  1472 ;;		 -> dbuf(32), 
  1473 ;;  p               2   24[COMRAM] int 
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;  w               2   29[COMRAM] int 
  1476 ;;  i               2   27[COMRAM] int 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1486 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1487 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1488 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1489 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1490 ;;Total ram usage:       11 bytes
  1491 ;; Hardware stack levels used: 1
  1492 ;; Hardware stack levels required when called: 5
  1493 ;; This function calls:
  1494 ;;		_fputc
  1495 ;;		_fputs
  1496 ;; This function is called by:
  1497 ;;		_dtoa
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           	psect	text5
  1502   0016C6                     __ptext5:
  1503                           	callstack 0
  1504   0016C6                     _pad:
  1505                           	callstack 21
  1506   0016C6                     
  1507                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1508   0016C6  BE1A               	btfsc	(pad@p+1)^0,7,c
  1509   0016C8  EF68  F00B         	goto	u1311
  1510   0016CC  EF6A  F00B         	goto	u1310
  1511   0016D0                     u1311:
  1512   0016D0  EF70  F00B         	goto	l2235
  1513   0016D4                     u1310:
  1514   0016D4  C019  F01E         	movff	pad@p,pad@w
  1515   0016D8  C01A  F01F         	movff	pad@p+1,pad@w+1
  1516   0016DC  EF74  F00B         	goto	l1051
  1517   0016E0                     l2235:
  1518   0016E0  0E00               	movlw	0
  1519   0016E2  6E1F               	movwf	(pad@w+1)^0,c
  1520   0016E4  0E00               	movlw	0
  1521   0016E6  6E1E               	movwf	pad@w^0,c
  1522   0016E8                     l1051:
  1523                           
  1524                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1525   0016E8  0E00               	movlw	0
  1526   0016EA  6E1D               	movwf	(pad@i+1)^0,c
  1527   0016EC  0E00               	movlw	0
  1528   0016EE  6E1C               	movwf	pad@i^0,c
  1529                           
  1530                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1531   0016F0  EF86  F00B         	goto	l2241
  1532   0016F4                     l2237:
  1533                           
  1534                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1535   0016F4  0E00               	movlw	0
  1536   0016F6  6E06               	movwf	(fputc@c+1)^0,c
  1537   0016F8  0E20               	movlw	32
  1538   0016FA  6E05               	movwf	fputc@c^0,c
  1539   0016FC  C015  F007         	movff	pad@fp,fputc@fp
  1540   001700  C016  F008         	movff	pad@fp+1,fputc@fp+1
  1541   001704  EC5E  F00A         	call	_fputc	;wreg free
  1542   001708                     
  1543                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1544   001708  4A1C               	infsnz	pad@i^0,f,c
  1545   00170A  2A1D               	incf	(pad@i+1)^0,f,c
  1546   00170C                     l2241:
  1547                           
  1548                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1549   00170C  501E               	movf	pad@w^0,w,c
  1550   00170E  5C1C               	subwf	pad@i^0,w,c
  1551   001710  501D               	movf	(pad@i+1)^0,w,c
  1552   001712  0A80               	xorlw	128
  1553   001714  6E1B               	movwf	??_pad^0,c
  1554   001716  501F               	movf	(pad@w+1)^0,w,c
  1555   001718  0A80               	xorlw	128
  1556   00171A  581B               	subwfb	??_pad^0,w,c
  1557   00171C  A0D8               	btfss	status,0,c
  1558   00171E  EF93  F00B         	goto	u1321
  1559   001722  EF95  F00B         	goto	u1320
  1560   001726                     u1321:
  1561   001726  EF7A  F00B         	goto	l2237
  1562   00172A                     u1320:
  1563   00172A                     
  1564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1565   00172A  C017  F00E         	movff	pad@buf,fputs@s
  1566   00172E  C018  F00F         	movff	pad@buf+1,fputs@s+1
  1567   001732  C015  F010         	movff	pad@fp,fputs@fp
  1568   001736  C016  F011         	movff	pad@fp+1,fputs@fp+1
  1569   00173A  EC91  F00C         	call	_fputs	;wreg free
  1570   00173E  0012               	return		;funcret
  1571   001740                     __end_of_pad:
  1572                           	callstack 0
  1573                           
  1574 ;; *************** function _fputs *****************
  1575 ;; Defined at:
  1576 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;  s               2   13[COMRAM] PTR const unsigned char 
  1579 ;;		 -> dbuf(32), 
  1580 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1581 ;;		 -> sprintf@f(11), 
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;  i               2   18[COMRAM] int 
  1584 ;;  c               1   17[COMRAM] unsigned char 
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  2   13[COMRAM] int 
  1587 ;; Registers used:
  1588 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1594 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1595 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1597 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1598 ;;Total ram usage:        7 bytes
  1599 ;; Hardware stack levels used: 1
  1600 ;; Hardware stack levels required when called: 4
  1601 ;; This function calls:
  1602 ;;		_fputc
  1603 ;; This function is called by:
  1604 ;;		_pad
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           	psect	text6
  1609   001922                     __ptext6:
  1610                           	callstack 0
  1611   001922                     _fputs:
  1612                           	callstack 21
  1613   001922  0E00               	movlw	0
  1614   001924  6E14               	movwf	(fputs@i+1)^0,c
  1615   001926  0E00               	movlw	0
  1616   001928  6E13               	movwf	fputs@i^0,c
  1617   00192A  EFA2  F00C         	goto	l2149
  1618   00192E                     l2145:
  1619   00192E  C012  F005         	movff	fputs@c,fputc@c
  1620   001932  6A06               	clrf	(fputc@c+1)^0,c
  1621   001934  C010  F007         	movff	fputs@fp,fputc@fp
  1622   001938  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  1623   00193C  EC5E  F00A         	call	_fputc	;wreg free
  1624   001940  4A13               	infsnz	fputs@i^0,f,c
  1625   001942  2A14               	incf	(fputs@i+1)^0,f,c
  1626   001944                     l2149:
  1627   001944  5013               	movf	fputs@i^0,w,c
  1628   001946  240E               	addwf	fputs@s^0,w,c
  1629   001948  6ED9               	movwf	fsr2l,c
  1630   00194A  5014               	movf	(fputs@i+1)^0,w,c
  1631   00194C  200F               	addwfc	(fputs@s+1)^0,w,c
  1632   00194E  6EDA               	movwf	fsr2h,c
  1633   001950  50DF               	movf	indf2,w,c
  1634   001952  6E12               	movwf	fputs@c^0,c
  1635   001954  5012               	movf	fputs@c^0,w,c
  1636   001956  A4D8               	btfss	status,2,c
  1637   001958  EFB0  F00C         	goto	u1171
  1638   00195C  EFB2  F00C         	goto	u1170
  1639   001960                     u1171:
  1640   001960  EF97  F00C         	goto	l2145
  1641   001964                     u1170:
  1642   001964  0012               	return		;funcret
  1643   001966                     __end_of_fputs:
  1644                           	callstack 0
  1645                           
  1646 ;; *************** function _fputc *****************
  1647 ;; Defined at:
  1648 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;  c               2    4[COMRAM] int 
  1651 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  1652 ;;		 -> sprintf@f(11), 
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;		None
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  2    4[COMRAM] int 
  1657 ;; Registers used:
  1658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1664 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1666 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1667 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1668 ;;Total ram usage:        9 bytes
  1669 ;; Hardware stack levels used: 1
  1670 ;; Hardware stack levels required when called: 3
  1671 ;; This function calls:
  1672 ;;		_putch
  1673 ;; This function is called by:
  1674 ;;		_pad
  1675 ;;		_vfpfcnvrt
  1676 ;;		_fputs
  1677 ;; This function uses a non-reentrant model
  1678 ;;
  1679                           
  1680                           	psect	text7
  1681   0014BC                     __ptext7:
  1682                           	callstack 0
  1683   0014BC                     _fputc:
  1684                           	callstack 24
  1685   0014BC  5007               	movf	fputc@fp^0,w,c
  1686   0014BE  1008               	iorwf	(fputc@fp+1)^0,w,c
  1687   0014C0  B4D8               	btfsc	status,2,c
  1688   0014C2  EF65  F00A         	goto	u1131
  1689   0014C6  EF67  F00A         	goto	u1130
  1690   0014CA                     u1131:
  1691   0014CA  EF70  F00A         	goto	l2133
  1692   0014CE                     u1130:
  1693   0014CE  5007               	movf	fputc@fp^0,w,c
  1694   0014D0  1008               	iorwf	(fputc@fp+1)^0,w,c
  1695   0014D2  A4D8               	btfss	status,2,c
  1696   0014D4  EF6E  F00A         	goto	u1141
  1697   0014D8  EF70  F00A         	goto	u1140
  1698   0014DC                     u1141:
  1699   0014DC  EF75  F00A         	goto	l2135
  1700   0014E0                     u1140:
  1701   0014E0                     l2133:
  1702   0014E0  5005               	movf	fputc@c^0,w,c
  1703   0014E2  ECE6  F00D         	call	_putch
  1704   0014E6  EFC2  F00A         	goto	l1106
  1705   0014EA                     l2135:
  1706   0014EA  EE20 F009          	lfsr	2,9
  1707   0014EE  5007               	movf	fputc@fp^0,w,c
  1708   0014F0  26D9               	addwf	fsr2l,f,c
  1709   0014F2  5008               	movf	(fputc@fp+1)^0,w,c
  1710   0014F4  22DA               	addwfc	fsr2h,f,c
  1711   0014F6  50DE               	movf	postinc2,w,c
  1712   0014F8  10DE               	iorwf	postinc2,w,c
  1713   0014FA  B4D8               	btfsc	status,2,c
  1714   0014FC  EF82  F00A         	goto	u1151
  1715   001500  EF84  F00A         	goto	u1150
  1716   001504                     u1151:
  1717   001504  EF9F  F00A         	goto	l2139
  1718   001508                     u1150:
  1719   001508  EE20 F009          	lfsr	2,9
  1720   00150C  5007               	movf	fputc@fp^0,w,c
  1721   00150E  26D9               	addwf	fsr2l,f,c
  1722   001510  5008               	movf	(fputc@fp+1)^0,w,c
  1723   001512  22DA               	addwfc	fsr2h,f,c
  1724   001514  EE10 F003          	lfsr	1,3
  1725   001518  5007               	movf	fputc@fp^0,w,c
  1726   00151A  26E1               	addwf	fsr1l,f,c
  1727   00151C  5008               	movf	(fputc@fp+1)^0,w,c
  1728   00151E  22E2               	addwfc	fsr1h,f,c
  1729   001520  50DE               	movf	postinc2,w,c
  1730   001522  5CE6               	subwf	postinc1,w,c
  1731   001524  50E6               	movf	postinc1,w,c
  1732   001526  0A80               	xorlw	128
  1733   001528  6E0D               	movwf	(??_fputc+4)^0,c
  1734   00152A  50DE               	movf	postinc2,w,c
  1735   00152C  0A80               	xorlw	128
  1736   00152E  580D               	subwfb	(??_fputc+4)^0,w,c
  1737   001530  B0D8               	btfsc	status,0,c
  1738   001532  EF9D  F00A         	goto	u1161
  1739   001536  EF9F  F00A         	goto	u1160
  1740   00153A                     u1161:
  1741   00153A  EFC2  F00A         	goto	l1106
  1742   00153E                     u1160:
  1743   00153E                     l2139:
  1744   00153E  EE20 F003          	lfsr	2,3
  1745   001542  5007               	movf	fputc@fp^0,w,c
  1746   001544  26D9               	addwf	fsr2l,f,c
  1747   001546  5008               	movf	(fputc@fp+1)^0,w,c
  1748   001548  22DA               	addwfc	fsr2h,f,c
  1749   00154A  CFDE F009          	movff	postinc2,??_fputc
  1750   00154E  CFDD F00A          	movff	postdec2,??_fputc+1
  1751   001552  C007  FFD9         	movff	fputc@fp,fsr2l
  1752   001556  C008  FFDA         	movff	fputc@fp+1,fsr2h
  1753   00155A  CFDE F00B          	movff	postinc2,??_fputc+2
  1754   00155E  CFDD F00C          	movff	postdec2,??_fputc+3
  1755   001562  5009               	movf	??_fputc^0,w,c
  1756   001564  240B               	addwf	(??_fputc+2)^0,w,c
  1757   001566  6ED9               	movwf	fsr2l,c
  1758   001568  500A               	movf	(??_fputc+1)^0,w,c
  1759   00156A  200C               	addwfc	(??_fputc+3)^0,w,c
  1760   00156C  6EDA               	movwf	fsr2h,c
  1761   00156E  C005  FFDF         	movff	fputc@c,indf2
  1762   001572  EE20 F003          	lfsr	2,3
  1763   001576  5007               	movf	fputc@fp^0,w,c
  1764   001578  26D9               	addwf	fsr2l,f,c
  1765   00157A  5008               	movf	(fputc@fp+1)^0,w,c
  1766   00157C  22DA               	addwfc	fsr2h,f,c
  1767   00157E  2ADE               	incf	postinc2,f,c
  1768   001580  0E00               	movlw	0
  1769   001582  22DD               	addwfc	postdec2,f,c
  1770   001584                     l1106:
  1771   001584  0012               	return		;funcret
  1772   001586                     __end_of_fputc:
  1773                           	callstack 0
  1774                           
  1775 ;; *************** function _putch *****************
  1776 ;; Defined at:
  1777 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;  c               1    wreg     unsigned char 
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;  c               1    0[COMRAM] unsigned char 
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  1    wreg      void 
  1784 ;; Registers used:
  1785 ;;		wreg
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1795 ;;Total ram usage:        0 bytes
  1796 ;; Hardware stack levels used: 1
  1797 ;; Hardware stack levels required when called: 2
  1798 ;; This function calls:
  1799 ;;		Nothing
  1800 ;; This function is called by:
  1801 ;;		_fputc
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804                           
  1805                           	psect	text8
  1806   001BCC                     __ptext8:
  1807                           	callstack 0
  1808   001BCC                     _putch:
  1809                           	callstack 24
  1810   001BCC  0012               	return		;funcret
  1811   001BCE                     __end_of_putch:
  1812                           	callstack 0
  1813                           
  1814 ;; *************** function _abs *****************
  1815 ;; Defined at:
  1816 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;  a               2   22[COMRAM] int 
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;		None
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  2   22[COMRAM] int 
  1823 ;; Registers used:
  1824 ;;		wreg, status,2, status,0
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1830 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1832 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1833 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1834 ;;Total ram usage:        4 bytes
  1835 ;; Hardware stack levels used: 1
  1836 ;; Hardware stack levels required when called: 2
  1837 ;; This function calls:
  1838 ;;		Nothing
  1839 ;; This function is called by:
  1840 ;;		_dtoa
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           	psect	text9
  1845   0019A8                     __ptext9:
  1846                           	callstack 0
  1847   0019A8                     _abs:
  1848                           	callstack 24
  1849   0019A8  BE18               	btfsc	(abs@a+1)^0,7,c
  1850   0019AA  EFE1  F00C         	goto	u1330
  1851   0019AE  5018               	movf	(abs@a+1)^0,w,c
  1852   0019B0  E106               	bnz	u1331
  1853   0019B2  0417               	decf	abs@a^0,w,c
  1854   0019B4  B0D8               	btfsc	status,0,c
  1855   0019B6  EFDF  F00C         	goto	u1331
  1856   0019BA  EFE1  F00C         	goto	u1330
  1857   0019BE                     u1331:
  1858   0019BE  EFEF  F00C         	goto	l1091
  1859   0019C2                     u1330:
  1860   0019C2  C017  F019         	movff	abs@a,??_abs
  1861   0019C6  C018  F01A         	movff	abs@a+1,??_abs+1
  1862   0019CA  1E19               	comf	??_abs^0,f,c
  1863   0019CC  1E1A               	comf	(??_abs+1)^0,f,c
  1864   0019CE  4A19               	infsnz	??_abs^0,f,c
  1865   0019D0  2A1A               	incf	(??_abs+1)^0,f,c
  1866   0019D2  C019  F017         	movff	??_abs,?_abs
  1867   0019D6  C01A  F018         	movff	??_abs+1,?_abs+1
  1868   0019DA  EFF3  F00C         	goto	l1094
  1869   0019DE                     l1091:
  1870   0019DE  C017  F017         	movff	abs@a,?_abs
  1871   0019E2  C018  F018         	movff	abs@a+1,?_abs+1
  1872   0019E6                     l1094:
  1873   0019E6  0012               	return		;funcret
  1874   0019E8                     __end_of_abs:
  1875                           	callstack 0
  1876                           
  1877 ;; *************** function ___aomod *****************
  1878 ;; Defined at:
  1879 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;  dividend        8    4[COMRAM] long long 
  1882 ;;  divisor         8   12[COMRAM] long long 
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;  sign            1   21[COMRAM] unsigned char 
  1885 ;;  counter         1   20[COMRAM] unsigned char 
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  8    4[COMRAM] long long 
  1888 ;; Registers used:
  1889 ;;		wreg, status,2, status,0
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1895 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1896 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1898 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1899 ;;Total ram usage:       18 bytes
  1900 ;; Hardware stack levels used: 1
  1901 ;; Hardware stack levels required when called: 2
  1902 ;; This function calls:
  1903 ;;		Nothing
  1904 ;; This function is called by:
  1905 ;;		_dtoa
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           	psect	text10
  1910   00120A                     __ptext10:
  1911                           	callstack 0
  1912   00120A                     ___aomod:
  1913                           	callstack 24
  1914   00120A  0E00               	movlw	0
  1915   00120C  6E16               	movwf	___aomod@sign^0,c
  1916   00120E  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  1917   001210  EF0E  F009         	goto	u1250
  1918   001214  EF0C  F009         	goto	u1251
  1919   001218                     u1251:
  1920   001218  EF20  F009         	goto	l2203
  1921   00121C                     u1250:
  1922   00121C  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  1923   00121E  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  1924   001220  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  1925   001222  1E09               	comf	(___aomod@dividend+4)^0,f,c
  1926   001224  1E08               	comf	(___aomod@dividend+3)^0,f,c
  1927   001226  1E07               	comf	(___aomod@dividend+2)^0,f,c
  1928   001228  1E06               	comf	(___aomod@dividend+1)^0,f,c
  1929   00122A  6C05               	negf	___aomod@dividend^0,c
  1930   00122C  0E00               	movlw	0
  1931   00122E  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  1932   001230  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  1933   001232  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  1934   001234  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  1935   001236  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  1936   001238  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  1937   00123A  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  1938   00123C  0E01               	movlw	1
  1939   00123E  6E16               	movwf	___aomod@sign^0,c
  1940   001240                     l2203:
  1941   001240  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  1942   001242  EF27  F009         	goto	u1260
  1943   001246  EF25  F009         	goto	u1261
  1944   00124A                     u1261:
  1945   00124A  EF37  F009         	goto	l2207
  1946   00124E                     u1260:
  1947   00124E  1E14               	comf	(___aomod@divisor+7)^0,f,c
  1948   001250  1E13               	comf	(___aomod@divisor+6)^0,f,c
  1949   001252  1E12               	comf	(___aomod@divisor+5)^0,f,c
  1950   001254  1E11               	comf	(___aomod@divisor+4)^0,f,c
  1951   001256  1E10               	comf	(___aomod@divisor+3)^0,f,c
  1952   001258  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  1953   00125A  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  1954   00125C  6C0D               	negf	___aomod@divisor^0,c
  1955   00125E  0E00               	movlw	0
  1956   001260  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  1957   001262  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  1958   001264  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  1959   001266  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  1960   001268  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  1961   00126A  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  1962   00126C  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  1963   00126E                     l2207:
  1964   00126E  500D               	movf	___aomod@divisor^0,w,c
  1965   001270  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  1966   001272  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  1967   001274  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  1968   001276  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  1969   001278  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  1970   00127A  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  1971   00127C  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  1972   00127E  B4D8               	btfsc	status,2,c
  1973   001280  EF44  F009         	goto	u1271
  1974   001284  EF46  F009         	goto	u1270
  1975   001288                     u1271:
  1976   001288  EF8E  F009         	goto	l2223
  1977   00128C                     u1270:
  1978   00128C  0E01               	movlw	1
  1979   00128E  6E15               	movwf	___aomod@counter^0,c
  1980   001290  EF54  F009         	goto	l2213
  1981   001294                     l2211:
  1982   001294  90D8               	bcf	status,0,c
  1983   001296  360D               	rlcf	___aomod@divisor^0,f,c
  1984   001298  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  1985   00129A  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  1986   00129C  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  1987   00129E  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  1988   0012A0  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  1989   0012A2  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  1990   0012A4  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  1991   0012A6  2A15               	incf	___aomod@counter^0,f,c
  1992   0012A8                     l2213:
  1993   0012A8  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  1994   0012AA  EF59  F009         	goto	u1281
  1995   0012AE  EF5B  F009         	goto	u1280
  1996   0012B2                     u1281:
  1997   0012B2  EF4A  F009         	goto	l2211
  1998   0012B6                     u1280:
  1999   0012B6                     l2215:
  2000   0012B6  500D               	movf	___aomod@divisor^0,w,c
  2001   0012B8  5C05               	subwf	___aomod@dividend^0,w,c
  2002   0012BA  500E               	movf	(___aomod@divisor+1)^0,w,c
  2003   0012BC  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  2004   0012BE  500F               	movf	(___aomod@divisor+2)^0,w,c
  2005   0012C0  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  2006   0012C2  5010               	movf	(___aomod@divisor+3)^0,w,c
  2007   0012C4  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  2008   0012C6  5011               	movf	(___aomod@divisor+4)^0,w,c
  2009   0012C8  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  2010   0012CA  5012               	movf	(___aomod@divisor+5)^0,w,c
  2011   0012CC  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  2012   0012CE  5013               	movf	(___aomod@divisor+6)^0,w,c
  2013   0012D0  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  2014   0012D2  5014               	movf	(___aomod@divisor+7)^0,w,c
  2015   0012D4  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  2016   0012D6  A0D8               	btfss	status,0,c
  2017   0012D8  EF70  F009         	goto	u1291
  2018   0012DC  EF72  F009         	goto	u1290
  2019   0012E0                     u1291:
  2020   0012E0  EF82  F009         	goto	l2219
  2021   0012E4                     u1290:
  2022   0012E4  500D               	movf	___aomod@divisor^0,w,c
  2023   0012E6  5E05               	subwf	___aomod@dividend^0,f,c
  2024   0012E8  500E               	movf	(___aomod@divisor+1)^0,w,c
  2025   0012EA  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  2026   0012EC  500F               	movf	(___aomod@divisor+2)^0,w,c
  2027   0012EE  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  2028   0012F0  5010               	movf	(___aomod@divisor+3)^0,w,c
  2029   0012F2  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  2030   0012F4  5011               	movf	(___aomod@divisor+4)^0,w,c
  2031   0012F6  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  2032   0012F8  5012               	movf	(___aomod@divisor+5)^0,w,c
  2033   0012FA  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  2034   0012FC  5013               	movf	(___aomod@divisor+6)^0,w,c
  2035   0012FE  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  2036   001300  5014               	movf	(___aomod@divisor+7)^0,w,c
  2037   001302  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  2038   001304                     l2219:
  2039   001304  90D8               	bcf	status,0,c
  2040   001306  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  2041   001308  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  2042   00130A  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  2043   00130C  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  2044   00130E  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  2045   001310  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  2046   001312  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  2047   001314  320D               	rrcf	___aomod@divisor^0,f,c
  2048   001316  2E15               	decfsz	___aomod@counter^0,f,c
  2049   001318  EF5B  F009         	goto	l2215
  2050   00131C                     l2223:
  2051   00131C  5016               	movf	___aomod@sign^0,w,c
  2052   00131E  B4D8               	btfsc	status,2,c
  2053   001320  EF94  F009         	goto	u1301
  2054   001324  EF96  F009         	goto	u1300
  2055   001328                     u1301:
  2056   001328  EFA6  F009         	goto	l2227
  2057   00132C                     u1300:
  2058   00132C  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2059   00132E  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2060   001330  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2061   001332  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2062   001334  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2063   001336  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2064   001338  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2065   00133A  6C05               	negf	___aomod@dividend^0,c
  2066   00133C  0E00               	movlw	0
  2067   00133E  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2068   001340  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2069   001342  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2070   001344  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2071   001346  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2072   001348  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2073   00134A  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2074   00134C                     l2227:
  2075   00134C  C005  F005         	movff	___aomod@dividend,?___aomod
  2076   001350  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  2077   001354  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  2078   001358  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  2079   00135C  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  2080   001360  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  2081   001364  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  2082   001368  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  2083   00136C  0012               	return		;funcret
  2084   00136E                     __end_of___aomod:
  2085                           	callstack 0
  2086                           
  2087 ;; *************** function ___aodiv *****************
  2088 ;; Defined at:
  2089 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  dividend        8    4[COMRAM] long long 
  2092 ;;  divisor         8   12[COMRAM] long long 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  quotient        8   22[COMRAM] long long 
  2095 ;;  sign            1   21[COMRAM] unsigned char 
  2096 ;;  counter         1   20[COMRAM] unsigned char 
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  8    4[COMRAM] long long 
  2099 ;; Registers used:
  2100 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2106 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2107 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2109 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2110 ;;Total ram usage:       26 bytes
  2111 ;; Hardware stack levels used: 1
  2112 ;; Hardware stack levels required when called: 2
  2113 ;; This function calls:
  2114 ;;		Nothing
  2115 ;; This function is called by:
  2116 ;;		_dtoa
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           	psect	text11
  2121   001082                     __ptext11:
  2122                           	callstack 0
  2123   001082                     ___aodiv:
  2124                           	callstack 24
  2125   001082  0E00               	movlw	0
  2126   001084  6E16               	movwf	___aodiv@sign^0,c
  2127   001086  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  2128   001088  EF4A  F008         	goto	u1180
  2129   00108C  EF48  F008         	goto	u1181
  2130   001090                     u1181:
  2131   001090  EF5C  F008         	goto	l2159
  2132   001094                     u1180:
  2133   001094  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  2134   001096  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  2135   001098  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  2136   00109A  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  2137   00109C  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  2138   00109E  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  2139   0010A0  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  2140   0010A2  6C0D               	negf	___aodiv@divisor^0,c
  2141   0010A4  0E00               	movlw	0
  2142   0010A6  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  2143   0010A8  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  2144   0010AA  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  2145   0010AC  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  2146   0010AE  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  2147   0010B0  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  2148   0010B2  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  2149   0010B4  0E01               	movlw	1
  2150   0010B6  6E16               	movwf	___aodiv@sign^0,c
  2151   0010B8                     l2159:
  2152   0010B8  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  2153   0010BA  EF63  F008         	goto	u1190
  2154   0010BE  EF61  F008         	goto	u1191
  2155   0010C2                     u1191:
  2156   0010C2  EF75  F008         	goto	l2165
  2157   0010C6                     u1190:
  2158   0010C6  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  2159   0010C8  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  2160   0010CA  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  2161   0010CC  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  2162   0010CE  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  2163   0010D0  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  2164   0010D2  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  2165   0010D4  6C05               	negf	___aodiv@dividend^0,c
  2166   0010D6  0E00               	movlw	0
  2167   0010D8  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  2168   0010DA  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  2169   0010DC  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  2170   0010DE  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  2171   0010E0  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  2172   0010E2  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  2173   0010E4  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  2174   0010E6  0E01               	movlw	1
  2175   0010E8  1A16               	xorwf	___aodiv@sign^0,f,c
  2176   0010EA                     l2165:
  2177   0010EA  EE20  F017         	lfsr	2,___aodiv@quotient
  2178   0010EE  0E07               	movlw	7
  2179   0010F0                     u1201:
  2180   0010F0  6ADE               	clrf	postinc2,c
  2181   0010F2  06E8               	decf	wreg,f,c
  2182   0010F4  E2FD               	bc	u1201
  2183   0010F6  500D               	movf	___aodiv@divisor^0,w,c
  2184   0010F8  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  2185   0010FA  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  2186   0010FC  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  2187   0010FE  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  2188   001100  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  2189   001102  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  2190   001104  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  2191   001106  B4D8               	btfsc	status,2,c
  2192   001108  EF88  F008         	goto	u1211
  2193   00110C  EF8A  F008         	goto	u1210
  2194   001110                     u1211:
  2195   001110  EFDC  F008         	goto	l2187
  2196   001114                     u1210:
  2197   001114  0E01               	movlw	1
  2198   001116  6E15               	movwf	___aodiv@counter^0,c
  2199   001118  EF98  F008         	goto	l2173
  2200   00111C                     l2171:
  2201   00111C  90D8               	bcf	status,0,c
  2202   00111E  360D               	rlcf	___aodiv@divisor^0,f,c
  2203   001120  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  2204   001122  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  2205   001124  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  2206   001126  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  2207   001128  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  2208   00112A  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  2209   00112C  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  2210   00112E  2A15               	incf	___aodiv@counter^0,f,c
  2211   001130                     l2173:
  2212   001130  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  2213   001132  EF9D  F008         	goto	u1221
  2214   001136  EF9F  F008         	goto	u1220
  2215   00113A                     u1221:
  2216   00113A  EF8E  F008         	goto	l2171
  2217   00113E                     u1220:
  2218   00113E                     l2175:
  2219   00113E  90D8               	bcf	status,0,c
  2220   001140  3617               	rlcf	___aodiv@quotient^0,f,c
  2221   001142  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  2222   001144  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  2223   001146  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  2224   001148  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  2225   00114A  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  2226   00114C  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  2227   00114E  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  2228   001150  500D               	movf	___aodiv@divisor^0,w,c
  2229   001152  5C05               	subwf	___aodiv@dividend^0,w,c
  2230   001154  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2231   001156  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  2232   001158  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2233   00115A  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  2234   00115C  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2235   00115E  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  2236   001160  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2237   001162  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  2238   001164  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2239   001166  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  2240   001168  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2241   00116A  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  2242   00116C  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2243   00116E  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  2244   001170  A0D8               	btfss	status,0,c
  2245   001172  EFBD  F008         	goto	u1231
  2246   001176  EFBF  F008         	goto	u1230
  2247   00117A                     u1231:
  2248   00117A  EFD0  F008         	goto	l2183
  2249   00117E                     u1230:
  2250   00117E  500D               	movf	___aodiv@divisor^0,w,c
  2251   001180  5E05               	subwf	___aodiv@dividend^0,f,c
  2252   001182  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2253   001184  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  2254   001186  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2255   001188  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  2256   00118A  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2257   00118C  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  2258   00118E  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2259   001190  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  2260   001192  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2261   001194  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  2262   001196  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2263   001198  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  2264   00119A  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2265   00119C  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  2266   00119E  8017               	bsf	___aodiv@quotient^0,0,c
  2267   0011A0                     l2183:
  2268   0011A0  90D8               	bcf	status,0,c
  2269   0011A2  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  2270   0011A4  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  2271   0011A6  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  2272   0011A8  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  2273   0011AA  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  2274   0011AC  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  2275   0011AE  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  2276   0011B0  320D               	rrcf	___aodiv@divisor^0,f,c
  2277   0011B2  2E15               	decfsz	___aodiv@counter^0,f,c
  2278   0011B4  EF9F  F008         	goto	l2175
  2279   0011B8                     l2187:
  2280   0011B8  5016               	movf	___aodiv@sign^0,w,c
  2281   0011BA  B4D8               	btfsc	status,2,c
  2282   0011BC  EFE2  F008         	goto	u1241
  2283   0011C0  EFE4  F008         	goto	u1240
  2284   0011C4                     u1241:
  2285   0011C4  EFF4  F008         	goto	l2191
  2286   0011C8                     u1240:
  2287   0011C8  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  2288   0011CA  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  2289   0011CC  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  2290   0011CE  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  2291   0011D0  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  2292   0011D2  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  2293   0011D4  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  2294   0011D6  6C17               	negf	___aodiv@quotient^0,c
  2295   0011D8  0E00               	movlw	0
  2296   0011DA  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  2297   0011DC  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  2298   0011DE  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  2299   0011E0  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  2300   0011E2  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  2301   0011E4  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  2302   0011E6  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  2303   0011E8                     l2191:
  2304   0011E8  C017  F005         	movff	___aodiv@quotient,?___aodiv
  2305   0011EC  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  2306   0011F0  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  2307   0011F4  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  2308   0011F8  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  2309   0011FC  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  2310   001200  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  2311   001204  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  2312   001208  0012               	return		;funcret
  2313   00120A                     __end_of___aodiv:
  2314                           	callstack 0
  2315                           
  2316 ;; *************** function _sendStringSerial4 *****************
  2317 ;; Defined at:
  2318 ;;		line 38 in file "serial.c"
  2319 ;; Parameters:    Size  Location     Type
  2320 ;;  string          2    5[COMRAM] PTR unsigned char 
  2321 ;;		 -> main@buf(40), 
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;		None
  2324 ;; Return value:  Size  Location     Type
  2325 ;;                  1    wreg      void 
  2326 ;; Registers used:
  2327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2328 ;; Tracked objects:
  2329 ;;		On entry : 0/0
  2330 ;;		On exit  : 0/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2333 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2336 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2337 ;;Total ram usage:        2 bytes
  2338 ;; Hardware stack levels used: 1
  2339 ;; Hardware stack levels required when called: 3
  2340 ;; This function calls:
  2341 ;;		_sendCharSerial4
  2342 ;; This function is called by:
  2343 ;;		_main
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347                           	psect	text12
  2348   001A4E                     __ptext12:
  2349                           	callstack 0
  2350   001A4E                     _sendStringSerial4:
  2351                           	callstack 27
  2352   001A4E                     
  2353                           ;serial.c: 40:     while (*string != 0) {
  2354   001A4E  EF32  F00D         	goto	l1991
  2355   001A52                     l1987:
  2356                           
  2357                           ;serial.c: 41:         sendCharSerial4(*string++);
  2358   001A52  C006  FFD9         	movff	sendStringSerial4@string,fsr2l
  2359   001A56  C007  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2360   001A5A  50DF               	movf	indf2,w,c
  2361   001A5C  ECB3  F00D         	call	_sendCharSerial4
  2362   001A60  4A06               	infsnz	sendStringSerial4@string^0,f,c
  2363   001A62  2A07               	incf	(sendStringSerial4@string+1)^0,f,c
  2364   001A64                     l1991:
  2365                           
  2366                           ;serial.c: 40:     while (*string != 0) {
  2367   001A64  C006  FFD9         	movff	sendStringSerial4@string,fsr2l
  2368   001A68  C007  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2369   001A6C  50DF               	movf	indf2,w,c
  2370   001A6E  A4D8               	btfss	status,2,c
  2371   001A70  EF3C  F00D         	goto	u1031
  2372   001A74  EF3E  F00D         	goto	u1030
  2373   001A78                     u1031:
  2374   001A78  EF29  F00D         	goto	l1987
  2375   001A7C                     u1030:
  2376   001A7C  0012               	return		;funcret
  2377   001A7E                     __end_of_sendStringSerial4:
  2378                           	callstack 0
  2379                           
  2380 ;; *************** function _sendCharSerial4 *****************
  2381 ;; Defined at:
  2382 ;;		line 31 in file "serial.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;  charToSend      1    wreg     unsigned char 
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;  charToSend      1    4[COMRAM] unsigned char 
  2387 ;; Return value:  Size  Location     Type
  2388 ;;                  1    wreg      void 
  2389 ;; Registers used:
  2390 ;;		wreg
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2397 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2399 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2400 ;;Total ram usage:        1 bytes
  2401 ;; Hardware stack levels used: 1
  2402 ;; Hardware stack levels required when called: 2
  2403 ;; This function calls:
  2404 ;;		Nothing
  2405 ;; This function is called by:
  2406 ;;		_sendStringSerial4
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410                           	psect	text13
  2411   001B66                     __ptext13:
  2412                           	callstack 0
  2413   001B66                     _sendCharSerial4:
  2414                           	callstack 27
  2415                           
  2416                           ;incstack = 0
  2417                           ;sendCharSerial4@charToSend stored from wreg
  2418   001B66  6E05               	movwf	sendCharSerial4@charToSend^0,c
  2419   001B68                     l130:
  2420   001B68  010E               	movlb	14	; () banked
  2421   001B6A  A537               	btfss	55,2,b	;volatile
  2422   001B6C  EFBA  F00D         	goto	u1011
  2423   001B70  EFBC  F00D         	goto	u1010
  2424   001B74                     u1011:
  2425   001B74  EFB4  F00D         	goto	l130
  2426   001B78                     u1010:
  2427   001B78                     
  2428                           ; BSR set to: 14
  2429                           ;serial.c: 33:     TX4REG = charToSend;
  2430   001B78  C005  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2431   001B7C                     
  2432                           ; BSR set to: 14
  2433   001B7C  0012               	return		;funcret
  2434   001B7E                     __end_of_sendCharSerial4:
  2435                           	callstack 0
  2436                           
  2437 ;; *************** function _initUSART4 *****************
  2438 ;; Defined at:
  2439 ;;		line 5 in file "serial.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;		None
  2442 ;; Auto vars:     Size  Location     Type
  2443 ;;		None
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  1    wreg      void 
  2446 ;; Registers used:
  2447 ;;		wreg, status,2
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2457 ;;Total ram usage:        0 bytes
  2458 ;; Hardware stack levels used: 1
  2459 ;; Hardware stack levels required when called: 2
  2460 ;; This function calls:
  2461 ;;		Nothing
  2462 ;; This function is called by:
  2463 ;;		_main
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           	psect	text14
  2468   001B26                     __ptext14:
  2469                           	callstack 0
  2470   001B26                     _initUSART4:
  2471                           	callstack 28
  2472   001B26                     
  2473                           ;serial.c: 7:     RC0PPS = 0x12;
  2474   001B26  0E12               	movlw	18
  2475   001B28  010E               	movlb	14	; () banked
  2476   001B2A  6F62               	movwf	98,b	;volatile
  2477                           
  2478                           ;serial.c: 8:     RX4PPS = 0x11;
  2479   001B2C  0E11               	movlw	17
  2480   001B2E  6F15               	movwf	21,b	;volatile
  2481   001B30                     
  2482                           ; BSR set to: 14
  2483                           ;serial.c: 9:     TRISCbits.TRISC1 = 1;
  2484   001B30  8283               	bsf	131,1,c	;volatile
  2485   001B32                     
  2486                           ; BSR set to: 14
  2487                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  2488   001B32  97E9               	bcf	233,3,b	;volatile
  2489   001B34                     
  2490                           ; BSR set to: 14
  2491                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  2492   001B34  95E8               	bcf	232,2,b	;volatile
  2493                           
  2494                           ;serial.c: 14:     SP4BRGL = 51;
  2495   001B36  0E33               	movlw	51
  2496   001B38  6FE5               	movwf	229,b	;volatile
  2497                           
  2498                           ;serial.c: 15:     SP4BRGH = 0;
  2499   001B3A  0E00               	movlw	0
  2500   001B3C  6FE6               	movwf	230,b	;volatile
  2501   001B3E                     
  2502                           ; BSR set to: 14
  2503                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  2504   001B3E  89E7               	bsf	231,4,b	;volatile
  2505   001B40                     
  2506                           ; BSR set to: 14
  2507                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  2508   001B40  8BE8               	bsf	232,5,b	;volatile
  2509   001B42                     
  2510                           ; BSR set to: 14
  2511                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  2512   001B42  8FE7               	bsf	231,7,b	;volatile
  2513   001B44                     
  2514                           ; BSR set to: 14
  2515   001B44  0012               	return		;funcret
  2516   001B46                     __end_of_initUSART4:
  2517                           	callstack 0
  2518                           
  2519 ;; *************** function _initDCmotorsPWM *****************
  2520 ;; Defined at:
  2521 ;;		line 5 in file "dc_motor.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;  PWMperiod       2    4[COMRAM] unsigned int 
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;		None
  2526 ;; Return value:  Size  Location     Type
  2527 ;;                  1    wreg      void 
  2528 ;; Registers used:
  2529 ;;		wreg, status,2
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2535 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2538 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2539 ;;Total ram usage:        2 bytes
  2540 ;; Hardware stack levels used: 1
  2541 ;; Hardware stack levels required when called: 2
  2542 ;; This function calls:
  2543 ;;		Nothing
  2544 ;; This function is called by:
  2545 ;;		_main
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549                           	psect	text15
  2550   001636                     __ptext15:
  2551                           	callstack 0
  2552   001636                     _initDCmotorsPWM:
  2553                           	callstack 28
  2554   001636                     
  2555                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2556   001636  9485               	bcf	133,2,c	;volatile
  2557                           
  2558                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2559   001638  9885               	bcf	133,4,c	;volatile
  2560                           
  2561                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2562   00163A  9E83               	bcf	131,7,c	;volatile
  2563                           
  2564                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2565   00163C  9C87               	bcf	135,6,c	;volatile
  2566                           
  2567                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2568   00163E  947D               	bcf	125,2,c	;volatile
  2569                           
  2570                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2571   001640  987D               	bcf	125,4,c	;volatile
  2572                           
  2573                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2574   001642  9E7B               	bcf	123,7,c	;volatile
  2575                           
  2576                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2577   001644  9C7F               	bcf	127,6,c	;volatile
  2578   001646                     
  2579                           ;dc_motor.c: 18:     RE2PPS=0x05;
  2580   001646  0E05               	movlw	5
  2581   001648  010E               	movlb	14	; () banked
  2582   00164A  6F74               	movwf	116,b	;volatile
  2583                           
  2584                           ;dc_motor.c: 19:     RE4PPS=0x06;
  2585   00164C  0E06               	movlw	6
  2586   00164E  6F76               	movwf	118,b	;volatile
  2587                           
  2588                           ;dc_motor.c: 20:     RC7PPS=0x07;
  2589   001650  0E07               	movlw	7
  2590   001652  6F69               	movwf	105,b	;volatile
  2591                           
  2592                           ;dc_motor.c: 21:     RG6PPS=0x08;
  2593   001654  0E08               	movlw	8
  2594   001656  6F88               	movwf	136,b	;volatile
  2595                           
  2596                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  2597   001658  50BD               	movf	189,w,c	;volatile
  2598   00165A  0B8F               	andlw	-113
  2599   00165C  0940               	iorlw	64
  2600   00165E  6EBD               	movwf	189,c	;volatile
  2601                           
  2602                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  2603   001660  0EE0               	movlw	-32
  2604   001662  16BE               	andwf	190,f,c	;volatile
  2605                           
  2606                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  2607   001664  50BF               	movf	191,w,c	;volatile
  2608   001666  0BF0               	andlw	-16
  2609   001668  0901               	iorlw	1
  2610   00166A  6EBF               	movwf	191,c	;volatile
  2611   00166C                     
  2612                           ; BSR set to: 14
  2613                           ;dc_motor.c: 30:     T2PR=PWMperiod;
  2614   00166C  C005  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  2615   001670                     
  2616                           ; BSR set to: 14
  2617                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  2618   001670  8EBD               	bsf	189,7,c	;volatile
  2619                           
  2620                           ;dc_motor.c: 35:     CCPR1H=0;
  2621   001672  0E00               	movlw	0
  2622   001674  6EAA               	movwf	170,c	;volatile
  2623                           
  2624                           ;dc_motor.c: 36:     CCPR2H=0;
  2625   001676  0E00               	movlw	0
  2626   001678  6EA6               	movwf	166,c	;volatile
  2627                           
  2628                           ;dc_motor.c: 37:     CCPR3H=0;
  2629   00167A  0E00               	movlw	0
  2630   00167C  010F               	movlb	15	; () banked
  2631   00167E  6F25               	movwf	37,b	;volatile
  2632                           
  2633                           ;dc_motor.c: 38:     CCPR4H=0;
  2634   001680  0E00               	movlw	0
  2635   001682  6F21               	movwf	33,b	;volatile
  2636                           
  2637                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  2638   001684  0EFC               	movlw	-4
  2639   001686  16AD               	andwf	173,f,c	;volatile
  2640                           
  2641                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  2642   001688  0EF3               	movlw	-13
  2643   00168A  16AD               	andwf	173,f,c	;volatile
  2644                           
  2645                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  2646   00168C  0ECF               	movlw	-49
  2647   00168E  16AD               	andwf	173,f,c	;volatile
  2648                           
  2649                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  2650   001690  0E3F               	movlw	-193
  2651   001692  16AD               	andwf	173,f,c	;volatile
  2652   001694                     
  2653                           ; BSR set to: 15
  2654                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  2655   001694  88AB               	bsf	171,4,c	;volatile
  2656                           
  2657                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  2658   001696  50AB               	movf	171,w,c	;volatile
  2659   001698  0BF0               	andlw	-16
  2660   00169A  090C               	iorlw	12
  2661   00169C  6EAB               	movwf	171,c	;volatile
  2662   00169E                     
  2663                           ; BSR set to: 15
  2664                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  2665   00169E  8EAB               	bsf	171,7,c	;volatile
  2666   0016A0                     
  2667                           ; BSR set to: 15
  2668                           ;dc_motor.c: 52:     CCP2CONbits.FMT=1;
  2669   0016A0  88A7               	bsf	167,4,c	;volatile
  2670                           
  2671                           ;dc_motor.c: 53:     CCP2CONbits.CCP2MODE=0b1100;
  2672   0016A2  50A7               	movf	167,w,c	;volatile
  2673   0016A4  0BF0               	andlw	-16
  2674   0016A6  090C               	iorlw	12
  2675   0016A8  6EA7               	movwf	167,c	;volatile
  2676   0016AA                     
  2677                           ; BSR set to: 15
  2678                           ;dc_motor.c: 54:     CCP2CONbits.EN=1;
  2679   0016AA  8EA7               	bsf	167,7,c	;volatile
  2680   0016AC                     
  2681                           ; BSR set to: 15
  2682                           ;dc_motor.c: 58:     CCP3CONbits.FMT=1;
  2683   0016AC  8926               	bsf	38,4,b	;volatile
  2684                           
  2685                           ;dc_motor.c: 59:     CCP3CONbits.CCP3MODE=0b1100;
  2686   0016AE  5126               	movf	38,w,b	;volatile
  2687   0016B0  0BF0               	andlw	-16
  2688   0016B2  090C               	iorlw	12
  2689   0016B4  6F26               	movwf	38,b	;volatile
  2690   0016B6                     
  2691                           ; BSR set to: 15
  2692                           ;dc_motor.c: 60:     CCP3CONbits.EN=1;
  2693   0016B6  8F26               	bsf	38,7,b	;volatile
  2694   0016B8                     
  2695                           ; BSR set to: 15
  2696                           ;dc_motor.c: 63:     CCP4CONbits.FMT=1;
  2697   0016B8  8922               	bsf	34,4,b	;volatile
  2698                           
  2699                           ;dc_motor.c: 64:     CCP4CONbits.CCP4MODE=0b1100;
  2700   0016BA  5122               	movf	34,w,b	;volatile
  2701   0016BC  0BF0               	andlw	-16
  2702   0016BE  090C               	iorlw	12
  2703   0016C0  6F22               	movwf	34,b	;volatile
  2704   0016C2                     
  2705                           ; BSR set to: 15
  2706                           ;dc_motor.c: 65:     CCP4CONbits.EN=1;
  2707   0016C2  8F22               	bsf	34,7,b	;volatile
  2708   0016C4                     
  2709                           ; BSR set to: 15
  2710   0016C4  0012               	return		;funcret
  2711   0016C6                     __end_of_initDCmotorsPWM:
  2712                           	callstack 0
  2713                           
  2714 ;; *************** function _color_read_Red *****************
  2715 ;; Defined at:
  2716 ;;		line 29 in file "color.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;		None
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;  tmp             2   13[COMRAM] unsigned int 
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  2    8[COMRAM] unsigned int 
  2723 ;; Registers used:
  2724 ;;		wreg, status,2, status,0, cstack
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2730 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2731 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2732 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2733 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2734 ;;Total ram usage:        7 bytes
  2735 ;; Hardware stack levels used: 1
  2736 ;; Hardware stack levels required when called: 4
  2737 ;; This function calls:
  2738 ;;		_I2C_2_Master_Read
  2739 ;;		_I2C_2_Master_RepStart
  2740 ;;		_I2C_2_Master_Start
  2741 ;;		_I2C_2_Master_Stop
  2742 ;;		_I2C_2_Master_Write
  2743 ;; This function is called by:
  2744 ;;		_main
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           	psect	text16
  2749   0017E2                     __ptext16:
  2750                           	callstack 0
  2751   0017E2                     _color_read_Red:
  2752                           	callstack 26
  2753   0017E2                     
  2754                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  2755   0017E2  ECE1  F00D         	call	_I2C_2_Master_Start	;wreg free
  2756                           
  2757                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  2758   0017E6  0E52               	movlw	82
  2759   0017E8  ECCB  F00D         	call	_I2C_2_Master_Write
  2760                           
  2761                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  2762   0017EC  0EB6               	movlw	182
  2763   0017EE  ECCB  F00D         	call	_I2C_2_Master_Write
  2764                           
  2765                           ;color.c: 35:  I2C_2_Master_RepStart();
  2766   0017F2  ECD7  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2767                           
  2768                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  2769   0017F6  0E53               	movlw	83
  2770   0017F8  ECCB  F00D         	call	_I2C_2_Master_Write
  2771                           
  2772                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  2773   0017FC  0E01               	movlw	1
  2774   0017FE  ECB3  F00C         	call	_I2C_2_Master_Read
  2775   001802  6E0B               	movwf	??_color_read_Red^0,c
  2776   001804  500B               	movf	??_color_read_Red^0,w,c
  2777   001806  6E0E               	movwf	color_read_Red@tmp^0,c
  2778   001808  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
  2779                           
  2780                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2781   00180A  0E00               	movlw	0
  2782   00180C  ECB3  F00C         	call	_I2C_2_Master_Read
  2783   001810  6E0B               	movwf	??_color_read_Red^0,c
  2784   001812  500B               	movf	??_color_read_Red^0,w,c
  2785   001814  6E0D               	movwf	(??_color_read_Red+2)^0,c
  2786   001816  6A0C               	clrf	(??_color_read_Red+1)^0,c
  2787   001818  500E               	movf	color_read_Red@tmp^0,w,c
  2788   00181A  100C               	iorwf	(??_color_read_Red+1)^0,w,c
  2789   00181C  6E0E               	movwf	color_read_Red@tmp^0,c
  2790   00181E  500F               	movf	(color_read_Red@tmp+1)^0,w,c
  2791   001820  100D               	iorwf	(??_color_read_Red+2)^0,w,c
  2792   001822  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
  2793                           
  2794                           ;color.c: 39:  I2C_2_Master_Stop();
  2795   001824  ECDC  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2796   001828                     
  2797                           ;color.c: 40:  return tmp;
  2798   001828  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
  2799   00182C  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2800   001830  0012               	return		;funcret
  2801   001832                     __end_of_color_read_Red:
  2802                           	callstack 0
  2803                           
  2804 ;; *************** function _color_read_Green *****************
  2805 ;; Defined at:
  2806 ;;		line 58 in file "color.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;		None
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;  tmp             2   13[COMRAM] unsigned int 
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  2    8[COMRAM] unsigned int 
  2813 ;; Registers used:
  2814 ;;		wreg, status,2, status,0, cstack
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2820 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2821 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2822 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2823 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2824 ;;Total ram usage:        7 bytes
  2825 ;; Hardware stack levels used: 1
  2826 ;; Hardware stack levels required when called: 4
  2827 ;; This function calls:
  2828 ;;		_I2C_2_Master_Read
  2829 ;;		_I2C_2_Master_RepStart
  2830 ;;		_I2C_2_Master_Start
  2831 ;;		_I2C_2_Master_Stop
  2832 ;;		_I2C_2_Master_Write
  2833 ;; This function is called by:
  2834 ;;		_main
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           	psect	text17
  2839   001832                     __ptext17:
  2840                           	callstack 0
  2841   001832                     _color_read_Green:
  2842                           	callstack 26
  2843   001832                     
  2844                           ;color.c: 60:  unsigned int tmp;;color.c: 61:  I2C_2_Master_Start();
  2845   001832  ECE1  F00D         	call	_I2C_2_Master_Start	;wreg free
  2846                           
  2847                           ;color.c: 62:  I2C_2_Master_Write(0x52 | 0x00);
  2848   001836  0E52               	movlw	82
  2849   001838  ECCB  F00D         	call	_I2C_2_Master_Write
  2850                           
  2851                           ;color.c: 64:  I2C_2_Master_Write(0xA0 | 0x18);
  2852   00183C  0EB8               	movlw	184
  2853   00183E  ECCB  F00D         	call	_I2C_2_Master_Write
  2854                           
  2855                           ;color.c: 65:  I2C_2_Master_RepStart();
  2856   001842  ECD7  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2857                           
  2858                           ;color.c: 66:  I2C_2_Master_Write(0x52 | 0x01);
  2859   001846  0E53               	movlw	83
  2860   001848  ECCB  F00D         	call	_I2C_2_Master_Write
  2861                           
  2862                           ;color.c: 67:  tmp=I2C_2_Master_Read(1);
  2863   00184C  0E01               	movlw	1
  2864   00184E  ECB3  F00C         	call	_I2C_2_Master_Read
  2865   001852  6E0B               	movwf	??_color_read_Green^0,c
  2866   001854  500B               	movf	??_color_read_Green^0,w,c
  2867   001856  6E0E               	movwf	color_read_Green@tmp^0,c
  2868   001858  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
  2869                           
  2870                           ;color.c: 68:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2871   00185A  0E00               	movlw	0
  2872   00185C  ECB3  F00C         	call	_I2C_2_Master_Read
  2873   001860  6E0B               	movwf	??_color_read_Green^0,c
  2874   001862  500B               	movf	??_color_read_Green^0,w,c
  2875   001864  6E0D               	movwf	(??_color_read_Green+2)^0,c
  2876   001866  6A0C               	clrf	(??_color_read_Green+1)^0,c
  2877   001868  500E               	movf	color_read_Green@tmp^0,w,c
  2878   00186A  100C               	iorwf	(??_color_read_Green+1)^0,w,c
  2879   00186C  6E0E               	movwf	color_read_Green@tmp^0,c
  2880   00186E  500F               	movf	(color_read_Green@tmp+1)^0,w,c
  2881   001870  100D               	iorwf	(??_color_read_Green+2)^0,w,c
  2882   001872  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
  2883                           
  2884                           ;color.c: 69:  I2C_2_Master_Stop();
  2885   001874  ECDC  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2886   001878                     
  2887                           ;color.c: 70:  return tmp;
  2888   001878  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
  2889   00187C  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2890   001880  0012               	return		;funcret
  2891   001882                     __end_of_color_read_Green:
  2892                           	callstack 0
  2893                           
  2894 ;; *************** function _color_read_Clear *****************
  2895 ;; Defined at:
  2896 ;;		line 73 in file "color.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;		None
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;  tmp             2   13[COMRAM] unsigned int 
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  2    8[COMRAM] unsigned int 
  2903 ;; Registers used:
  2904 ;;		wreg, status,2, status,0, cstack
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2910 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2911 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2912 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2913 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2914 ;;Total ram usage:        7 bytes
  2915 ;; Hardware stack levels used: 1
  2916 ;; Hardware stack levels required when called: 4
  2917 ;; This function calls:
  2918 ;;		_I2C_2_Master_Read
  2919 ;;		_I2C_2_Master_RepStart
  2920 ;;		_I2C_2_Master_Start
  2921 ;;		_I2C_2_Master_Stop
  2922 ;;		_I2C_2_Master_Write
  2923 ;; This function is called by:
  2924 ;;		_main
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           	psect	text18
  2929   001882                     __ptext18:
  2930                           	callstack 0
  2931   001882                     _color_read_Clear:
  2932                           	callstack 26
  2933   001882                     
  2934                           ;color.c: 75:  unsigned int tmp;;color.c: 76:  I2C_2_Master_Start();
  2935   001882  ECE1  F00D         	call	_I2C_2_Master_Start	;wreg free
  2936                           
  2937                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x00);
  2938   001886  0E52               	movlw	82
  2939   001888  ECCB  F00D         	call	_I2C_2_Master_Write
  2940                           
  2941                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x14);
  2942   00188C  0EB4               	movlw	180
  2943   00188E  ECCB  F00D         	call	_I2C_2_Master_Write
  2944                           
  2945                           ;color.c: 80:  I2C_2_Master_RepStart();
  2946   001892  ECD7  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2947                           
  2948                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  2949   001896  0E53               	movlw	83
  2950   001898  ECCB  F00D         	call	_I2C_2_Master_Write
  2951                           
  2952                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  2953   00189C  0E01               	movlw	1
  2954   00189E  ECB3  F00C         	call	_I2C_2_Master_Read
  2955   0018A2  6E0B               	movwf	??_color_read_Clear^0,c
  2956   0018A4  500B               	movf	??_color_read_Clear^0,w,c
  2957   0018A6  6E0E               	movwf	color_read_Clear@tmp^0,c
  2958   0018A8  6A0F               	clrf	(color_read_Clear@tmp+1)^0,c
  2959                           
  2960                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2961   0018AA  0E00               	movlw	0
  2962   0018AC  ECB3  F00C         	call	_I2C_2_Master_Read
  2963   0018B0  6E0B               	movwf	??_color_read_Clear^0,c
  2964   0018B2  500B               	movf	??_color_read_Clear^0,w,c
  2965   0018B4  6E0D               	movwf	(??_color_read_Clear+2)^0,c
  2966   0018B6  6A0C               	clrf	(??_color_read_Clear+1)^0,c
  2967   0018B8  500E               	movf	color_read_Clear@tmp^0,w,c
  2968   0018BA  100C               	iorwf	(??_color_read_Clear+1)^0,w,c
  2969   0018BC  6E0E               	movwf	color_read_Clear@tmp^0,c
  2970   0018BE  500F               	movf	(color_read_Clear@tmp+1)^0,w,c
  2971   0018C0  100D               	iorwf	(??_color_read_Clear+2)^0,w,c
  2972   0018C2  6E0F               	movwf	(color_read_Clear@tmp+1)^0,c
  2973                           
  2974                           ;color.c: 84:  I2C_2_Master_Stop();
  2975   0018C4  ECDC  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2976   0018C8                     
  2977                           ;color.c: 85:  return tmp;
  2978   0018C8  C00E  F009         	movff	color_read_Clear@tmp,?_color_read_Clear
  2979   0018CC  C00F  F00A         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2980   0018D0  0012               	return		;funcret
  2981   0018D2                     __end_of_color_read_Clear:
  2982                           	callstack 0
  2983                           
  2984 ;; *************** function _color_read_Blue *****************
  2985 ;; Defined at:
  2986 ;;		line 43 in file "color.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;		None
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;  tmp             2   13[COMRAM] unsigned int 
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  2    8[COMRAM] unsigned int 
  2993 ;; Registers used:
  2994 ;;		wreg, status,2, status,0, cstack
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3000 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3001 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3002 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3003 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3004 ;;Total ram usage:        7 bytes
  3005 ;; Hardware stack levels used: 1
  3006 ;; Hardware stack levels required when called: 4
  3007 ;; This function calls:
  3008 ;;		_I2C_2_Master_Read
  3009 ;;		_I2C_2_Master_RepStart
  3010 ;;		_I2C_2_Master_Start
  3011 ;;		_I2C_2_Master_Stop
  3012 ;;		_I2C_2_Master_Write
  3013 ;; This function is called by:
  3014 ;;		_main
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           	psect	text19
  3019   0018D2                     __ptext19:
  3020                           	callstack 0
  3021   0018D2                     _color_read_Blue:
  3022                           	callstack 26
  3023   0018D2                     
  3024                           ;color.c: 45:  unsigned int tmp;;color.c: 46:  I2C_2_Master_Start();
  3025   0018D2  ECE1  F00D         	call	_I2C_2_Master_Start	;wreg free
  3026                           
  3027                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x00);
  3028   0018D6  0E52               	movlw	82
  3029   0018D8  ECCB  F00D         	call	_I2C_2_Master_Write
  3030                           
  3031                           ;color.c: 49:  I2C_2_Master_Write(0xA0 | 0x1A);
  3032   0018DC  0EBA               	movlw	186
  3033   0018DE  ECCB  F00D         	call	_I2C_2_Master_Write
  3034                           
  3035                           ;color.c: 50:  I2C_2_Master_RepStart();
  3036   0018E2  ECD7  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  3037                           
  3038                           ;color.c: 51:  I2C_2_Master_Write(0x52 | 0x01);
  3039   0018E6  0E53               	movlw	83
  3040   0018E8  ECCB  F00D         	call	_I2C_2_Master_Write
  3041                           
  3042                           ;color.c: 52:  tmp=I2C_2_Master_Read(1);
  3043   0018EC  0E01               	movlw	1
  3044   0018EE  ECB3  F00C         	call	_I2C_2_Master_Read
  3045   0018F2  6E0B               	movwf	??_color_read_Blue^0,c
  3046   0018F4  500B               	movf	??_color_read_Blue^0,w,c
  3047   0018F6  6E0E               	movwf	color_read_Blue@tmp^0,c
  3048   0018F8  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
  3049                           
  3050                           ;color.c: 53:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3051   0018FA  0E00               	movlw	0
  3052   0018FC  ECB3  F00C         	call	_I2C_2_Master_Read
  3053   001900  6E0B               	movwf	??_color_read_Blue^0,c
  3054   001902  500B               	movf	??_color_read_Blue^0,w,c
  3055   001904  6E0D               	movwf	(??_color_read_Blue+2)^0,c
  3056   001906  6A0C               	clrf	(??_color_read_Blue+1)^0,c
  3057   001908  500E               	movf	color_read_Blue@tmp^0,w,c
  3058   00190A  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
  3059   00190C  6E0E               	movwf	color_read_Blue@tmp^0,c
  3060   00190E  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
  3061   001910  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
  3062   001912  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
  3063                           
  3064                           ;color.c: 54:  I2C_2_Master_Stop();
  3065   001914  ECDC  F00D         	call	_I2C_2_Master_Stop	;wreg free
  3066   001918                     
  3067                           ;color.c: 55:  return tmp;
  3068   001918  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
  3069   00191C  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3070   001920  0012               	return		;funcret
  3071   001922                     __end_of_color_read_Blue:
  3072                           	callstack 0
  3073                           
  3074 ;; *************** function _I2C_2_Master_RepStart *****************
  3075 ;; Defined at:
  3076 ;;		line 33 in file "i2c.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;		None
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;		None
  3081 ;; Return value:  Size  Location     Type
  3082 ;;                  1    wreg      void 
  3083 ;; Registers used:
  3084 ;;		wreg, status,2, status,0, cstack
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3094 ;;Total ram usage:        0 bytes
  3095 ;; Hardware stack levels used: 1
  3096 ;; Hardware stack levels required when called: 3
  3097 ;; This function calls:
  3098 ;;		_I2C_2_Master_Idle
  3099 ;; This function is called by:
  3100 ;;		_color_read_Red
  3101 ;;		_color_read_Blue
  3102 ;;		_color_read_Green
  3103 ;;		_color_read_Clear
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107                           	psect	text20
  3108   001BAE                     __ptext20:
  3109                           	callstack 0
  3110   001BAE                     _I2C_2_Master_RepStart:
  3111                           	callstack 26
  3112   001BAE                     
  3113                           ;i2c.c: 35:   I2C_2_Master_Idle();
  3114   001BAE  EC7F  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3115   001BB2                     
  3116                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3117   001BB2  010E               	movlb	14	; () banked
  3118   001BB4  83DA               	bsf	218,1,b	;volatile
  3119   001BB6                     
  3120                           ; BSR set to: 14
  3121   001BB6  0012               	return		;funcret
  3122   001BB8                     __end_of_I2C_2_Master_RepStart:
  3123                           	callstack 0
  3124                           
  3125 ;; *************** function _I2C_2_Master_Read *****************
  3126 ;; Defined at:
  3127 ;;		line 51 in file "i2c.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;  ack             1    wreg     unsigned char 
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;  ack             1    6[COMRAM] unsigned char 
  3132 ;;  tmp             1    7[COMRAM] unsigned char 
  3133 ;; Return value:  Size  Location     Type
  3134 ;;                  1    wreg      unsigned char 
  3135 ;; Registers used:
  3136 ;;		wreg, status,2, status,0, cstack
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3143 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3144 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3145 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3146 ;;Total ram usage:        3 bytes
  3147 ;; Hardware stack levels used: 1
  3148 ;; Hardware stack levels required when called: 3
  3149 ;; This function calls:
  3150 ;;		_I2C_2_Master_Idle
  3151 ;; This function is called by:
  3152 ;;		_color_read_Red
  3153 ;;		_color_read_Blue
  3154 ;;		_color_read_Green
  3155 ;;		_color_read_Clear
  3156 ;; This function uses a non-reentrant model
  3157 ;;
  3158                           
  3159                           	psect	text21
  3160   001966                     __ptext21:
  3161                           	callstack 0
  3162   001966                     _I2C_2_Master_Read:
  3163                           	callstack 26
  3164                           
  3165                           ; BSR set to: 14
  3166                           ;incstack = 0
  3167                           ;I2C_2_Master_Read@ack stored from wreg
  3168   001966  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  3169   001968                     
  3170                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  3171   001968  EC7F  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3172   00196C                     
  3173                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3174   00196C  010E               	movlb	14	; () banked
  3175   00196E  87DA               	bsf	218,3,b	;volatile
  3176                           
  3177                           ;i2c.c: 56:   I2C_2_Master_Idle();
  3178   001970  EC7F  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3179   001974                     
  3180                           ;i2c.c: 57:   tmp = SSP2BUF;
  3181   001974  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3182                           
  3183                           ;i2c.c: 58:   I2C_2_Master_Idle();
  3184   001978  EC7F  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3185   00197C                     
  3186                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3187   00197C  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  3188   00197E  B4D8               	btfsc	status,2,c
  3189   001980  EFC4  F00C         	goto	u991
  3190   001984  EFC8  F00C         	goto	u990
  3191   001988                     u991:
  3192   001988  6A06               	clrf	??_I2C_2_Master_Read^0,c
  3193   00198A  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  3194   00198C  EFC9  F00C         	goto	u1008
  3195   001990                     u990:
  3196   001990  6A06               	clrf	??_I2C_2_Master_Read^0,c
  3197   001992                     u1008:
  3198   001992  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  3199   001994  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  3200   001996  010E               	movlb	14	; () banked
  3201   001998  51DA               	movf	218,w,b	;volatile
  3202   00199A  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  3203   00199C  0BDF               	andlw	-33
  3204   00199E  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  3205   0019A0  6FDA               	movwf	218,b	;volatile
  3206   0019A2                     
  3207                           ; BSR set to: 14
  3208                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3209   0019A2  89DA               	bsf	218,4,b	;volatile
  3210   0019A4                     
  3211                           ; BSR set to: 14
  3212                           ;i2c.c: 61:   return tmp;
  3213   0019A4  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  3214   0019A6                     
  3215                           ; BSR set to: 14
  3216   0019A6  0012               	return		;funcret
  3217   0019A8                     __end_of_I2C_2_Master_Read:
  3218                           	callstack 0
  3219                           
  3220 ;; *************** function _color_click_init *****************
  3221 ;; Defined at:
  3222 ;;		line 5 in file "color.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;		None
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;		None
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  1    wreg      void 
  3229 ;; Registers used:
  3230 ;;		wreg, status,2, status,0, cstack
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3238 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3239 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3240 ;;Total ram usage:        1 bytes
  3241 ;; Hardware stack levels used: 1
  3242 ;; Hardware stack levels required when called: 5
  3243 ;; This function calls:
  3244 ;;		_I2C_2_Master_Init
  3245 ;;		_color_writetoaddr
  3246 ;; This function is called by:
  3247 ;;		_main
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           	psect	text22
  3252   0019E8                     __ptext22:
  3253                           	callstack 0
  3254   0019E8                     _color_click_init:
  3255                           	callstack 25
  3256   0019E8                     
  3257                           ;color.c: 8:     I2C_2_Master_Init();
  3258   0019E8  EC55  F00D         	call	_I2C_2_Master_Init	;wreg free
  3259   0019EC                     
  3260                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  3261   0019EC  0E01               	movlw	1
  3262   0019EE  6E07               	movwf	color_writetoaddr@value^0,c
  3263   0019F0  0E00               	movlw	0
  3264   0019F2  ECA3  F00D         	call	_color_writetoaddr
  3265   0019F6                     
  3266                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3267   0019F6  0E3F               	movlw	63
  3268   0019F8  6E09               	movwf	??_color_click_init^0,c
  3269   0019FA  0E55               	movlw	85
  3270   0019FC                     u1487:
  3271   0019FC  2EE8               	decfsz	wreg,f,c
  3272   0019FE  D7FE               	bra	u1487
  3273   001A00  2E09               	decfsz	??_color_click_init^0,f,c
  3274   001A02  D7FC               	bra	u1487
  3275   001A04  F000               	nop	
  3276   001A06                     
  3277                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  3278   001A06  0E03               	movlw	3
  3279   001A08  6E07               	movwf	color_writetoaddr@value^0,c
  3280   001A0A  0E00               	movlw	0
  3281   001A0C  ECA3  F00D         	call	_color_writetoaddr
  3282   001A10                     
  3283                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3284   001A10  0ED5               	movlw	213
  3285   001A12  6E07               	movwf	color_writetoaddr@value^0,c
  3286   001A14  0E01               	movlw	1
  3287   001A16  ECA3  F00D         	call	_color_writetoaddr
  3288   001A1A  0012               	return		;funcret
  3289   001A1C                     __end_of_color_click_init:
  3290                           	callstack 0
  3291                           
  3292 ;; *************** function _color_writetoaddr *****************
  3293 ;; Defined at:
  3294 ;;		line 21 in file "color.c"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;  address         1    wreg     unsigned char 
  3297 ;;  value           1    6[COMRAM] unsigned char 
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;  address         1    7[COMRAM] unsigned char 
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  1    wreg      void 
  3302 ;; Registers used:
  3303 ;;		wreg, status,2, status,0, cstack
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3309 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3310 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3312 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3313 ;;Total ram usage:        2 bytes
  3314 ;; Hardware stack levels used: 1
  3315 ;; Hardware stack levels required when called: 4
  3316 ;; This function calls:
  3317 ;;		_I2C_2_Master_Start
  3318 ;;		_I2C_2_Master_Stop
  3319 ;;		_I2C_2_Master_Write
  3320 ;; This function is called by:
  3321 ;;		_color_click_init
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           	psect	text23
  3326   001B46                     __ptext23:
  3327                           	callstack 0
  3328   001B46                     _color_writetoaddr:
  3329                           	callstack 25
  3330                           
  3331                           ;incstack = 0
  3332                           ;color_writetoaddr@address stored from wreg
  3333   001B46  6E08               	movwf	color_writetoaddr@address^0,c
  3334   001B48                     
  3335                           ;color.c: 22:     I2C_2_Master_Start();
  3336   001B48  ECE1  F00D         	call	_I2C_2_Master_Start	;wreg free
  3337                           
  3338                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  3339   001B4C  0E52               	movlw	82
  3340   001B4E  ECCB  F00D         	call	_I2C_2_Master_Write
  3341                           
  3342                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  3343   001B52  5008               	movf	color_writetoaddr@address^0,w,c
  3344   001B54  0980               	iorlw	128
  3345   001B56  ECCB  F00D         	call	_I2C_2_Master_Write
  3346                           
  3347                           ;color.c: 25:     I2C_2_Master_Write(value);
  3348   001B5A  5007               	movf	color_writetoaddr@value^0,w,c
  3349   001B5C  ECCB  F00D         	call	_I2C_2_Master_Write
  3350                           
  3351                           ;color.c: 26:     I2C_2_Master_Stop();
  3352   001B60  ECDC  F00D         	call	_I2C_2_Master_Stop	;wreg free
  3353   001B64  0012               	return		;funcret
  3354   001B66                     __end_of_color_writetoaddr:
  3355                           	callstack 0
  3356                           
  3357 ;; *************** function _I2C_2_Master_Write *****************
  3358 ;; Defined at:
  3359 ;;		line 45 in file "i2c.c"
  3360 ;; Parameters:    Size  Location     Type
  3361 ;;  data_byte       1    wreg     unsigned char 
  3362 ;; Auto vars:     Size  Location     Type
  3363 ;;  data_byte       1    5[COMRAM] unsigned char 
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  1    wreg      void 
  3366 ;; Registers used:
  3367 ;;		wreg, status,2, status,0, cstack
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3374 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3376 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3377 ;;Total ram usage:        1 bytes
  3378 ;; Hardware stack levels used: 1
  3379 ;; Hardware stack levels required when called: 3
  3380 ;; This function calls:
  3381 ;;		_I2C_2_Master_Idle
  3382 ;; This function is called by:
  3383 ;;		_color_writetoaddr
  3384 ;;		_color_read_Red
  3385 ;;		_color_read_Blue
  3386 ;;		_color_read_Green
  3387 ;;		_color_read_Clear
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           	psect	text24
  3392   001B96                     __ptext24:
  3393                           	callstack 0
  3394   001B96                     _I2C_2_Master_Write:
  3395                           	callstack 26
  3396                           
  3397                           ;incstack = 0
  3398                           ;I2C_2_Master_Write@data_byte stored from wreg
  3399   001B96  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  3400   001B98                     
  3401                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3402   001B98  EC7F  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3403   001B9C                     
  3404                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3405   001B9C  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3406   001BA0  0012               	return		;funcret
  3407   001BA2                     __end_of_I2C_2_Master_Write:
  3408                           	callstack 0
  3409                           
  3410 ;; *************** function _I2C_2_Master_Stop *****************
  3411 ;; Defined at:
  3412 ;;		line 39 in file "i2c.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;		None
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;		None
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      void 
  3419 ;; Registers used:
  3420 ;;		wreg, status,2, status,0, cstack
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3430 ;;Total ram usage:        0 bytes
  3431 ;; Hardware stack levels used: 1
  3432 ;; Hardware stack levels required when called: 3
  3433 ;; This function calls:
  3434 ;;		_I2C_2_Master_Idle
  3435 ;; This function is called by:
  3436 ;;		_color_writetoaddr
  3437 ;;		_color_read_Red
  3438 ;;		_color_read_Blue
  3439 ;;		_color_read_Green
  3440 ;;		_color_read_Clear
  3441 ;; This function uses a non-reentrant model
  3442 ;;
  3443                           
  3444                           	psect	text25
  3445   001BB8                     __ptext25:
  3446                           	callstack 0
  3447   001BB8                     _I2C_2_Master_Stop:
  3448                           	callstack 26
  3449   001BB8                     
  3450                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3451   001BB8  EC7F  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3452   001BBC                     
  3453                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3454   001BBC  010E               	movlb	14	; () banked
  3455   001BBE  85DA               	bsf	218,2,b	;volatile
  3456   001BC0                     
  3457                           ; BSR set to: 14
  3458   001BC0  0012               	return		;funcret
  3459   001BC2                     __end_of_I2C_2_Master_Stop:
  3460                           	callstack 0
  3461                           
  3462 ;; *************** function _I2C_2_Master_Start *****************
  3463 ;; Defined at:
  3464 ;;		line 27 in file "i2c.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;		None
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;		None
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      void 
  3471 ;; Registers used:
  3472 ;;		wreg, status,2, status,0, cstack
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3482 ;;Total ram usage:        0 bytes
  3483 ;; Hardware stack levels used: 1
  3484 ;; Hardware stack levels required when called: 3
  3485 ;; This function calls:
  3486 ;;		_I2C_2_Master_Idle
  3487 ;; This function is called by:
  3488 ;;		_color_writetoaddr
  3489 ;;		_color_read_Red
  3490 ;;		_color_read_Blue
  3491 ;;		_color_read_Green
  3492 ;;		_color_read_Clear
  3493 ;; This function uses a non-reentrant model
  3494 ;;
  3495                           
  3496                           	psect	text26
  3497   001BC2                     __ptext26:
  3498                           	callstack 0
  3499   001BC2                     _I2C_2_Master_Start:
  3500                           	callstack 26
  3501   001BC2                     
  3502                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3503   001BC2  EC7F  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3504   001BC6                     
  3505                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3506   001BC6  010E               	movlb	14	; () banked
  3507   001BC8  81DA               	bsf	218,0,b	;volatile
  3508   001BCA                     
  3509                           ; BSR set to: 14
  3510   001BCA  0012               	return		;funcret
  3511   001BCC                     __end_of_I2C_2_Master_Start:
  3512                           	callstack 0
  3513                           
  3514 ;; *************** function _I2C_2_Master_Idle *****************
  3515 ;; Defined at:
  3516 ;;		line 22 in file "i2c.c"
  3517 ;; Parameters:    Size  Location     Type
  3518 ;;		None
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;		None
  3521 ;; Return value:  Size  Location     Type
  3522 ;;                  1    wreg      void 
  3523 ;; Registers used:
  3524 ;;		wreg, status,2, status,0
  3525 ;; Tracked objects:
  3526 ;;		On entry : 0/0
  3527 ;;		On exit  : 0/0
  3528 ;;		Unchanged: 0/0
  3529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3532 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3533 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3534 ;;Total ram usage:        1 bytes
  3535 ;; Hardware stack levels used: 1
  3536 ;; Hardware stack levels required when called: 2
  3537 ;; This function calls:
  3538 ;;		Nothing
  3539 ;; This function is called by:
  3540 ;;		_I2C_2_Master_Start
  3541 ;;		_I2C_2_Master_RepStart
  3542 ;;		_I2C_2_Master_Stop
  3543 ;;		_I2C_2_Master_Write
  3544 ;;		_I2C_2_Master_Read
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548                           	psect	text27
  3549   001AFE                     __ptext27:
  3550                           	callstack 0
  3551   001AFE                     _I2C_2_Master_Idle:
  3552                           	callstack 26
  3553   001AFE                     l30:
  3554   001AFE  010E               	movlb	14	; () banked
  3555   001B00  B5D8               	btfsc	216,2,b	;volatile
  3556   001B02  EF85  F00D         	goto	u841
  3557   001B06  EF87  F00D         	goto	u840
  3558   001B0A                     u841:
  3559   001B0A  EF7F  F00D         	goto	l30
  3560   001B0E                     u840:
  3561   001B0E                     
  3562                           ; BSR set to: 14
  3563   001B0E  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3564   001B12  0E1F               	movlw	31
  3565   001B14  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  3566   001B16  A4D8               	btfss	status,2,c
  3567   001B18  EF90  F00D         	goto	u851
  3568   001B1C  EF92  F00D         	goto	u850
  3569   001B20                     u851:
  3570   001B20  EF7F  F00D         	goto	l30
  3571   001B24                     u850:
  3572   001B24                     
  3573                           ; BSR set to: 14
  3574   001B24  0012               	return		;funcret
  3575   001B26                     __end_of_I2C_2_Master_Idle:
  3576                           	callstack 0
  3577                           
  3578 ;; *************** function _I2C_2_Master_Init *****************
  3579 ;; Defined at:
  3580 ;;		line 4 in file "i2c.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;		None
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;		None
  3585 ;; Return value:  Size  Location     Type
  3586 ;;                  1    wreg      void 
  3587 ;; Registers used:
  3588 ;;		wreg, status,2
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3598 ;;Total ram usage:        0 bytes
  3599 ;; Hardware stack levels used: 1
  3600 ;; Hardware stack levels required when called: 2
  3601 ;; This function calls:
  3602 ;;		Nothing
  3603 ;; This function is called by:
  3604 ;;		_color_click_init
  3605 ;;		_main
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           	psect	text28
  3610   001AAA                     __ptext28:
  3611                           	callstack 0
  3612   001AAA                     _I2C_2_Master_Init:
  3613                           	callstack 27
  3614   001AAA                     
  3615                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3616   001AAA  010E               	movlb	14	; () banked
  3617   001AAC  51D9               	movf	217,w,b	;volatile
  3618   001AAE  0BF0               	andlw	-16
  3619   001AB0  0908               	iorlw	8
  3620   001AB2  6FD9               	movwf	217,b	;volatile
  3621   001AB4                     
  3622                           ; BSR set to: 14
  3623                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3624   001AB4  8BD9               	bsf	217,5,b	;volatile
  3625                           
  3626                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3627   001AB6  0E9F               	movlw	159
  3628   001AB8  6FD6               	movwf	214,b	;volatile
  3629   001ABA                     
  3630                           ; BSR set to: 14
  3631                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3632   001ABA  8A84               	bsf	132,5,c	;volatile
  3633   001ABC                     
  3634                           ; BSR set to: 14
  3635                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3636   001ABC  8C84               	bsf	132,6,c	;volatile
  3637   001ABE                     
  3638                           ; BSR set to: 14
  3639                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3640   001ABE  9BA7               	bcf	167,5,b	;volatile
  3641   001AC0                     
  3642                           ; BSR set to: 14
  3643                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3644   001AC0  9DA7               	bcf	167,6,b	;volatile
  3645                           
  3646                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3647   001AC2  0E1D               	movlw	29
  3648   001AC4  6F1D               	movwf	29,b	;volatile
  3649                           
  3650                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3651   001AC6  0E1E               	movlw	30
  3652   001AC8  6F1C               	movwf	28,b	;volatile
  3653                           
  3654                           ;i2c.c: 18:   RD5PPS=0x1C;
  3655   001ACA  0E1C               	movlw	28
  3656   001ACC  6F6F               	movwf	111,b	;volatile
  3657                           
  3658                           ;i2c.c: 19:   RD6PPS=0x1B;
  3659   001ACE  0E1B               	movlw	27
  3660   001AD0  6F70               	movwf	112,b	;volatile
  3661   001AD2                     
  3662                           ; BSR set to: 14
  3663   001AD2  0012               	return		;funcret
  3664   001AD4                     __end_of_I2C_2_Master_Init:
  3665                           	callstack 0
  3666                           
  3667 ;; *************** function _Interrupts_init *****************
  3668 ;; Defined at:
  3669 ;;		line 9 in file "interrupts.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;		None
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;		None
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  1    wreg      void 
  3676 ;; Registers used:
  3677 ;;		None
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3687 ;;Total ram usage:        0 bytes
  3688 ;; Hardware stack levels used: 1
  3689 ;; Hardware stack levels required when called: 2
  3690 ;; This function calls:
  3691 ;;		Nothing
  3692 ;; This function is called by:
  3693 ;;		_main
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           	psect	text29
  3698   001BA2                     __ptext29:
  3699                           	callstack 0
  3700   001BA2                     _Interrupts_init:
  3701                           	callstack 28
  3702   001BA2                     
  3703                           ;interrupts.c: 15:     INTCONbits.PEIE=1;
  3704   001BA2  8CF2               	bsf	242,6,c	;volatile
  3705                           
  3706                           ;interrupts.c: 16:     PIE4bits.RC4IE=1;
  3707   001BA4  010E               	movlb	14	; () banked
  3708   001BA6  872D               	bsf	45,3,b	;volatile
  3709                           
  3710                           ;interrupts.c: 17:     PIE4bits.TX4IE=0;
  3711   001BA8  952D               	bcf	45,2,b	;volatile
  3712                           
  3713                           ;interrupts.c: 18:     INTCONbits.GIE=1;
  3714   001BAA  8EF2               	bsf	242,7,c	;volatile
  3715   001BAC                     
  3716                           ; BSR set to: 14
  3717   001BAC  0012               	return		;funcret
  3718   001BAE                     __end_of_Interrupts_init:
  3719                           	callstack 0
  3720                           
  3721 ;; *************** function _HighISR *****************
  3722 ;; Defined at:
  3723 ;;		line 36 in file "interrupts.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;		None
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;		None
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  1    wreg      void 
  3730 ;; Registers used:
  3731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3739 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3740 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3741 ;;Total ram usage:        2 bytes
  3742 ;; Hardware stack levels used: 1
  3743 ;; Hardware stack levels required when called: 1
  3744 ;; This function calls:
  3745 ;;		_getCharFromTxBuf
  3746 ;;		_isDataInTxBuf
  3747 ;;		_putCharToRxBuf
  3748 ;; This function is called by:
  3749 ;;		Interrupt level 2
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           
  3753                           	psect	intcode
  3754   000008                     __pintcode:
  3755                           	callstack 0
  3756   000008                     _HighISR:
  3757                           	callstack 21
  3758                           
  3759                           ; BSR set to: 14
  3760                           ;incstack = 0
  3761   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3762   00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  3763   00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  3764   000012                     
  3765                           ;interrupts.c: 38:     if (PIR4bits.RC4IF == 1){
  3766   000012  010E               	movlb	14	; () banked
  3767   000014  A737               	btfss	55,3,b	;volatile
  3768   000016  EF0F  F000         	goto	i2u109_41
  3769   00001A  EF11  F000         	goto	i2u109_40
  3770   00001E                     i2u109_41:
  3771   00001E  EF14  F000         	goto	i2l2121
  3772   000022                     i2u109_40:
  3773   000022                     
  3774                           ; BSR set to: 14
  3775                           ;interrupts.c: 39:         putCharToRxBuf(RC4REG);
  3776   000022  51E3               	movf	227,w,b	;volatile
  3777   000024  EC6A  F00D         	call	_putCharToRxBuf
  3778   000028                     i2l2121:
  3779                           
  3780                           ;interrupts.c: 41:     if (PIR4bits.TX4IF == 1 && PIE4bits.TX4IE==1){
  3781   000028  010E               	movlb	14	; () banked
  3782   00002A  A537               	btfss	55,2,b	;volatile
  3783   00002C  EF1A  F000         	goto	i2u110_41
  3784   000030  EF1C  F000         	goto	i2u110_40
  3785   000034                     i2u110_41:
  3786   000034  EF35  F000         	goto	i2l348
  3787   000038                     i2u110_40:
  3788   000038                     
  3789                           ; BSR set to: 14
  3790   000038  A52D               	btfss	45,2,b	;volatile
  3791   00003A  EF21  F000         	goto	i2u111_41
  3792   00003E  EF23  F000         	goto	i2u111_40
  3793   000042                     i2u111_41:
  3794   000042  EF35  F000         	goto	i2l348
  3795   000046                     i2u111_40:
  3796   000046                     
  3797                           ; BSR set to: 14
  3798                           ;interrupts.c: 42:         if (isDataInTxBuf()==1 ) {TX4REG = getCharFromTxBuf();}
  3799   000046  ECBF  F00D         	call	_isDataInTxBuf	;wreg free
  3800   00004A  06E8               	decf	wreg,f,c
  3801   00004C  A4D8               	btfss	status,2,c
  3802   00004E  EF2B  F000         	goto	i2u112_41
  3803   000052  EF2D  F000         	goto	i2u112_40
  3804   000056                     i2u112_41:
  3805   000056  EF33  F000         	goto	i2l346
  3806   00005A                     i2u112_40:
  3807   00005A  EC3F  F00D         	call	_getCharFromTxBuf	;wreg free
  3808   00005E  010E               	movlb	14	; () banked
  3809   000060  6FE4               	movwf	228,b	;volatile
  3810   000062  EF35  F000         	goto	i2l348
  3811   000066                     i2l346:
  3812   000066  010E               	movlb	14	; () banked
  3813   000068  952D               	bcf	45,2,b	;volatile
  3814   00006A                     i2l348:
  3815                           
  3816                           ; BSR set to: 14
  3817   00006A  C004  FFDA         	movff	??_HighISR+1,fsr2h
  3818   00006E  C003  FFD9         	movff	??_HighISR,fsr2l
  3819   000072  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3820   000074  0011               	retfie		f
  3821   000076                     __end_of_HighISR:
  3822                           	callstack 0
  3823                           
  3824 ;; *************** function _putCharToRxBuf *****************
  3825 ;; Defined at:
  3826 ;;		line 57 in file "serial.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;  byte            1    wreg     unsigned char 
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;  byte            1    0[COMRAM] unsigned char 
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  1    wreg      void 
  3833 ;; Registers used:
  3834 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3841 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3843 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3844 ;;Total ram usage:        1 bytes
  3845 ;; Hardware stack levels used: 1
  3846 ;; This function calls:
  3847 ;;		Nothing
  3848 ;; This function is called by:
  3849 ;;		_HighISR
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           
  3853                           	psect	text31
  3854   001AD4                     __ptext31:
  3855                           	callstack 0
  3856   001AD4                     _putCharToRxBuf:
  3857                           	callstack 21
  3858                           
  3859                           ; BSR set to: 14
  3860                           ;incstack = 0
  3861                           ;putCharToRxBuf@byte stored from wreg
  3862   001AD4  6E01               	movwf	putCharToRxBuf@byte^0,c
  3863   001AD6                     
  3864                           ;serial.c: 58:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  3865   001AD6  0E13               	movlw	19
  3866   001AD8  645A               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  3867   001ADA  EF71  F00D         	goto	i2u104_41
  3868   001ADE  EF73  F00D         	goto	i2u104_40
  3869   001AE2                     i2u104_41:
  3870   001AE2  EF75  F00D         	goto	i2l1997
  3871   001AE6                     i2u104_40:
  3872   001AE6  0E00               	movlw	0
  3873   001AE8  6E5A               	movwf	_RxBufWriteCnt^0,c	;volatile
  3874   001AEA                     i2l1997:
  3875                           
  3876                           ;serial.c: 59:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  3877   001AEA  0EB5               	movlw	low _EUSART4RXbuf
  3878   001AEC  245A               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  3879   001AEE  6ED9               	movwf	fsr2l,c
  3880   001AF0  6ADA               	clrf	fsr2h,c
  3881   001AF2  0E00               	movlw	high _EUSART4RXbuf
  3882   001AF4  22DA               	addwfc	fsr2h,f,c
  3883   001AF6  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  3884   001AFA  2A5A               	incf	_RxBufWriteCnt^0,f,c	;volatile
  3885   001AFC  0012               	return		;funcret
  3886   001AFE                     __end_of_putCharToRxBuf:
  3887                           	callstack 0
  3888                           
  3889 ;; *************** function _isDataInTxBuf *****************
  3890 ;; Defined at:
  3891 ;;		line 85 in file "serial.c"
  3892 ;; Parameters:    Size  Location     Type
  3893 ;;		None
  3894 ;; Auto vars:     Size  Location     Type
  3895 ;;		None
  3896 ;; Return value:  Size  Location     Type
  3897 ;;                  1    wreg      unsigned char 
  3898 ;; Registers used:
  3899 ;;		wreg, status,2, status,0
  3900 ;; Tracked objects:
  3901 ;;		On entry : 0/0
  3902 ;;		On exit  : 0/0
  3903 ;;		Unchanged: 0/0
  3904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3909 ;;Total ram usage:        0 bytes
  3910 ;; Hardware stack levels used: 1
  3911 ;; This function calls:
  3912 ;;		Nothing
  3913 ;; This function is called by:
  3914 ;;		_HighISR
  3915 ;;		_sendTxBuf
  3916 ;; This function uses a non-reentrant model
  3917 ;;
  3918                           
  3919                           	psect	text32
  3920   001B7E                     __ptext32:
  3921                           	callstack 0
  3922   001B7E                     _isDataInTxBuf:
  3923                           	callstack 21
  3924   001B7E                     
  3925                           ;serial.c: 86:     return (TxBufWriteCnt!=TxBufReadCnt);
  3926   001B7E  5057               	movf	_TxBufReadCnt^0,w,c	;volatile
  3927   001B80  1858               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  3928   001B82  A4D8               	btfss	status,2,c
  3929   001B84  EFC6  F00D         	goto	i2u46_41
  3930   001B88  EFC9  F00D         	goto	i2u46_40
  3931   001B8C                     i2u46_41:
  3932   001B8C  0E01               	movlw	1
  3933   001B8E  EFCA  F00D         	goto	i2u47_40
  3934   001B92                     i2u46_40:
  3935   001B92  0E00               	movlw	0
  3936   001B94                     i2u47_40:
  3937   001B94  0012               	return		;funcret
  3938   001B96                     __end_of_isDataInTxBuf:
  3939                           	callstack 0
  3940                           
  3941 ;; *************** function _getCharFromTxBuf *****************
  3942 ;; Defined at:
  3943 ;;		line 71 in file "serial.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;		None
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;		None
  3948 ;; Return value:  Size  Location     Type
  3949 ;;                  1    wreg      unsigned char 
  3950 ;; Registers used:
  3951 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3952 ;; Tracked objects:
  3953 ;;		On entry : 0/0
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: 0/0
  3956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3959 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3960 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3961 ;;Total ram usage:        2 bytes
  3962 ;; Hardware stack levels used: 1
  3963 ;; This function calls:
  3964 ;;		Nothing
  3965 ;; This function is called by:
  3966 ;;		_HighISR
  3967 ;; This function uses a non-reentrant model
  3968 ;;
  3969                           
  3970                           	psect	text33
  3971   001A7E                     __ptext33:
  3972                           	callstack 0
  3973   001A7E                     _getCharFromTxBuf:
  3974                           	callstack 21
  3975   001A7E                     
  3976                           ;serial.c: 72:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  3977   001A7E  0E3B               	movlw	59
  3978   001A80  6457               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  3979   001A82  EF45  F00D         	goto	i2u105_41
  3980   001A86  EF47  F00D         	goto	i2u105_40
  3981   001A8A                     i2u105_41:
  3982   001A8A  EF49  F00D         	goto	i2l2005
  3983   001A8E                     i2u105_40:
  3984   001A8E  0E00               	movlw	0
  3985   001A90  6E57               	movwf	_TxBufReadCnt^0,c	;volatile
  3986   001A92                     i2l2005:
  3987                           
  3988                           ;serial.c: 73:     return EUSART4TXbuf[TxBufReadCnt++];
  3989   001A92  2A57               	incf	_TxBufReadCnt^0,f,c	;volatile
  3990   001A94  0457               	decf	_TxBufReadCnt^0,w,c	;volatile
  3991   001A96  6E01               	movwf	??_getCharFromTxBuf^0,c
  3992   001A98  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  3993   001A9A  0E00               	movlw	low _EUSART4TXbuf
  3994   001A9C  2401               	addwf	??_getCharFromTxBuf^0,w,c
  3995   001A9E  6ED9               	movwf	fsr2l,c
  3996   001AA0  0E01               	movlw	high _EUSART4TXbuf
  3997   001AA2  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  3998   001AA4  6EDA               	movwf	fsr2h,c
  3999   001AA6  50DF               	movf	indf2,w,c
  4000   001AA8  0012               	return		;funcret
  4001   001AAA                     __end_of_getCharFromTxBuf:
  4002                           	callstack 0
  4003                           
  4004                           	psect	rparam
  4005   000000                     
  4006                           	psect	temp
  4007   00005B                     btemp:
  4008                           	callstack 0
  4009   00005B                     	ds	1
  4010   000000                     int$flags	set	btemp
  4011   000000                     wtemp8	set	btemp+1
  4012   000000                     ttemp5	set	btemp+1
  4013   000000                     ttemp6	set	btemp+4
  4014   000000                     ttemp7	set	btemp+8
  4015                           
  4016                           	psect	idloc
  4017                           
  4018                           ;Config register IDLOC0 @ 0x200000
  4019                           ;	unspecified, using default values
  4020   200000                     	org	2097152
  4021   200000  0FFF               	dw	4095
  4022                           
  4023                           ;Config register IDLOC1 @ 0x200002
  4024                           ;	unspecified, using default values
  4025   200002                     	org	2097154
  4026   200002  0FFF               	dw	4095
  4027                           
  4028                           ;Config register IDLOC2 @ 0x200004
  4029                           ;	unspecified, using default values
  4030   200004                     	org	2097156
  4031   200004  0FFF               	dw	4095
  4032                           
  4033                           ;Config register IDLOC3 @ 0x200006
  4034                           ;	unspecified, using default values
  4035   200006                     	org	2097158
  4036   200006  0FFF               	dw	4095
  4037                           
  4038                           ;Config register IDLOC4 @ 0x200008
  4039                           ;	unspecified, using default values
  4040   200008                     	org	2097160
  4041   200008  0FFF               	dw	4095
  4042                           
  4043                           ;Config register IDLOC5 @ 0x20000A
  4044                           ;	unspecified, using default values
  4045   20000A                     	org	2097162
  4046   20000A  0FFF               	dw	4095
  4047                           
  4048                           ;Config register IDLOC6 @ 0x20000C
  4049                           ;	unspecified, using default values
  4050   20000C                     	org	2097164
  4051   20000C  0FFF               	dw	4095
  4052                           
  4053                           ;Config register IDLOC7 @ 0x20000E
  4054                           ;	unspecified, using default values
  4055   20000E                     	org	2097166
  4056   20000E  0FFF               	dw	4095
  4057                           
  4058                           	psect	config
  4059                           
  4060                           ;Config register CONFIG1L @ 0x300000
  4061                           ;	External Oscillator mode Selection bits
  4062                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4063                           ;	Power-up default value for COSC bits
  4064                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4065   300000                     	org	3145728
  4066   300000  AA                 	db	170
  4067                           
  4068                           ;Config register CONFIG1H @ 0x300001
  4069                           ;	unspecified, using default values
  4070                           ;	Clock Out Enable bit
  4071                           ;	CLKOUTEN = 0x1, unprogrammed default
  4072                           ;	Clock Switch Enable bit
  4073                           ;	CSWEN = 0x1, unprogrammed default
  4074                           ;	Fail-Safe Clock Monitor Enable bit
  4075                           ;	FCMEN = 0x1, unprogrammed default
  4076   300001                     	org	3145729
  4077   300001  FF                 	db	255
  4078                           
  4079                           ;Config register CONFIG2L @ 0x300002
  4080                           ;	unspecified, using default values
  4081                           ;	Master Clear Enable bit
  4082                           ;	MCLRE = 0x1, unprogrammed default
  4083                           ;	Power-up Timer Enable bit
  4084                           ;	PWRTE = 0x1, unprogrammed default
  4085                           ;	Low-power BOR enable bit
  4086                           ;	LPBOREN = 0x1, unprogrammed default
  4087                           ;	Brown-out Reset Enable bits
  4088                           ;	BOREN = 0x3, unprogrammed default
  4089   300002                     	org	3145730
  4090   300002  FF                 	db	255
  4091                           
  4092                           ;Config register CONFIG2H @ 0x300003
  4093                           ;	unspecified, using default values
  4094                           ;	Brown Out Reset Voltage selection bits
  4095                           ;	BORV = 0x3, unprogrammed default
  4096                           ;	ZCD Disable bit
  4097                           ;	ZCD = 0x1, unprogrammed default
  4098                           ;	PPSLOCK bit One-Way Set Enable bit
  4099                           ;	PPS1WAY = 0x1, unprogrammed default
  4100                           ;	Stack Full/Underflow Reset Enable bit
  4101                           ;	STVREN = 0x1, unprogrammed default
  4102                           ;	Debugger Enable bit
  4103                           ;	DEBUG = 0x1, unprogrammed default
  4104                           ;	Extended Instruction Set Enable bit
  4105                           ;	XINST = 0x1, unprogrammed default
  4106   300003                     	org	3145731
  4107   300003  FF                 	db	255
  4108                           
  4109                           ;Config register CONFIG3L @ 0x300004
  4110                           ;	WDT Period Select bits
  4111                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4112                           ;	WDT operating mode
  4113                           ;	WDTE = OFF, WDT Disabled
  4114   300004                     	org	3145732
  4115   300004  9F                 	db	159
  4116                           
  4117                           ;Config register CONFIG3H @ 0x300005
  4118                           ;	unspecified, using default values
  4119                           ;	WDT Window Select bits
  4120                           ;	WDTCWS = 0x7, unprogrammed default
  4121                           ;	WDT input clock selector
  4122                           ;	WDTCCS = 0x7, unprogrammed default
  4123   300005                     	org	3145733
  4124   300005  FF                 	db	255
  4125                           
  4126                           ;Config register CONFIG4L @ 0x300006
  4127                           ;	unspecified, using default values
  4128                           ;	Write Protection Block 0
  4129                           ;	WRT0 = 0x1, unprogrammed default
  4130                           ;	Write Protection Block 1
  4131                           ;	WRT1 = 0x1, unprogrammed default
  4132                           ;	Write Protection Block 2
  4133                           ;	WRT2 = 0x1, unprogrammed default
  4134                           ;	Write Protection Block 3
  4135                           ;	WRT3 = 0x1, unprogrammed default
  4136                           ;	Write Protection Block 3
  4137                           ;	WRT4 = 0x1, unprogrammed default
  4138                           ;	Write Protection Block 3
  4139                           ;	WRT5 = 0x1, unprogrammed default
  4140                           ;	Write Protection Block 3
  4141                           ;	WRT6 = 0x1, unprogrammed default
  4142                           ;	Write Protection Block 3
  4143                           ;	WRT7 = 0x1, unprogrammed default
  4144   300006                     	org	3145734
  4145   300006  FF                 	db	255
  4146                           
  4147                           ;Config register CONFIG4H @ 0x300007
  4148                           ;	unspecified, using default values
  4149                           ;	Configuration Register Write Protection bit
  4150                           ;	WRTC = 0x1, unprogrammed default
  4151                           ;	Boot Block Write Protection bit
  4152                           ;	WRTB = 0x1, unprogrammed default
  4153                           ;	Data EEPROM Write Protection bit
  4154                           ;	WRTD = 0x1, unprogrammed default
  4155                           ;	Scanner Enable bit
  4156                           ;	SCANE = 0x1, unprogrammed default
  4157                           ;	Low Voltage Programming Enable bit
  4158                           ;	LVP = 0x1, unprogrammed default
  4159   300007                     	org	3145735
  4160   300007  FF                 	db	255
  4161                           
  4162                           ;Config register CONFIG5L @ 0x300008
  4163                           ;	unspecified, using default values
  4164                           ;	UserNVM Program Memory Code Protection bit
  4165                           ;	CP = 0x1, unprogrammed default
  4166                           ;	DataNVM Memory Code Protection bit
  4167                           ;	CPD = 0x1, unprogrammed default
  4168   300008                     	org	3145736
  4169   300008  FF                 	db	255
  4170                           
  4171                           ;Config register CONFIG5H @ 0x300009
  4172                           ;	unspecified, using default values
  4173   300009                     	org	3145737
  4174   300009  FF                 	db	255
  4175                           
  4176                           ;Config register CONFIG6L @ 0x30000A
  4177                           ;	unspecified, using default values
  4178                           ;	Table Read Protection Block 0
  4179                           ;	EBTR0 = 0x1, unprogrammed default
  4180                           ;	Table Read Protection Block 1
  4181                           ;	EBTR1 = 0x1, unprogrammed default
  4182                           ;	Table Read Protection Block 2
  4183                           ;	EBTR2 = 0x1, unprogrammed default
  4184                           ;	Table Read Protection Block 3
  4185                           ;	EBTR3 = 0x1, unprogrammed default
  4186                           ;	Table Read Protection Block 4
  4187                           ;	EBTR4 = 0x1, unprogrammed default
  4188                           ;	Table Read Protection Block 5
  4189                           ;	EBTR5 = 0x1, unprogrammed default
  4190                           ;	Table Read Protection Block 6
  4191                           ;	EBTR6 = 0x1, unprogrammed default
  4192                           ;	Table Read Protection Block 7
  4193                           ;	EBTR7 = 0x1, unprogrammed default
  4194   30000A                     	org	3145738
  4195   30000A  FF                 	db	255
  4196                           
  4197                           ;Config register CONFIG6H @ 0x30000B
  4198                           ;	unspecified, using default values
  4199                           ;	Boot Block Table Read Protection bit
  4200                           ;	EBTRB = 0x1, unprogrammed default
  4201   30000B                     	org	3145739
  4202   30000B  FF                 	db	255
  4203                           tosu	equ	0xFFF
  4204                           tosh	equ	0xFFE
  4205                           tosl	equ	0xFFD
  4206                           stkptr	equ	0xFFC
  4207                           pclatu	equ	0xFFB
  4208                           pclath	equ	0xFFA
  4209                           pcl	equ	0xFF9
  4210                           tblptru	equ	0xFF8
  4211                           tblptrh	equ	0xFF7
  4212                           tblptrl	equ	0xFF6
  4213                           tablat	equ	0xFF5
  4214                           prodh	equ	0xFF4
  4215                           prodl	equ	0xFF3
  4216                           indf0	equ	0xFEF
  4217                           postinc0	equ	0xFEE
  4218                           postdec0	equ	0xFED
  4219                           preinc0	equ	0xFEC
  4220                           plusw0	equ	0xFEB
  4221                           fsr0h	equ	0xFEA
  4222                           fsr0l	equ	0xFE9
  4223                           wreg	equ	0xFE8
  4224                           indf1	equ	0xFE7
  4225                           postinc1	equ	0xFE6
  4226                           postdec1	equ	0xFE5
  4227                           preinc1	equ	0xFE4
  4228                           plusw1	equ	0xFE3
  4229                           fsr1h	equ	0xFE2
  4230                           fsr1l	equ	0xFE1
  4231                           bsr	equ	0xFE0
  4232                           indf2	equ	0xFDF
  4233                           postinc2	equ	0xFDE
  4234                           postdec2	equ	0xFDD
  4235                           preinc2	equ	0xFDC
  4236                           plusw2	equ	0xFDB
  4237                           fsr2h	equ	0xFDA
  4238                           fsr2l	equ	0xFD9
  4239                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    0
    Data        0
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     85     142
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1838$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1785$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1785$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlhllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlhllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlhllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlhllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlhllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlhllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlhllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlhllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlhllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlhllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlhllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlhllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlhllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlhllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlhllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlhllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlhllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlhllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlhllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlhllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    S1022DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlhllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlhllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    S1022DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlhllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlhllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                66    66      0    8802
                                             25 BANK0     60    60      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                   _color_click_init
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                    _initDCmotorsPWM
                         _initUSART4
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6    7316
                                              6 BANK0     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6830
                                             84 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    6369
                                             66 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4802
                                             31 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2533
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1177
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              5 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Green                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Clear                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Blue                                      7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              2     2      0      22
                                              2 COMRAM     2     2      0
                   _getCharFromTxBuf
                      _isDataInTxBuf
                     _putCharToRxBuf
 ---------------------------------------------------------------------------------
 (10) _putCharToRxBuf                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _isDataInTxBuf                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _getCharFromTxBuf                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_read_Blue
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Clear
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Green
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Red
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 _HighISR (ROOT)
   _getCharFromTxBuf
   _isDataInTxBuf
   _putCharToRxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      60        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     55      8E       5       88.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBIGSFRhlhllh     54      0       0      42        0.0%
BITBIGSFRhlhlll     37      0       0      44        0.0%
BITBIGSFRhhhhl      32      0       0      33        0.0%
BITBIGSFRllh        2D      0       0      47        0.0%
BITBIGSFRlllhll     2A      0       0      54        0.0%
BITBIGSFRlllll      26      0       0      58        0.0%
BITBIGSFRlllhhh     1E      0       0      48        0.0%
BITBIGSFRhhhlll     1E      0       0      37        0.0%
BITBIGSFRlllhhh     11      0       0      49        0.0%
BITBIGSFRlllhll      F      0       0      56        0.0%
BITBIGSFRhhhlhh      E      0       0      34        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhll      9      0       0      55        0.0%
BITBIGSFRhllll       8      0       0      45        0.0%
BITBIGSFRllllh       6      0       0      57        0.0%
BITBIGSFRlllhlh      6      0       0      53        0.0%
BITBIGSFRlllhlh      5      0       0      52        0.0%
BITBIGSFRhlhhh       3      0       0      39        0.0%
BITBIGSFRlllhhl      3      0       0      51        0.0%
BITBIGSFRhlhlll      2      0       0      43        0.0%
BITBIGSFRhhhllh      2      0       0      36        0.0%
BITBIGSFRhhhlhl      1      0       0      35        0.0%
BITBIGSFRlllhhh      1      0       0      50        0.0%
BITBIGSFRhlhlh       1      0       0      41        0.0%
BITBIGSFRhlhhl       1      0       0      40        0.0%
BITBIGSFRhhl         1      0       0      38        0.0%
BITBIGSFRlh          1      0       0      46        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     124      59        0.0%
DATA                 0      0     124       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Mar 08 18:33:58 2023

               _color_read_Red 17E2                _color_read_Blue 18D2                             l30 1AFE  
                           l33 1B24                             l42 1BC0                             l27 1AD2  
                           l36 1BCA                             l45 1BA0                             l70 1B64  
                           l39 1BB6                             l48 19A6                             l73 1830  
                           l82 18D0                             l67 1A1A                             l76 1920  
                           l79 1880               _color_read_Clear 1882               _color_read_Green 1832  
            ??_Interrupts_init 0005                            l121 1B44                            l130 1B68  
                          l133 1B7C                            l222 16C4                            l139 1A7C  
                          l339 1BAC                            l465 1208                            l478 136C  
                          u840 1B0E                            u841 1B0A                            u850 1B24  
                          u851 1B20                            u990 1990                            u991 1988  
                          _abs 19A8                            _pad 16C6                            wreg 000FE8  
                         l1106 1584                           l1114 1964                           l1051 16E8  
                         ?_abs 0017                           l1060 0E92                           l2021 166C  
                         l1117 1BCC                           l1029 1790                           l1062 0E9A  
                         l2031 16AA                           l2023 1670                           l1055 173E  
                         l1063 0EE0                           l2041 1BA2                           l2033 16AC  
                         l2025 1694                           l2017 1636                           l2201 123C  
                         l1081 14BA                           l1074 1080                           l2035 16B6  
                         l2027 169E                           l2019 1646                           l2211 1294  
                         l2203 1240                           l1091 19DE                           l2131 14CE  
                         l2037 16B8                           l2029 16A0                           l2221 1316  
                         l2213 12A8                           l2205 124E                           l2133 14E0  
                         l2301 136E                           l1094 19E6                           l2039 16C2  
                         l2151 1082                           l2215 12B6                           l2223 131C  
                         l2207 126E                           l2135 14EA                           l2143 1922  
                         l2231 16C6                           l2311 13C2                           l2303 1392  
                         l1087 17E0                           l2161 10C6                           l2153 1086  
                         l2225 132C                           l2217 12E4                           l2209 128C  
                         l2137 1508                           l2129 14BC                           l2145 192E  
                         l2241 170C                           l2233 16D4                           l2321 1480  
                         l2313 13DE                           l2305 13A0                           l2171 111C  
                         l2163 10E6                           l2155 1094                           l2227 134C  
                         l2219 1304                           l2139 153E                           l2147 1940  
                         l2243 172A                           l2235 16E0                           l2251 0E26  
                         l2315 13FA                           l2307 13AE                           l2331 1792  
                         l2181 119E                           l2173 1130                           l2165 10EA  
                         l2157 10B4                           l2245 19A8                           l2149 1944  
                         l2237 16F4                           l2261 0EA2                           l2253 0E3A  
                         l2317 1450                           l2309 13B2                           l2325 1492  
                         l2333 179E                           l2341 1740                           l2191 11E8  
                         l2183 11A0                           l2175 113E                           l2167 10F6  
                         l2159 10B8                           l2247 19C2                           l2239 1708  
                         l2271 0EDC                           l2263 0EB2                           l2255 0E4A  
                         l2335 17BA                           l2343 1752                           l2185 11B2  
                         l2177 1150                           l2169 1114                           l2281 0F7E  
                         l2273 0EE8                           l2265 0EB8                           l2257 0E6A  
                         l2249 0E06                           l2337 17D6                           l2345 175A  
                         l2361 15A0                           l2353 1586                           l2179 117E  
                         l2187 11B8                           l2195 120A                           l2291 103A  
                         l2283 0F84                           l2275 0EF0                           l2267 0EC8  
                         l2259 0E86                           l2347 1762                           l2371 15C0  
                         l2363 15A8                           l2355 1592                           l1901 1AC0  
                         l2189 11C8                           l2197 120E                           l2293 104A  
                         l2277 0EF6                           l2285 0FE8                           l2269 0ED4  
                         l2349 177E                           l2381 15E4                           l2373 15C4  
                         l2365 15B0                           l2357 1598                           l1911 1974  
                         l1903 1BAE                           l2199 121C                           l2295 1050  
                         l2287 1002                           l2279 0F78                           l2391 1600  
                         l2383 15E8                           l2375 15CC                           l2367 15B8  
                         l2359 159C                           l1921 1B48                           l1913 197C  
                         l1905 1BB2                           l2297 1060                           l2289 1020  
                         l2393 1604                           l2385 15EC                           l2377 15D4  
                         l2369 15BC                           l1851 1BC6                           l1915 19A2  
                         l1907 1968                           l1923 1B68                           l2395 1622  
                         l2387 15F8                           l2379 15E0                           l1853 1BB8  
                         l1941 19F6                           l1917 19A4                           l1909 196C  
                         l1925 1B78                           l2389 15FC                           l1855 1BBC  
                         l1943 1A06                           l1793 1AFE                           l1849 1BC2  
                         l1857 1B98                           l1945 1A10                           l1937 19E8  
                         l1953 18D2                           l1961 1878                           l1891 1AAA  
                         l1795 1B0E                           l1859 1B9C                           l1939 19EC  
                         l1955 1918                           l1947 17E2                           l1971 1B26  
                         l1893 1AB4                           l1965 1882                           l1949 1828  
                         l1981 1B40                           l1973 1B30                           ?_pad 0015  
                         l1895 1ABA                           l1967 18C8                           l1959 1832  
                         l1983 1B42                           l1975 1B32                           l1991 1A64  
                         l1897 1ABC                           l1977 1B34                           l1985 1A4E  
                         l1899 1ABE                           l1979 1B3E                           l1987 1A52  
                         l1989 1A60                           STR_1 0E01                           u1010 1B78  
                         u1011 1B74                           u1030 1A7C                           u1031 1A78  
                         u1008 1992                           u1201 10F0                           u1210 1114  
                         u1130 14CE                           u1211 1110                           u1131 14CA  
                         u1220 113E                           u1300 132C                           u1140 14E0  
                         u1221 113A                           u1301 1328                           u1141 14DC  
                         u1230 117E                           u1150 1508                           u1310 16D4  
                         u1231 117A                           u1151 1504                           u1311 16D0  
                         u1240 11C8                           u1160 153E                           u1320 172A  
                         u1400 1002                           u1241 11C4                           u1161 153A  
                         u1321 1726                           u1401 0FFE                           u1250 121C  
                         u1330 19C2                           u1170 1964                           u1410 1020  
                         u1251 1218                           u1331 19BE                           u1171 1960  
                         u1411 101C                           u1180 1094                           u1260 124E  
                         u1420 103A                           u1340 0E36                           u1181 1090  
                         u1261 124A                           u1421 1036                           u1341 0E30  
                         u1190 10C6                           u1270 128C                           u1430 104A  
                         u1350 0E38                           u1191 10C2                           u1271 1288  
                         u1431 1046                           u1280 12B6                           u1360 0E4A  
                         u1440 1392                   _BAUD4CONbits 000EE9                           u1281 12B2  
                         u1361 0E46                           u1441 138E                           u1290 12E4  
                         u1370 0E86                           u1450 13DE                           u1291 12E0  
                         u1371 0E82                           u1451 13DA                           u1380 0EB2  
                         u1460 13FA                           u1381 0EAE                           u1461 13F6  
                         u1390 0EC8                           u1470 17D6                           u1391 0EC4  
                         u1471 17D2                           _T2PR 000FBC                           u1487 19FC  
                         abs@a 0017                           _dbuf 00CE                           _main 1586  
                         _dtoa 0E06                           _prec 00CB                           pad@i 001C  
                         pad@p 0019                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001E  
                         fsr2l 000FD9                           btemp 005B                           start 0076  
       __end_of_color_read_Red 1832                __end_of_HighISR 0076                   ___param_bank 000000  
                        ??_abs 0019                          ??_pad 001B                __end_of___aodiv 120A  
                        ?_main 0001                          ?_dtoa 0020                __end_of___aomod 136E  
                        i2l161 1B94                          i2l154 1AA8                          i2l147 1AFC  
                        i2l346 0066                          i2l348 006A                   vfpfcnvrt@fmt 0045  
      __end_of_sendCharSerial4 1B7E     __end_of_I2C_2_Master_Start 1BCC     __end_of_I2C_2_Master_Write 1BA2  
                        _flags 00CD                          _fputc 14BC                          _fputs 1922  
                        pad@fp 0015                          _width 00C9                          main@R 00A1  
                        _putch 1BCC                          dtoa@d 0022                          dtoa@i 0041  
                        dtoa@n 0038                          dtoa@p 0034                          dtoa@s 0040  
                        dtoa@w 0036                          tablat 000FF5                          ttemp5 005C  
                        ttemp6 005F                          ttemp7 0063                          status 000FD8  
                        wtemp8 005C                __end_of_sprintf 1792        __end_of_color_read_Blue 1922  
        _I2C_2_Master_RepStart 1BAE             putCharToRxBuf@byte 0001                ?_color_read_Red 0009  
              __initialization 1A1C                   __end_of_main 1636                   __end_of_dtoa 1082  
                       ??_main 0057                         ??_dtoa 002A                  __activetblptr 000001  
                       ?_fputc 0005                         ?_fputs 000E                         _CCPR1H 000FAA  
                       _CCPR2H 000FA6                         _CCPR3H 000F25                         _CCPR4H 000F21  
                       ?_putch 0001                         _RC0PPS 000E62                         _RC4REG 000EE3  
                       _RE2PPS 000E74                         _RC7PPS 000E69                         _RD5PPS 000E6F  
                       i2l2001 1A7E                         i2l2003 1A8E                         _RE4PPS 000E76  
                       _RD6PPS 000E70                         i2l2005 1A92                         i2l2121 0028  
                       i2l2123 0038                         i2l2125 0046                         i2l2117 0012  
                       i2l2127 005A                         i2l2119 0022                         i2l1477 1B7E  
                       i2l1993 1AD6                         i2l1995 1AE6                         _RG6PPS 000E88  
                       i2l1997 1AEA                         i2l1999 1AFA                      ??_HighISR 0003  
     __end_of_color_click_init 1A1C                         _RX4PPS 000E15                         _TX4REG 000EE4  
                 _CCPTMRS0bits 000FAD                   vfprintf@cfmt 0055               _getCharFromTxBuf 1A7E  
                    ??___aodiv 0015                      ??___aomod 0015                         clear_0 1A22  
                       clear_1 1A2E                         isa$std 000001                         pad@buf 0017  
                       dtoa@fp 0020                         fputc@c 0005                         fputs@c 0012  
                       fputs@i 0013                         fputs@s 000E                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001                         putch@c 0001               __end_of_vfprintf 17E2  
            ??_initDCmotorsPWM 0007                      ??_sprintf 0057          __end_of_isDataInTxBuf 1B96  
                   __accesstop 0060        __end_of__initialization 1A3C       __end_of_color_read_Clear 18D2  
     __end_of_color_read_Green 1882         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
             ?_color_read_Blue 0009                _Interrupts_init 1BA2                 __pcstackCOMRAM 0001  
                __end_of_fputc 1586                  __end_of_fputs 1966                  __end_of_putch 1BCE  
                      ??_fputc 0009                        ??_fputs 0012                        ??_putch 0005  
                   __pbssBANK0 00B5                     __pbssBANK1 0100              _color_writetoaddr 1B46  
                 _T2CLKCONbits 000FBF             ?_color_writetoaddr 0007            ??_color_writetoaddr 0008  
                      _SP4BRGH 000EE6                        _SP4BRGL 000EE5                        i2u46_40 1B92  
                      i2u46_41 1B8C                        i2u47_40 1B94                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5        __end_of_Interrupts_init 1BAE         color_writetoaddr@value 0007  
             ??_color_read_Red 000B                        _HighISR 0008      __end_of_color_writetoaddr 1B66  
           _I2C_2_Master_Start 1BC2                     _initUSART4 1B26             _I2C_2_Master_Write 1B96  
                      __Hparam 0000                        __Lparam 0000              color_read_Red@tmp 000E  
      sendStringSerial4@string 0006                        ___aodiv 1082                        ___aomod 120A  
          ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001                      ?_vfprintf 0060  
                 __psmallconst 0E00                        __pcinit 1A1C                        __ramtop 0E00  
                      __ptext0 1586                        __ptext1 1740                        __ptext2 1792  
                      __ptext3 136E                        __ptext4 0E06                        __ptext5 16C6  
                      __ptext6 1922                        __ptext7 14BC                        __ptext8 1BCC  
                      __ptext9 19A8                      _T2CONbits 000FBD                      _T2HLTbits 000FBE  
                _RxBufWriteCnt 005A       __end_of_getCharFromTxBuf 1AAA                        main@buf 0079  
                      _sprintf 1740           ??_I2C_2_Master_Start 0006           ??_I2C_2_Master_Write 0006  
         end_of_initialization 1A3C                        fputc@fp 0007                        fputs@fp 0010  
            ?_color_click_init 0001             ??_color_click_init 0009              __end_of_vfpfcnvrt 14BC  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 004B                     ??_vfprintf 0055  
              _initDCmotorsPWM 1636                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISGbits 000F87       color_writetoaddr@address 0008  
      ??_I2C_2_Master_RepStart 0006               ?_Interrupts_init 0001                    _CCP1CONbits 000FAB  
            ?_color_read_Clear 0009                   _EUSART4RXbuf 00B5                   _EUSART4TXbuf 0100  
                  _CCP2CONbits 000FA7              ?_color_read_Green 0009                    _CCP3CONbits 000F26  
                  ?_initUSART4 0001                    _CCP4CONbits 000F22      sendCharSerial4@charToSend 0005  
                   main@motorL 00A3                     main@motorR 00AC             ??_color_read_Clear 000B  
           ??_color_read_Green 000B                    vfpfcnvrt@ap 0047                    vfpfcnvrt@cp 0053  
                  vfpfcnvrt@fp 0043            color_read_Clear@tmp 000E            start_initialization 1A1C  
                  __end_of_abs 19E8                    __end_of_pad 1740                  _TxBufWriteCnt 0058  
          color_read_Green@tmp 000E        __end_of_initDCmotorsPWM 16C6                    vfprintf@fmt 0062  
               _putCharToRxBuf 1AD4                    __pbssCOMRAM 0057                  __pcstackBANK0 0060  
             ___aodiv@dividend 0005                       ?_HighISR 0001                      _dtoa$1866 0032  
       __end_of_putCharToRxBuf 1AFE                      __pintcode 0008                       ?___aodiv 0005  
                     ?___aomod 0005               ___aodiv@quotient 0017           I2C_2_Master_Read@ack 0007  
         I2C_2_Master_Read@tmp 0008                    __smallconst 0E00              _I2C_2_Master_Idle 1AFE  
            _I2C_2_Master_Init 1AAA              _I2C_2_Master_Read 1966              _I2C_2_Master_Stop 1BB8  
                 _RxBufReadCnt 0059             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001       initDCmotorsPWM@PWMperiod 0005  
                     ?_sprintf 0066              ?_getCharFromTxBuf 0001             ??_getCharFromTxBuf 0001  
            _sendStringSerial4 1A4E            ??_I2C_2_Master_Idle 0005            ??_I2C_2_Master_Init 0005  
          ??_I2C_2_Master_Read 0006            ??_I2C_2_Master_Stop 0006                       _LATCbits 000F7B  
                _isDataInTxBuf 1B7E                       _LATEbits 000F7D                       _LATGbits 000F7F  
           ?_sendStringSerial4 0006                       _PIE4bits 000E2D                       i2u110_40 0038  
                     i2u110_41 0034                       i2u111_40 0046                       i2u111_41 0042  
                     i2u104_40 1AE6                       i2u112_40 005A                       i2u104_41 1AE2  
                     i2u112_41 0056                       i2u105_40 1A8E                       i2u105_41 1A8A  
                     i2u109_40 0022                       i2u109_41 001E                       _PIR4bits 000E37  
              ?_putCharToRxBuf 0001               ?_initDCmotorsPWM 0005              ??_sendCharSerial4 0005  
                     _SSP2CON2 000EDA            ??_sendStringSerial4 0008                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 136E      __end_of_I2C_2_Master_Idle 1B26      __end_of_I2C_2_Master_Init 1AD4  
    __end_of_I2C_2_Master_Read 19A8      __end_of_I2C_2_Master_Stop 1BC2    I2C_2_Master_Write@data_byte 0006  
            ??_color_read_Blue 000B                   _TxBufReadCnt 0057      __end_of_sendStringSerial4 1A7E  
               ?_isDataInTxBuf 0001  __end_of_I2C_2_Master_RepStart 1BB8             color_read_Blue@tmp 000E  
                 ??_initUSART4 0005                       __Hrparam 0000                     vfprintf@ap 0064  
                     __Lrparam 0000                     vfprintf@fp 0060                   __Lsmallconst 0E00  
                   ?_vfpfcnvrt 0043                ___aodiv@divisor 000D                ___aodiv@counter 0015  
                   _ANSELDbits 000EA7                     sprintf@fmt 0068             __end_of_initUSART4 1B46  
                     __ptext10 120A                       __ptext11 1082                       __ptext20 1BAE  
                     __ptext12 1A4E                       __ptext21 1966                       __ptext13 1B66  
                     __ptext22 19E8                       __ptext14 1B26                       __ptext31 1AD4  
                     __ptext23 1B46                       __ptext15 1636                       __ptext32 1B7E  
                     __ptext24 1B96                       __ptext16 17E2                       __ptext33 1A7E  
                     __ptext25 1BB8                       __ptext17 1832                       __ptext26 1BC2  
                     __ptext18 1882                       __ptext27 1AFE                       __ptext19 18D2  
                     __ptext28 1AAA                       __ptext29 1BA2                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                       isa$xinst 000000                     _RC4STAbits 000EE7  
                     int$flags 005B                       _vfprintf 1792               ___aomod@dividend 0005  
                   _INTCONbits 000FF2                ??_isDataInTxBuf 0001                       intlevel2 0000  
                    sprintf@ap 006C                ___aomod@divisor 000D                    ??_vfpfcnvrt 0049  
              ___aomod@counter 0015               _color_click_init 19E8                       sprintf@f 006E  
                     sprintf@s 0066                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
                   _TX4STAbits 000EE8                   ___aodiv@sign 0016                _sendCharSerial4 1B66  
             ??_putCharToRxBuf 0001                   ___aomod@sign 0016  
