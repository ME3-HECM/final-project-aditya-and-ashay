

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Mar 08 17:11:36 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51   000000                     
    52                           ; Generated 06/04/2022 GMT
    53                           ; 
    54                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F67K40 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86   000000                     _RC4STAbits	set	3815
    87   000000                     _SP4BRGH	set	3814
    88   000000                     _SP4BRGL	set	3813
    89   000000                     _TX4STAbits	set	3816
    90   000000                     _BAUD4CONbits	set	3817
    91   000000                     _TX4REG	set	3812
    92   000000                     _LATFbits	set	3966
    93   000000                     _TRISFbits	set	3974
    94   000000                     _LATGbits	set	3967
    95   000000                     _TRISGbits	set	3975
    96   000000                     _TRISEbits	set	3973
    97   000000                     _SSP2CON2bits	set	3802
    98   000000                     _RX4PPS	set	3605
    99   000000                     _SSP2CLKPPS	set	3612
   100   000000                     _SSP2DATPPS	set	3613
   101   000000                     _ANSELDbits	set	3751
   102   000000                     _SSP2ADD	set	3798
   103   000000                     _SSP2CON1bits	set	3801
   104   000000                     _RC4REG	set	3811
   105   000000                     _LATCbits	set	3963
   106   000000                     _LATEbits	set	3965
   107   000000                     _TRISCbits	set	3971
   108   000000                     _SSP2CON2	set	3802
   109   000000                     _TRISDbits	set	3972
   110   000000                     _CCPR4H	set	3873
   111   000000                     _CCPR3H	set	3877
   112   000000                     _SSP2STAT	set	3800
   113   000000                     _SSP2BUF	set	3797
   114   000000                     _PIE4bits	set	3629
   115   000000                     _RC7PPS	set	3689
   116   000000                     _RD5PPS	set	3695
   117   000000                     _RE2PPS	set	3700
   118   000000                     _RD6PPS	set	3696
   119   000000                     _T2PR	set	4028
   120   000000                     _T2CONbits	set	4029
   121   000000                     _CCPR2H	set	4006
   122   000000                     _CCPR1H	set	4010
   123   000000                     _TRISAbits	set	3969
   124   000000                     _RE4PPS	set	3702
   125   000000                     _RG6PPS	set	3720
   126   000000                     _INTCONbits	set	4082
   127   000000                     _T2CLKCONbits	set	4031
   128   000000                     _T2HLTbits	set	4030
   129   000000                     _CCP1CONbits	set	4011
   130   000000                     _CCPTMRS0bits	set	4013
   131   000000                     _CCP2CONbits	set	4007
   132   000000                     _LATAbits	set	3961
   133   000000                     _CCP3CONbits	set	3878
   134   000000                     _CCP4CONbits	set	3874
   135   000000                     _PIR4bits	set	3639
   136   000000                     _RC0PPS	set	3682
   137                           
   138                           	psect	smallconst
   139   000E00                     __psmallconst:
   140                           	callstack 0
   141   000E00  00                 	db	0
   142   000E01                     STR_1:
   143   000E01  52                 	db	82	;'R'
   144   000E02  20                 	db	32
   145   000E03  3D                 	db	61	;'='
   146   000E04  20                 	db	32
   147   000E05  25                 	db	37
   148   000E06  64                 	db	100	;'d'
   149   000E07  20                 	db	32
   150   000E08  2B                 	db	43
   151   000E09  20                 	db	32
   152   000E0A  42                 	db	66	;'B'
   153   000E0B  20                 	db	32
   154   000E0C  3D                 	db	61	;'='
   155   000E0D  20                 	db	32
   156   000E0E  25                 	db	37
   157   000E0F  64                 	db	100	;'d'
   158   000E10  20                 	db	32
   159   000E11  2B                 	db	43
   160   000E12  20                 	db	32
   161   000E13  47                 	db	71	;'G'
   162   000E14  20                 	db	32
   163   000E15  3D                 	db	61	;'='
   164   000E16  20                 	db	32
   165   000E17  25                 	db	37
   166   000E18  64                 	db	100	;'d'
   167   000E19  20                 	db	32
   168   000E1A  2B                 	db	43
   169   000E1B  20                 	db	32
   170   000E1C  43                 	db	67	;'C'
   171   000E1D  20                 	db	32
   172   000E1E  3D                 	db	61	;'='
   173   000E1F  20                 	db	32
   174   000E20  25                 	db	37
   175   000E21  64                 	db	100	;'d'
   176   000E22  00                 	db	0
   177   000E23  00                 	db	0	; dummy byte at the end
   178   000000                     
   179                           ; #config settings
   180                           
   181                           	psect	cinit
   182   001A72                     __pcinit:
   183                           	callstack 0
   184   001A72                     start_initialization:
   185                           	callstack 0
   186   001A72                     __initialization:
   187                           	callstack 0
   188                           
   189                           ; Clear objects allocated to BANK1 (60 bytes)
   190   001A72  EE01  F000         	lfsr	0,__pbssBANK1
   191   001A76  0E3C               	movlw	60
   192   001A78                     clear_0:
   193   001A78  6AEE               	clrf	postinc0,c
   194   001A7A  06E8               	decf	wreg,f,c
   195   001A7C  E1FD               	bnz	clear_0
   196                           
   197                           ; Clear objects allocated to BANK0 (57 bytes)
   198   001A7E  EE00  F0C1         	lfsr	0,__pbssBANK0
   199   001A82  0E39               	movlw	57
   200   001A84                     clear_1:
   201   001A84  6AEE               	clrf	postinc0,c
   202   001A86  06E8               	decf	wreg,f,c
   203   001A88  E1FD               	bnz	clear_1
   204                           
   205                           ; Clear objects allocated to COMRAM (4 bytes)
   206   001A8A  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   207   001A8C  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   208   001A8E  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   209   001A90  6A57               	clrf	__pbssCOMRAM& (0+255),c
   210   001A92                     end_of_initialization:
   211                           	callstack 0
   212   001A92                     __end_of__initialization:
   213                           	callstack 0
   214   001A92  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   215   001A94  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   216   001A96  0E00               	movlw	low (__Lsmallconst shr (0+16))
   217   001A98  6EF8               	movwf	tblptru,c
   218   001A9A  0E0E               	movlw	high __Lsmallconst
   219   001A9C  6EF7               	movwf	tblptrh,c
   220   001A9E  0100               	movlb	0
   221   001AA0  EF6D  F00A         	goto	_main	;jump to C main() function
   222                           
   223                           	psect	bssCOMRAM
   224   000057                     __pbssCOMRAM:
   225                           	callstack 0
   226   000057                     _TxBufReadCnt:
   227                           	callstack 0
   228   000057                     	ds	1
   229   000058                     _TxBufWriteCnt:
   230                           	callstack 0
   231   000058                     	ds	1
   232   000059                     _RxBufReadCnt:
   233                           	callstack 0
   234   000059                     	ds	1
   235   00005A                     _RxBufWriteCnt:
   236                           	callstack 0
   237   00005A                     	ds	1
   238                           
   239                           	psect	bssBANK0
   240   0000C1                     __pbssBANK0:
   241                           	callstack 0
   242   0000C1                     _EUSART4RXbuf:
   243                           	callstack 0
   244   0000C1                     	ds	20
   245   0000D5                     _width:
   246                           	callstack 0
   247   0000D5                     	ds	2
   248   0000D7                     _prec:
   249                           	callstack 0
   250   0000D7                     	ds	2
   251   0000D9                     _flags:
   252                           	callstack 0
   253   0000D9                     	ds	1
   254   0000DA                     _dbuf:
   255                           	callstack 0
   256   0000DA                     	ds	32
   257                           
   258                           	psect	bssBANK1
   259   000100                     __pbssBANK1:
   260                           	callstack 0
   261   000100                     _EUSART4TXbuf:
   262                           	callstack 0
   263   000100                     	ds	60
   264                           
   265                           	psect	cstackBANK0
   266   000060                     __pcstackBANK0:
   267                           	callstack 0
   268   000060                     ?_vfprintf:
   269                           	callstack 0
   270   000060                     vfprintf@fp:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x0
   274   000060                     	ds	2
   275   000062                     vfprintf@fmt:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x2
   279   000062                     	ds	2
   280   000064                     vfprintf@ap:
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0x4
   284   000064                     	ds	2
   285   000066                     ?_sprintf:
   286                           	callstack 0
   287   000066                     sprintf@s:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0x6
   291   000066                     	ds	2
   292   000068                     sprintf@fmt:
   293                           	callstack 0
   294                           
   295                           ; 2 bytes @ 0x8
   296   000068                     	ds	10
   297   000072                     sprintf@ap:
   298                           	callstack 0
   299                           
   300                           ; 2 bytes @ 0x12
   301   000072                     	ds	2
   302   000074                     sprintf@f:
   303                           	callstack 0
   304                           
   305                           ; 11 bytes @ 0x14
   306   000074                     	ds	11
   307   00007F                     main@buf:
   308                           	callstack 0
   309                           
   310                           ; 40 bytes @ 0x1F
   311   00007F                     	ds	40
   312   0000A7                     main@R:
   313                           	callstack 0
   314                           
   315                           ; 2 bytes @ 0x47
   316   0000A7                     	ds	2
   317   0000A9                     main@B:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0x49
   321   0000A9                     	ds	2
   322   0000AB                     main@G:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0x4B
   326   0000AB                     	ds	2
   327   0000AD                     main@C:
   328                           	callstack 0
   329                           
   330                           ; 2 bytes @ 0x4D
   331   0000AD                     	ds	2
   332   0000AF                     main@motorL:
   333                           	callstack 0
   334                           
   335                           ; 9 bytes @ 0x4F
   336   0000AF                     	ds	9
   337   0000B8                     main@motorR:
   338                           	callstack 0
   339                           
   340                           ; 9 bytes @ 0x58
   341   0000B8                     	ds	9
   342                           
   343                           	psect	cstackCOMRAM
   344   000001                     __pcstackCOMRAM:
   345                           	callstack 0
   346   000001                     ??_getCharFromTxBuf:
   347   000001                     putCharToRxBuf@byte:
   348                           	callstack 0
   349   000001                     
   350                           ; 1 bytes @ 0x0
   351   000001                     	ds	2
   352   000003                     ??_HighISR:
   353                           
   354                           ; 1 bytes @ 0x2
   355   000003                     	ds	2
   356   000005                     ??_I2C_2_Master_Idle:
   357   000005                     ?___aodiv:
   358                           	callstack 0
   359   000005                     ?___aomod:
   360                           	callstack 0
   361   000005                     sendCharSerial4@charToSend:
   362                           	callstack 0
   363   000005                     initDCmotorsPWM@PWMperiod:
   364                           	callstack 0
   365   000005                     fputc@c:
   366                           	callstack 0
   367   000005                     ___aodiv@dividend:
   368                           	callstack 0
   369   000005                     ___aomod@dividend:
   370                           	callstack 0
   371                           
   372                           ; 8 bytes @ 0x4
   373   000005                     	ds	1
   374   000006                     ??_I2C_2_Master_Read:
   375   000006                     I2C_2_Master_Write@data_byte:
   376                           	callstack 0
   377   000006                     sendStringSerial4@string:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x5
   381   000006                     	ds	1
   382   000007                     color_writetoaddr@value:
   383                           	callstack 0
   384   000007                     I2C_2_Master_Read@ack:
   385                           	callstack 0
   386   000007                     fputc@fp:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0x6
   390   000007                     	ds	1
   391   000008                     color_writetoaddr@address:
   392                           	callstack 0
   393   000008                     I2C_2_Master_Read@tmp:
   394                           	callstack 0
   395                           
   396                           ; 1 bytes @ 0x7
   397   000008                     	ds	1
   398   000009                     ??_fputc:
   399   000009                     ??_color_click_init:
   400   000009                     ?_color_read_Red:
   401                           	callstack 0
   402   000009                     ?_color_read_Blue:
   403                           	callstack 0
   404   000009                     ?_color_read_Green:
   405                           	callstack 0
   406   000009                     ?_color_read_Clear:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x8
   410   000009                     	ds	2
   411   00000B                     ??_color_read_Red:
   412   00000B                     ??_color_read_Blue:
   413   00000B                     ??_color_read_Green:
   414   00000B                     ??_color_read_Clear:
   415                           
   416                           ; 1 bytes @ 0xA
   417   00000B                     	ds	2
   418   00000D                     ___aodiv@divisor:
   419                           	callstack 0
   420   00000D                     ___aomod@divisor:
   421                           	callstack 0
   422                           
   423                           ; 8 bytes @ 0xC
   424   00000D                     	ds	1
   425   00000E                     color_read_Red@tmp:
   426                           	callstack 0
   427   00000E                     color_read_Blue@tmp:
   428                           	callstack 0
   429   00000E                     color_read_Green@tmp:
   430                           	callstack 0
   431   00000E                     color_read_Clear@tmp:
   432                           	callstack 0
   433   00000E                     fputs@s:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0xD
   437   00000E                     	ds	2
   438   000010                     fputs@fp:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0xF
   442   000010                     	ds	2
   443   000012                     fputs@c:
   444                           	callstack 0
   445                           
   446                           ; 1 bytes @ 0x11
   447   000012                     	ds	1
   448   000013                     fputs@i:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x12
   452   000013                     	ds	2
   453   000015                     ___aodiv@counter:
   454                           	callstack 0
   455   000015                     ___aomod@counter:
   456                           	callstack 0
   457   000015                     pad@fp:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x14
   461   000015                     	ds	1
   462   000016                     ___aodiv@sign:
   463                           	callstack 0
   464   000016                     ___aomod@sign:
   465                           	callstack 0
   466                           
   467                           ; 1 bytes @ 0x15
   468   000016                     	ds	1
   469   000017                     ?_abs:
   470                           	callstack 0
   471   000017                     pad@buf:
   472                           	callstack 0
   473   000017                     abs@a:
   474                           	callstack 0
   475   000017                     ___aodiv@quotient:
   476                           	callstack 0
   477                           
   478                           ; 8 bytes @ 0x16
   479   000017                     	ds	2
   480   000019                     ??_abs:
   481   000019                     pad@p:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x18
   485   000019                     	ds	2
   486   00001B                     ??_pad:
   487                           
   488                           ; 1 bytes @ 0x1A
   489   00001B                     	ds	1
   490   00001C                     pad@i:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x1B
   494   00001C                     	ds	2
   495   00001E                     pad@w:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x1D
   499   00001E                     	ds	2
   500   000020                     dtoa@fp:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x1F
   504   000020                     	ds	2
   505   000022                     dtoa@d:
   506                           	callstack 0
   507                           
   508                           ; 8 bytes @ 0x21
   509   000022                     	ds	8
   510   00002A                     ??_dtoa:
   511                           
   512                           ; 1 bytes @ 0x29
   513   00002A                     	ds	8
   514   000032                     _dtoa$2080:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x31
   518   000032                     	ds	2
   519   000034                     dtoa@p:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x33
   523   000034                     	ds	2
   524   000036                     dtoa@w:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x35
   528   000036                     	ds	2
   529   000038                     dtoa@n:
   530                           	callstack 0
   531                           
   532                           ; 8 bytes @ 0x37
   533   000038                     	ds	8
   534   000040                     dtoa@s:
   535                           	callstack 0
   536                           
   537                           ; 1 bytes @ 0x3F
   538   000040                     	ds	1
   539   000041                     dtoa@i:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x40
   543   000041                     	ds	2
   544   000043                     vfpfcnvrt@fp:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x42
   548   000043                     	ds	2
   549   000045                     vfpfcnvrt@fmt:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x44
   553   000045                     	ds	2
   554   000047                     vfpfcnvrt@ap:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x46
   558   000047                     	ds	2
   559   000049                     ??_vfpfcnvrt:
   560                           
   561                           ; 1 bytes @ 0x48
   562   000049                     	ds	2
   563   00004B                     vfpfcnvrt@convarg:
   564                           	callstack 0
   565                           
   566                           ; 8 bytes @ 0x4A
   567   00004B                     	ds	8
   568   000053                     vfpfcnvrt@cp:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x52
   572   000053                     	ds	2
   573   000055                     vfprintf@cfmt:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x54
   577   000055                     	ds	2
   578   000057                     
   579                           ; 1 bytes @ 0x56
   580 ;;
   581 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   582 ;;
   583 ;; *************** function _main *****************
   584 ;; Defined at:
   585 ;;		line 21 in file "main.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;		None
   588 ;; Auto vars:     Size  Location     Type
   589 ;;  buf            40   31[BANK0 ] unsigned char [40]
   590 ;;  motorR          9   88[BANK0 ] struct DC_motor
   591 ;;  motorL          9   79[BANK0 ] struct DC_motor
   592 ;;  C               2   77[BANK0 ] unsigned int 
   593 ;;  G               2   75[BANK0 ] unsigned int 
   594 ;;  B               2   73[BANK0 ] unsigned int 
   595 ;;  R               2   71[BANK0 ] unsigned int 
   596 ;; Return value:  Size  Location     Type
   597 ;;                  1    wreg      void 
   598 ;; Registers used:
   599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   600 ;; Tracked objects:
   601 ;;		On entry : 0/0
   602 ;;		On exit  : 0/0
   603 ;;		Unchanged: 0/0
   604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   606 ;;      Locals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   608 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   609 ;;Total ram usage:       66 bytes
   610 ;; Hardware stack levels required when called: 10
   611 ;; This function calls:
   612 ;;		_I2C_2_Master_Init
   613 ;;		_Interrupts_init
   614 ;;		_color_click_init
   615 ;;		_color_read_Blue
   616 ;;		_color_read_Clear
   617 ;;		_color_read_Green
   618 ;;		_color_read_Red
   619 ;;		_initDCmotorsPWM
   620 ;;		_initUSART4
   621 ;;		_sendStringSerial4
   622 ;;		_sprintf
   623 ;; This function is called by:
   624 ;;		Startup code after reset
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628                           	psect	text0
   629   0014DA                     __ptext0:
   630                           	callstack 0
   631   0014DA                     _main:
   632                           	callstack 21
   633   0014DA                     
   634                           ;main.c: 23:     initDCmotorsPWM(99);
   635   0014DA  0E00               	movlw	0
   636   0014DC  6E06               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   637   0014DE  0E63               	movlw	99
   638   0014E0  6E05               	movwf	initDCmotorsPWM@PWMperiod^0,c
   639   0014E2  EC46  F00B         	call	_initDCmotorsPWM	;wreg free
   640   0014E6                     
   641                           ;main.c: 25:     struct DC_motor motorL, motorR;;main.c: 27:     motorL.power=0;
   642   0014E6  0E00               	movlw	0
   643   0014E8  0100               	movlb	0	; () banked
   644   0014EA  6FAF               	movwf	main@motorL& (0+255),b
   645   0014EC                     
   646                           ; BSR set to: 0
   647                           ;main.c: 28:     motorL.direction=1;
   648   0014EC  0E01               	movlw	1
   649   0014EE  6FB0               	movwf	(main@motorL+1)& (0+255),b
   650   0014F0                     
   651                           ; BSR set to: 0
   652                           ;main.c: 29:     motorL.brakemode=1;
   653   0014F0  0E01               	movlw	1
   654   0014F2  6FB1               	movwf	(main@motorL+2)& (0+255),b
   655   0014F4                     
   656                           ; BSR set to: 0
   657                           ;main.c: 30:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   658   0014F4  0EAA               	movlw	170
   659   0014F6  6FB4               	movwf	(main@motorL+5)& (0+255),b
   660   0014F8  0E0F               	movlw	15
   661   0014FA  6FB5               	movwf	(main@motorL+6)& (0+255),b
   662   0014FC                     
   663                           ; BSR set to: 0
   664                           ;main.c: 31:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   665   0014FC  0EA6               	movlw	166
   666   0014FE  6FB6               	movwf	(main@motorL+7)& (0+255),b
   667   001500  0E0F               	movlw	15
   668   001502  6FB7               	movwf	(main@motorL+8)& (0+255),b
   669   001504                     
   670                           ; BSR set to: 0
   671                           ;main.c: 32:     motorL.PWMperiod=99;
   672   001504  0E00               	movlw	0
   673   001506  6FB3               	movwf	(main@motorL+4)& (0+255),b
   674   001508  0E63               	movlw	99
   675   00150A  6FB2               	movwf	(main@motorL+3)& (0+255),b
   676   00150C                     
   677                           ; BSR set to: 0
   678                           ;main.c: 34:     motorR.power=0;
   679   00150C  0E00               	movlw	0
   680   00150E  6FB8               	movwf	main@motorR& (0+255),b
   681   001510                     
   682                           ; BSR set to: 0
   683                           ;main.c: 35:     motorR.direction=1;
   684   001510  0E01               	movlw	1
   685   001512  6FB9               	movwf	(main@motorR+1)& (0+255),b
   686   001514                     
   687                           ; BSR set to: 0
   688                           ;main.c: 36:     motorR.brakemode=1;
   689   001514  0E01               	movlw	1
   690   001516  6FBA               	movwf	(main@motorR+2)& (0+255),b
   691   001518                     
   692                           ; BSR set to: 0
   693                           ;main.c: 37:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   694   001518  0E25               	movlw	37
   695   00151A  6FBD               	movwf	(main@motorR+5)& (0+255),b
   696   00151C  0E0F               	movlw	15
   697   00151E  6FBE               	movwf	(main@motorR+6)& (0+255),b
   698   001520                     
   699                           ; BSR set to: 0
   700                           ;main.c: 38:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   701   001520  0E21               	movlw	33
   702   001522  6FBF               	movwf	(main@motorR+7)& (0+255),b
   703   001524  0E0F               	movlw	15
   704   001526  6FC0               	movwf	(main@motorR+8)& (0+255),b
   705   001528                     
   706                           ; BSR set to: 0
   707                           ;main.c: 39:     motorR.PWMperiod=99;
   708   001528  0E00               	movlw	0
   709   00152A  6FBC               	movwf	(main@motorR+4)& (0+255),b
   710   00152C  0E63               	movlw	99
   711   00152E  6FBB               	movwf	(main@motorR+3)& (0+255),b
   712   001530                     
   713                           ; BSR set to: 0
   714                           ;main.c: 44:     color_click_init();
   715   001530  EC1F  F00D         	call	_color_click_init	;wreg free
   716   001534                     
   717                           ;main.c: 45:     I2C_2_Master_Init();
   718   001534  EC80  F00D         	call	_I2C_2_Master_Init	;wreg free
   719   001538                     
   720                           ;main.c: 47:     initUSART4();
   721   001538  ECBE  F00D         	call	_initUSART4	;wreg free
   722   00153C                     
   723                           ;main.c: 48:     Interrupts_init();
   724   00153C  ECFC  F00D         	call	_Interrupts_init	;wreg free
   725   001540                     
   726                           ;main.c: 51:     TRISGbits.TRISG1 = 0;
   727   001540  9287               	bcf	135,1,c	;volatile
   728   001542                     
   729                           ;main.c: 52:     TRISAbits.TRISA4 = 0;
   730   001542  9881               	bcf	129,4,c	;volatile
   731   001544                     
   732                           ;main.c: 53:     TRISFbits.TRISF7 = 0;
   733   001544  9E86               	bcf	134,7,c	;volatile
   734   001546                     
   735                           ;main.c: 55:     LATGbits.LATG1 = 0;
   736   001546  927F               	bcf	127,1,c	;volatile
   737   001548                     
   738                           ;main.c: 56:     LATAbits.LATA4 = 0;
   739   001548  9879               	bcf	121,4,c	;volatile
   740   00154A                     
   741                           ;main.c: 57:     LATFbits.LATF7 = 0;
   742   00154A  9E7E               	bcf	126,7,c	;volatile
   743   00154C                     
   744                           ;main.c: 61:     unsigned int R = color_read_Red();
   745   00154C  EC1C  F00C         	call	_color_read_Red	;wreg free
   746   001550  C009  F0A7         	movff	?_color_read_Red,main@R
   747   001554  C00A  F0A8         	movff	?_color_read_Red+1,main@R+1
   748   001558                     
   749                           ;main.c: 62:     unsigned int B = color_read_Blue();
   750   001558  EC94  F00C         	call	_color_read_Blue	;wreg free
   751   00155C  C009  F0A9         	movff	?_color_read_Blue,main@B
   752   001560  C00A  F0AA         	movff	?_color_read_Blue+1,main@B+1
   753   001564                     
   754                           ;main.c: 63:     unsigned int G = color_read_Green();
   755   001564  EC44  F00C         	call	_color_read_Green	;wreg free
   756   001568  C009  F0AB         	movff	?_color_read_Green,main@G
   757   00156C  C00A  F0AC         	movff	?_color_read_Green+1,main@G+1
   758   001570                     
   759                           ;main.c: 64:     unsigned int C = color_read_Clear();
   760   001570  EC6C  F00C         	call	_color_read_Clear	;wreg free
   761   001574  C009  F0AD         	movff	?_color_read_Clear,main@C
   762   001578  C00A  F0AE         	movff	?_color_read_Clear+1,main@C+1
   763   00157C                     
   764                           ;main.c: 66:     char buf[40];;main.c: 67:     sprintf(buf,"R = %d + B = %d + G = %d + C
      +                           = %d",R,B,G,C);
   765   00157C  0E7F               	movlw	low main@buf
   766   00157E  0100               	movlb	0	; () banked
   767   001580  6F66               	movwf	sprintf@s& (0+255),b
   768   001582  0E00               	movlw	high main@buf
   769   001584  6F67               	movwf	(sprintf@s+1)& (0+255),b
   770   001586  0E01               	movlw	low STR_1
   771   001588  6F68               	movwf	sprintf@fmt& (0+255),b
   772   00158A  0E0E               	movlw	high STR_1
   773   00158C  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
   774   00158E  C0A7  F06A         	movff	main@R,?_sprintf+4
   775   001592  C0A8  F06B         	movff	main@R+1,?_sprintf+5
   776   001596  C0A9  F06C         	movff	main@B,?_sprintf+6
   777   00159A  C0AA  F06D         	movff	main@B+1,?_sprintf+7
   778   00159E  C0AB  F06E         	movff	main@G,?_sprintf+8
   779   0015A2  C0AC  F06F         	movff	main@G+1,?_sprintf+9
   780   0015A6  C0AD  F070         	movff	main@C,?_sprintf+10
   781   0015AA  C0AE  F071         	movff	main@C+1,?_sprintf+11
   782   0015AE  ECCB  F00B         	call	_sprintf	;wreg free
   783   0015B2                     
   784                           ;main.c: 69:     sendStringSerial4(buf);
   785   0015B2  0E7F               	movlw	low main@buf
   786   0015B4  6E06               	movwf	sendStringSerial4@string^0,c
   787   0015B6  0E00               	movlw	high main@buf
   788   0015B8  6E07               	movwf	(sendStringSerial4@string+1)^0,c
   789   0015BA  EC52  F00D         	call	_sendStringSerial4	;wreg free
   790   0015BE  EF3B  F000         	goto	start
   791   0015C2                     __end_of_main:
   792                           	callstack 0
   793                           
   794 ;; *************** function _sprintf *****************
   795 ;; Defined at:
   796 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;  s               2    6[BANK0 ] PTR unsigned char 
   799 ;;		 -> main@buf(40), 
   800 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
   801 ;;		 -> STR_1(34), 
   802 ;; Auto vars:     Size  Location     Type
   803 ;;  f              11   20[BANK0 ] struct _IO_FILE
   804 ;;  ap              2   18[BANK0 ] PTR void [1]
   805 ;;		 -> ?_sprintf(2), 
   806 ;;  ret             2    0        int 
   807 ;; Return value:  Size  Location     Type
   808 ;;                  2    6[BANK0 ] int 
   809 ;; Registers used:
   810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   816 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   817 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   819 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   820 ;;Total ram usage:       25 bytes
   821 ;; Hardware stack levels used: 1
   822 ;; Hardware stack levels required when called: 9
   823 ;; This function calls:
   824 ;;		_vfprintf
   825 ;; This function is called by:
   826 ;;		_main
   827 ;; This function uses a non-reentrant model
   828 ;;
   829                           
   830                           	psect	text1
   831   001796                     __ptext1:
   832                           	callstack 0
   833   001796                     _sprintf:
   834                           	callstack 21
   835   001796  0E6A               	movlw	low (?_sprintf+4)
   836   001798  0100               	movlb	0	; () banked
   837   00179A  6F72               	movwf	sprintf@ap& (0+255),b
   838   00179C  0E00               	movlw	high (?_sprintf+4)
   839   00179E  6F73               	movwf	(sprintf@ap+1)& (0+255),b
   840   0017A0  C066  F074         	movff	sprintf@s,sprintf@f
   841   0017A4  C067  F075         	movff	sprintf@s+1,sprintf@f+1
   842   0017A8                     
   843                           ; BSR set to: 0
   844   0017A8  0E00               	movlw	0
   845   0017AA  6F78               	movwf	(sprintf@f+4)& (0+255),b
   846   0017AC  0E00               	movlw	0
   847   0017AE  6F77               	movwf	(sprintf@f+3)& (0+255),b
   848   0017B0                     
   849                           ; BSR set to: 0
   850   0017B0  0E00               	movlw	0
   851   0017B2  6F7E               	movwf	(sprintf@f+10)& (0+255),b
   852   0017B4  0E00               	movlw	0
   853   0017B6  6F7D               	movwf	(sprintf@f+9)& (0+255),b
   854   0017B8                     
   855                           ; BSR set to: 0
   856   0017B8  0E74               	movlw	low sprintf@f
   857   0017BA  6F60               	movwf	vfprintf@fp& (0+255),b
   858   0017BC  0E00               	movlw	high sprintf@f
   859   0017BE  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
   860   0017C0  C068  F062         	movff	sprintf@fmt,vfprintf@fmt
   861   0017C4  C069  F063         	movff	sprintf@fmt+1,vfprintf@fmt+1
   862   0017C8  0E72               	movlw	low sprintf@ap
   863   0017CA  6F64               	movwf	vfprintf@ap& (0+255),b
   864   0017CC  0E00               	movlw	high sprintf@ap
   865   0017CE  6F65               	movwf	(vfprintf@ap+1)& (0+255),b
   866   0017D0  ECF4  F00B         	call	_vfprintf	;wreg free
   867   0017D4  0100               	movlb	0	; () banked
   868   0017D6  5177               	movf	(sprintf@f+3)& (0+255),w,b
   869   0017D8  2566               	addwf	sprintf@s& (0+255),w,b
   870   0017DA  6ED9               	movwf	fsr2l,c
   871   0017DC  5178               	movf	(sprintf@f+4)& (0+255),w,b
   872   0017DE  2167               	addwfc	(sprintf@s+1)& (0+255),w,b
   873   0017E0  6EDA               	movwf	fsr2h,c
   874   0017E2  0E00               	movlw	0
   875   0017E4  6EDF               	movwf	indf2,c
   876   0017E6                     
   877                           ; BSR set to: 0
   878   0017E6  0012               	return		;funcret
   879   0017E8                     __end_of_sprintf:
   880                           	callstack 0
   881                           
   882 ;; *************** function _vfprintf *****************
   883 ;; Defined at:
   884 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   885 ;; Parameters:    Size  Location     Type
   886 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
   887 ;;		 -> sprintf@f(11), 
   888 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   889 ;;		 -> STR_1(34), 
   890 ;;  ap              2    4[BANK0 ] PTR PTR void 
   891 ;;		 -> sprintf@ap(2), 
   892 ;; Auto vars:     Size  Location     Type
   893 ;;  cfmt            2   84[COMRAM] PTR unsigned char 
   894 ;;		 -> STR_1(34), 
   895 ;; Return value:  Size  Location     Type
   896 ;;                  2    0[BANK0 ] int 
   897 ;; Registers used:
   898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   904 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   905 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   907 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   908 ;;Total ram usage:        8 bytes
   909 ;; Hardware stack levels used: 1
   910 ;; Hardware stack levels required when called: 8
   911 ;; This function calls:
   912 ;;		_vfpfcnvrt
   913 ;; This function is called by:
   914 ;;		_sprintf
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918                           	psect	text2
   919   0017E8                     __ptext2:
   920                           	callstack 0
   921   0017E8                     _vfprintf:
   922                           	callstack 21
   923   0017E8                     
   924                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
   925   0017E8  C062  F055         	movff	vfprintf@fmt,vfprintf@cfmt
   926   0017EC  C063  F056         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   927                           
   928                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   929   0017F0  EF08  F00C         	goto	l2379
   930   0017F4                     l2377:
   931                           
   932                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   933   0017F4  C060  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
   934   0017F8  C061  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   935   0017FC  0E55               	movlw	low vfprintf@cfmt
   936   0017FE  6E45               	movwf	vfpfcnvrt@fmt^0,c
   937   001800  0E00               	movlw	high vfprintf@cfmt
   938   001802  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
   939   001804  C064  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
   940   001808  C065  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   941   00180C  ECC6  F009         	call	_vfpfcnvrt	;wreg free
   942   001810                     l2379:
   943                           
   944                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   945   001810  C055  FFF6         	movff	vfprintf@cfmt,tblptrl
   946   001814  C056  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   947   001818                     	if	0	;tblptru may be non-zero
   948   001818                     	endif
   949   001818                     	if	0	;tblptru may be non-zero
   950   001818                     	endif
   951   001818  0008               	tblrd		*
   952   00181A  50F5               	movf	tablat,w,c
   953   00181C  0900               	iorlw	0
   954   00181E  A4D8               	btfss	status,2,c
   955   001820  EF14  F00C         	goto	u1481
   956   001824  EF16  F00C         	goto	u1480
   957   001828                     u1481:
   958   001828  EFFA  F00B         	goto	l2377
   959   00182C                     u1480:
   960   00182C                     
   961                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
   962   00182C  0E00               	movlw	0
   963   00182E  0100               	movlb	0	; () banked
   964   001830  6F61               	movwf	(?_vfprintf+1)& (0+255),b
   965   001832  0E00               	movlw	0
   966   001834  6F60               	movwf	?_vfprintf& (0+255),b
   967   001836                     
   968                           ; BSR set to: 0
   969   001836  0012               	return		;funcret
   970   001838                     __end_of_vfprintf:
   971                           	callstack 0
   972                           
   973 ;; *************** function _vfpfcnvrt *****************
   974 ;; Defined at:
   975 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
   978 ;;		 -> sprintf@f(11), 
   979 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
   980 ;;		 -> vfprintf@cfmt(2), 
   981 ;;  ap              2   70[COMRAM] PTR PTR void 
   982 ;;		 -> sprintf@ap(2), 
   983 ;; Auto vars:     Size  Location     Type
   984 ;;  convarg         8   74[COMRAM] struct .
   985 ;;  cp              2   82[COMRAM] PTR unsigned char 
   986 ;;		 -> STR_1(34), 
   987 ;;  i               2    0        int 
   988 ;;  done            2    0        int 
   989 ;;  c               1    0        unsigned char 
   990 ;; Return value:  Size  Location     Type
   991 ;;                  1    wreg      void 
   992 ;; Registers used:
   993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   999 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1000 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1001 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1002 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1003 ;;Total ram usage:       18 bytes
  1004 ;; Hardware stack levels used: 1
  1005 ;; Hardware stack levels required when called: 7
  1006 ;; This function calls:
  1007 ;;		_dtoa
  1008 ;;		_fputc
  1009 ;; This function is called by:
  1010 ;;		_vfprintf
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           	psect	text3
  1015   00138C                     __ptext3:
  1016                           	callstack 0
  1017   00138C                     _vfpfcnvrt:
  1018                           	callstack 21
  1019   00138C                     
  1020                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1021   00138C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1022   001390  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1023   001394  CFDE FFF6          	movff	postinc2,tblptrl
  1024   001398  CFDD FFF7          	movff	postdec2,tblptrh
  1025   00139C                     	if	0	;tblptru may be non-zero
  1026   00139C                     	endif
  1027   00139C                     	if	0	;tblptru may be non-zero
  1028   00139C                     	endif
  1029   00139C  0008               	tblrd		*
  1030   00139E  50F5               	movf	tablat,w,c
  1031   0013A0  0A25               	xorlw	37
  1032   0013A2  A4D8               	btfss	status,2,c
  1033   0013A4  EFD6  F009         	goto	u1451
  1034   0013A8  EFD8  F009         	goto	u1450
  1035   0013AC                     u1451:
  1036   0013AC  EF58  F00A         	goto	l2369
  1037   0013B0                     u1450:
  1038   0013B0                     
  1039                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1040   0013B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1041   0013B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1042   0013B8  2ADE               	incf	postinc2,f,c
  1043   0013BA  0E00               	movlw	0
  1044   0013BC  22DD               	addwfc	postdec2,f,c
  1045   0013BE                     
  1046                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1047   0013BE  0E00               	movlw	0
  1048   0013C0  0100               	movlb	0	; () banked
  1049   0013C2  6FD6               	movwf	(_width+1)& (0+255),b
  1050   0013C4  0E00               	movlw	0
  1051   0013C6  6FD5               	movwf	_width& (0+255),b
  1052   0013C8  C0D5  F0D9         	movff	_width,_flags
  1053   0013CC                     
  1054                           ; BSR set to: 0
  1055                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1056   0013CC  69D7               	setf	_prec& (0+255),b
  1057   0013CE  69D8               	setf	(_prec+1)& (0+255),b
  1058   0013D0                     
  1059                           ; BSR set to: 0
  1060                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1061   0013D0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1062   0013D4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1063   0013D8  CFDE F053          	movff	postinc2,vfpfcnvrt@cp
  1064   0013DC  CFDD F054          	movff	postdec2,vfpfcnvrt@cp+1
  1065   0013E0                     
  1066                           ; BSR set to: 0
  1067                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1068   0013E0  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1069   0013E4  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1070   0013E8                     	if	0	;tblptru may be non-zero
  1071   0013E8                     	endif
  1072   0013E8                     	if	0	;tblptru may be non-zero
  1073   0013E8                     	endif
  1074   0013E8  0008               	tblrd		*
  1075   0013EA  50F5               	movf	tablat,w,c
  1076   0013EC  0A64               	xorlw	100
  1077   0013EE  B4D8               	btfsc	status,2,c
  1078   0013F0  EFFC  F009         	goto	u1461
  1079   0013F4  EFFE  F009         	goto	u1460
  1080   0013F8                     u1461:
  1081   0013F8  EF0C  F00A         	goto	l2359
  1082   0013FC                     u1460:
  1083   0013FC                     
  1084                           ; BSR set to: 0
  1085   0013FC  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1086   001400  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1087   001404                     	if	0	;tblptru may be non-zero
  1088   001404                     	endif
  1089   001404                     	if	0	;tblptru may be non-zero
  1090   001404                     	endif
  1091   001404  0008               	tblrd		*
  1092   001406  50F5               	movf	tablat,w,c
  1093   001408  0A69               	xorlw	105
  1094   00140A  A4D8               	btfss	status,2,c
  1095   00140C  EF0A  F00A         	goto	u1471
  1096   001410  EF0C  F00A         	goto	u1470
  1097   001414                     u1471:
  1098   001414  EF4F  F00A         	goto	l2365
  1099   001418                     u1470:
  1100   001418                     l2359:
  1101                           
  1102                           ; BSR set to: 0
  1103                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1104   001418  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1105   00141C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1106   001420  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1107   001424  0E02               	movlw	2
  1108   001426  26DE               	addwf	postinc2,f,c
  1109   001428  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1110   00142C  0E00               	movlw	0
  1111   00142E  22DD               	addwfc	postdec2,f,c
  1112   001430  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1113   001434  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1114   001438  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg
  1115   00143C  CFDD F04C          	movff	postdec2,vfpfcnvrt@convarg+1
  1116   001440  0E00               	movlw	0
  1117   001442  BE4C               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1118   001444  0EFF               	movlw	-1
  1119   001446  6E4D               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1120   001448  6E4E               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1121   00144A  6E4F               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1122   00144C  6E50               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1123   00144E  6E51               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1124   001450  6E52               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1125                           
  1126                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1127   001452  0E01               	movlw	1
  1128   001454  2453               	addwf	vfpfcnvrt@cp^0,w,c
  1129   001456  6E49               	movwf	??_vfpfcnvrt^0,c
  1130   001458  0E00               	movlw	0
  1131   00145A  2054               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1132   00145C  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1133   00145E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1134   001462  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1135   001466  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  1136   00146A  C04A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1137   00146E                     
  1138                           ; BSR set to: 0
  1139                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1140   00146E  C043  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  1141   001472  C044  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1142   001476  C04B  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  1143   00147A  C04C  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1144   00147E  C04D  F024         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1145   001482  C04E  F025         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1146   001486  C04F  F026         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1147   00148A  C050  F027         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1148   00148E  C051  F028         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1149   001492  C052  F029         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1150   001496  EC12  F007         	call	_dtoa	;wreg free
  1151   00149A  EF6C  F00A         	goto	l1093
  1152   00149E                     l2365:
  1153                           
  1154                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1155   00149E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1156   0014A2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1157   0014A6  2ADE               	incf	postinc2,f,c
  1158   0014A8  0E00               	movlw	0
  1159   0014AA  22DD               	addwfc	postdec2,f,c
  1160   0014AC  EF6C  F00A         	goto	l1093
  1161   0014B0                     l2369:
  1162                           
  1163                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1164   0014B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1165   0014B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1166   0014B8  CFDE FFF6          	movff	postinc2,tblptrl
  1167   0014BC  CFDD FFF7          	movff	postdec2,tblptrh
  1168   0014C0                     	if	0	;tblptru may be non-zero
  1169   0014C0                     	endif
  1170   0014C0                     	if	0	;tblptru may be non-zero
  1171   0014C0                     	endif
  1172   0014C0  0008               	tblrd		*
  1173   0014C2  50F5               	movf	tablat,w,c
  1174   0014C4  6E05               	movwf	fputc@c^0,c
  1175   0014C6  6A06               	clrf	(fputc@c+1)^0,c
  1176   0014C8  C043  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1177   0014CC  C044  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1178   0014D0  ECE1  F00A         	call	_fputc	;wreg free
  1179   0014D4  EF4F  F00A         	goto	l2365
  1180   0014D8                     l1093:
  1181   0014D8  0012               	return		;funcret
  1182   0014DA                     __end_of_vfpfcnvrt:
  1183                           	callstack 0
  1184                           
  1185 ;; *************** function _dtoa *****************
  1186 ;; Defined at:
  1187 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  1190 ;;		 -> sprintf@f(11), 
  1191 ;;  d               8   33[COMRAM] long long 
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;  n               8   55[COMRAM] long long 
  1194 ;;  i               2   64[COMRAM] int 
  1195 ;;  w               2   53[COMRAM] int 
  1196 ;;  p               2   51[COMRAM] int 
  1197 ;;  s               1   63[COMRAM] unsigned char 
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  1    wreg      void 
  1200 ;; Registers used:
  1201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1207 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1208 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1209 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1210 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1211 ;;Total ram usage:       35 bytes
  1212 ;; Hardware stack levels used: 1
  1213 ;; Hardware stack levels required when called: 6
  1214 ;; This function calls:
  1215 ;;		___aodiv
  1216 ;;		___aomod
  1217 ;;		_abs
  1218 ;;		_pad
  1219 ;; This function is called by:
  1220 ;;		_vfpfcnvrt
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           	psect	text4
  1225   000E24                     __ptext4:
  1226                           	callstack 0
  1227   000E24                     _dtoa:
  1228                           	callstack 21
  1229   000E24                     
  1230                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1231   000E24  C022  F038         	movff	dtoa@d,dtoa@n
  1232   000E28  C023  F039         	movff	dtoa@d+1,dtoa@n+1
  1233   000E2C  C024  F03A         	movff	dtoa@d+2,dtoa@n+2
  1234   000E30  C025  F03B         	movff	dtoa@d+3,dtoa@n+3
  1235   000E34  C026  F03C         	movff	dtoa@d+4,dtoa@n+4
  1236   000E38  C027  F03D         	movff	dtoa@d+5,dtoa@n+5
  1237   000E3C  C028  F03E         	movff	dtoa@d+6,dtoa@n+6
  1238   000E40  C029  F03F         	movff	dtoa@d+7,dtoa@n+7
  1239   000E44                     
  1240                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1241   000E44  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  1242   000E46  EF27  F007         	goto	u1351
  1243   000E4A  EF2A  F007         	goto	u1350
  1244   000E4E                     u1351:
  1245   000E4E  0E01               	movlw	1
  1246   000E50  EF2B  F007         	goto	u1360
  1247   000E54                     u1350:
  1248   000E54  0E00               	movlw	0
  1249   000E56                     u1360:
  1250   000E56  6E40               	movwf	dtoa@s^0,c
  1251   000E58                     
  1252                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1253   000E58  5040               	movf	dtoa@s^0,w,c
  1254   000E5A  B4D8               	btfsc	status,2,c
  1255   000E5C  EF32  F007         	goto	u1371
  1256   000E60  EF34  F007         	goto	u1370
  1257   000E64                     u1371:
  1258   000E64  EF44  F007         	goto	l2301
  1259   000E68                     u1370:
  1260   000E68                     
  1261                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1262   000E68  1E3F               	comf	(dtoa@n+7)^0,f,c
  1263   000E6A  1E3E               	comf	(dtoa@n+6)^0,f,c
  1264   000E6C  1E3D               	comf	(dtoa@n+5)^0,f,c
  1265   000E6E  1E3C               	comf	(dtoa@n+4)^0,f,c
  1266   000E70  1E3B               	comf	(dtoa@n+3)^0,f,c
  1267   000E72  1E3A               	comf	(dtoa@n+2)^0,f,c
  1268   000E74  1E39               	comf	(dtoa@n+1)^0,f,c
  1269   000E76  6C38               	negf	dtoa@n^0,c
  1270   000E78  0E00               	movlw	0
  1271   000E7A  2239               	addwfc	(dtoa@n+1)^0,f,c
  1272   000E7C  223A               	addwfc	(dtoa@n+2)^0,f,c
  1273   000E7E  223B               	addwfc	(dtoa@n+3)^0,f,c
  1274   000E80  223C               	addwfc	(dtoa@n+4)^0,f,c
  1275   000E82  223D               	addwfc	(dtoa@n+5)^0,f,c
  1276   000E84  223E               	addwfc	(dtoa@n+6)^0,f,c
  1277   000E86  223F               	addwfc	(dtoa@n+7)^0,f,c
  1278   000E88                     l2301:
  1279                           
  1280                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1281   000E88  0100               	movlb	0	; () banked
  1282   000E8A  BFD8               	btfsc	(_prec+1)& (0+255),7,b
  1283   000E8C  EF52  F007         	goto	u1380
  1284   000E90  51D8               	movf	(_prec+1)& (0+255),w,b
  1285   000E92  E106               	bnz	u1381
  1286   000E94  05D7               	decf	_prec& (0+255),w,b
  1287   000E96  B0D8               	btfsc	status,0,c
  1288   000E98  EF50  F007         	goto	u1381
  1289   000E9C  EF52  F007         	goto	u1380
  1290   000EA0                     u1381:
  1291   000EA0  EF58  F007         	goto	l1072
  1292   000EA4                     u1380:
  1293   000EA4                     
  1294                           ; BSR set to: 0
  1295   000EA4  0E00               	movlw	0
  1296   000EA6  6E35               	movwf	(dtoa@p+1)^0,c
  1297   000EA8  0E01               	movlw	1
  1298   000EAA  6E34               	movwf	dtoa@p^0,c
  1299   000EAC  EF5C  F007         	goto	l1074
  1300   000EB0                     l1072:
  1301                           
  1302                           ; BSR set to: 0
  1303   000EB0  C0D7  F034         	movff	_prec,dtoa@p
  1304   000EB4  C0D8  F035         	movff	_prec+1,dtoa@p+1
  1305   000EB8                     l1074:
  1306                           
  1307                           ; BSR set to: 0
  1308                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1309   000EB8  C0D5  F036         	movff	_width,dtoa@w
  1310   000EBC  C0D6  F037         	movff	_width+1,dtoa@w+1
  1311   000EC0                     
  1312                           ; BSR set to: 0
  1313                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1314   000EC0  5040               	movf	dtoa@s^0,w,c
  1315   000EC2  B4D8               	btfsc	status,2,c
  1316   000EC4  EF66  F007         	goto	u1391
  1317   000EC8  EF68  F007         	goto	u1390
  1318   000ECC                     u1391:
  1319   000ECC  EF7F  F007         	goto	l1075
  1320   000ED0                     u1390:
  1321   000ED0                     
  1322                           ; BSR set to: 0
  1323                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1324   000ED0  0636               	decf	dtoa@w^0,f,c
  1325   000ED2  A0D8               	btfss	status,0,c
  1326   000ED4  0637               	decf	(dtoa@w+1)^0,f,c
  1327   000ED6                     
  1328                           ; BSR set to: 0
  1329                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1330   000ED6  5040               	movf	dtoa@s^0,w,c
  1331   000ED8  A4D8               	btfss	status,2,c
  1332   000EDA  EF71  F007         	goto	u1401
  1333   000EDE  EF73  F007         	goto	u1400
  1334   000EE2                     u1401:
  1335   000EE2  EF79  F007         	goto	l2313
  1336   000EE6                     u1400:
  1337   000EE6                     
  1338                           ; BSR set to: 0
  1339   000EE6  0E00               	movlw	0
  1340   000EE8  6E33               	movwf	(_dtoa$2080+1)^0,c
  1341   000EEA  0E2B               	movlw	43
  1342   000EEC  6E32               	movwf	_dtoa$2080^0,c
  1343   000EEE  EF7D  F007         	goto	l2315
  1344   000EF2                     l2313:
  1345                           
  1346                           ; BSR set to: 0
  1347   000EF2  0E00               	movlw	0
  1348   000EF4  6E33               	movwf	(_dtoa$2080+1)^0,c
  1349   000EF6  0E2D               	movlw	45
  1350   000EF8  6E32               	movwf	_dtoa$2080^0,c
  1351   000EFA                     l2315:
  1352                           
  1353                           ; BSR set to: 0
  1354   000EFA  C032  F040         	movff	_dtoa$2080,dtoa@s
  1355   000EFE                     l1075:
  1356                           
  1357                           ; BSR set to: 0
  1358                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1359   000EFE  0E00               	movlw	0
  1360   000F00  6E42               	movwf	(dtoa@i+1)^0,c
  1361   000F02  0E1F               	movlw	31
  1362   000F04  6E41               	movwf	dtoa@i^0,c
  1363   000F06                     
  1364                           ; BSR set to: 0
  1365                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1366   000F06  0E00               	movlw	0
  1367   000F08  6FF9               	movwf	(_dbuf+31)& (0+255),b
  1368                           
  1369                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1370   000F0A  EF03  F008         	goto	l2329
  1371   000F0E                     l2319:
  1372                           
  1373                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1374   000F0E  0641               	decf	dtoa@i^0,f,c
  1375   000F10  A0D8               	btfss	status,0,c
  1376   000F12  0642               	decf	(dtoa@i+1)^0,f,c
  1377   000F14                     
  1378                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1379   000F14  0EDA               	movlw	low _dbuf
  1380   000F16  2441               	addwf	dtoa@i^0,w,c
  1381   000F18  6ED9               	movwf	fsr2l,c
  1382   000F1A  0E00               	movlw	high _dbuf
  1383   000F1C  2042               	addwfc	(dtoa@i+1)^0,w,c
  1384   000F1E  6EDA               	movwf	fsr2h,c
  1385   000F20  C038  F005         	movff	dtoa@n,___aomod@dividend
  1386   000F24  C039  F006         	movff	dtoa@n+1,___aomod@dividend+1
  1387   000F28  C03A  F007         	movff	dtoa@n+2,___aomod@dividend+2
  1388   000F2C  C03B  F008         	movff	dtoa@n+3,___aomod@dividend+3
  1389   000F30  C03C  F009         	movff	dtoa@n+4,___aomod@dividend+4
  1390   000F34  C03D  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  1391   000F38  C03E  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  1392   000F3C  C03F  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  1393   000F40  0E0A               	movlw	10
  1394   000F42  6E0D               	movwf	___aomod@divisor^0,c
  1395   000F44  0E00               	movlw	0
  1396   000F46  6E0E               	movwf	(___aomod@divisor+1)^0,c
  1397   000F48  0E00               	movlw	0
  1398   000F4A  6E0F               	movwf	(___aomod@divisor+2)^0,c
  1399   000F4C  0E00               	movlw	0
  1400   000F4E  6E10               	movwf	(___aomod@divisor+3)^0,c
  1401   000F50  0E00               	movlw	0
  1402   000F52  6E11               	movwf	(___aomod@divisor+4)^0,c
  1403   000F54  0E00               	movlw	0
  1404   000F56  6E12               	movwf	(___aomod@divisor+5)^0,c
  1405   000F58  0E00               	movlw	0
  1406   000F5A  6E13               	movwf	(___aomod@divisor+6)^0,c
  1407   000F5C  0E00               	movlw	0
  1408   000F5E  6E14               	movwf	(___aomod@divisor+7)^0,c
  1409   000F60  EC14  F009         	call	___aomod	;wreg free
  1410   000F64  C005  F02A         	movff	?___aomod,??_dtoa
  1411   000F68  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  1412   000F6C  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  1413   000F70  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  1414   000F74  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  1415   000F78  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  1416   000F7C  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  1417   000F80  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  1418   000F84  C02A  F017         	movff	??_dtoa,abs@a
  1419   000F88  C02B  F018         	movff	??_dtoa+1,abs@a+1
  1420   000F8C  ECFF  F00C         	call	_abs	;wreg free
  1421   000F90  5017               	movf	?_abs^0,w,c
  1422   000F92  0F30               	addlw	48
  1423   000F94  6EDF               	movwf	indf2,c
  1424   000F96                     
  1425                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1426   000F96  0634               	decf	dtoa@p^0,f,c
  1427   000F98  A0D8               	btfss	status,0,c
  1428   000F9A  0635               	decf	(dtoa@p+1)^0,f,c
  1429   000F9C                     
  1430                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1431   000F9C  0636               	decf	dtoa@w^0,f,c
  1432   000F9E  A0D8               	btfss	status,0,c
  1433   000FA0  0637               	decf	(dtoa@w+1)^0,f,c
  1434   000FA2                     
  1435                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1436   000FA2  C038  F005         	movff	dtoa@n,___aodiv@dividend
  1437   000FA6  C039  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  1438   000FAA  C03A  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  1439   000FAE  C03B  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  1440   000FB2  C03C  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  1441   000FB6  C03D  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  1442   000FBA  C03E  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  1443   000FBE  C03F  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  1444   000FC2  0E0A               	movlw	10
  1445   000FC4  6E0D               	movwf	___aodiv@divisor^0,c
  1446   000FC6  0E00               	movlw	0
  1447   000FC8  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  1448   000FCA  0E00               	movlw	0
  1449   000FCC  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  1450   000FCE  0E00               	movlw	0
  1451   000FD0  6E10               	movwf	(___aodiv@divisor+3)^0,c
  1452   000FD2  0E00               	movlw	0
  1453   000FD4  6E11               	movwf	(___aodiv@divisor+4)^0,c
  1454   000FD6  0E00               	movlw	0
  1455   000FD8  6E12               	movwf	(___aodiv@divisor+5)^0,c
  1456   000FDA  0E00               	movlw	0
  1457   000FDC  6E13               	movwf	(___aodiv@divisor+6)^0,c
  1458   000FDE  0E00               	movlw	0
  1459   000FE0  6E14               	movwf	(___aodiv@divisor+7)^0,c
  1460   000FE2  EC50  F008         	call	___aodiv	;wreg free
  1461   000FE6  C005  F038         	movff	?___aodiv,dtoa@n
  1462   000FEA  C006  F039         	movff	?___aodiv+1,dtoa@n+1
  1463   000FEE  C007  F03A         	movff	?___aodiv+2,dtoa@n+2
  1464   000FF2  C008  F03B         	movff	?___aodiv+3,dtoa@n+3
  1465   000FF6  C009  F03C         	movff	?___aodiv+4,dtoa@n+4
  1466   000FFA  C00A  F03D         	movff	?___aodiv+5,dtoa@n+5
  1467   000FFE  C00B  F03E         	movff	?___aodiv+6,dtoa@n+6
  1468   001002  C00C  F03F         	movff	?___aodiv+7,dtoa@n+7
  1469   001006                     l2329:
  1470                           
  1471                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1472   001006  BE42               	btfsc	(dtoa@i+1)^0,7,c
  1473   001008  EF0E  F008         	goto	u1411
  1474   00100C  5042               	movf	(dtoa@i+1)^0,w,c
  1475   00100E  E108               	bnz	u1410
  1476   001010  0441               	decf	dtoa@i^0,w,c
  1477   001012  A0D8               	btfss	status,0,c
  1478   001014  EF0E  F008         	goto	u1411
  1479   001018  EF10  F008         	goto	u1410
  1480   00101C                     u1411:
  1481   00101C  EF2C  F008         	goto	l2335
  1482   001020                     u1410:
  1483   001020  5038               	movf	dtoa@n^0,w,c
  1484   001022  1039               	iorwf	(dtoa@n+1)^0,w,c
  1485   001024  103A               	iorwf	(dtoa@n+2)^0,w,c
  1486   001026  103B               	iorwf	(dtoa@n+3)^0,w,c
  1487   001028  103C               	iorwf	(dtoa@n+4)^0,w,c
  1488   00102A  103D               	iorwf	(dtoa@n+5)^0,w,c
  1489   00102C  103E               	iorwf	(dtoa@n+6)^0,w,c
  1490   00102E  103F               	iorwf	(dtoa@n+7)^0,w,c
  1491   001030  A4D8               	btfss	status,2,c
  1492   001032  EF1D  F008         	goto	u1421
  1493   001036  EF1F  F008         	goto	u1420
  1494   00103A                     u1421:
  1495   00103A  EF87  F007         	goto	l2319
  1496   00103E                     u1420:
  1497   00103E  BE35               	btfsc	(dtoa@p+1)^0,7,c
  1498   001040  EF2C  F008         	goto	u1430
  1499   001044  5035               	movf	(dtoa@p+1)^0,w,c
  1500   001046  E106               	bnz	u1431
  1501   001048  0434               	decf	dtoa@p^0,w,c
  1502   00104A  B0D8               	btfsc	status,0,c
  1503   00104C  EF2A  F008         	goto	u1431
  1504   001050  EF2C  F008         	goto	u1430
  1505   001054                     u1431:
  1506   001054  EF87  F007         	goto	l2319
  1507   001058                     u1430:
  1508   001058                     l2335:
  1509                           
  1510                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1511   001058  5040               	movf	dtoa@s^0,w,c
  1512   00105A  B4D8               	btfsc	status,2,c
  1513   00105C  EF32  F008         	goto	u1441
  1514   001060  EF34  F008         	goto	u1440
  1515   001064                     u1441:
  1516   001064  EF3F  F008         	goto	l2341
  1517   001068                     u1440:
  1518   001068                     
  1519                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1520   001068  0641               	decf	dtoa@i^0,f,c
  1521   00106A  A0D8               	btfss	status,0,c
  1522   00106C  0642               	decf	(dtoa@i+1)^0,f,c
  1523   00106E                     
  1524                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1525   00106E  0EDA               	movlw	low _dbuf
  1526   001070  2441               	addwf	dtoa@i^0,w,c
  1527   001072  6ED9               	movwf	fsr2l,c
  1528   001074  0E00               	movlw	high _dbuf
  1529   001076  2042               	addwfc	(dtoa@i+1)^0,w,c
  1530   001078  6EDA               	movwf	fsr2h,c
  1531   00107A  C040  FFDF         	movff	dtoa@s,indf2
  1532   00107E                     l2341:
  1533                           
  1534                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1535   00107E  C020  F015         	movff	dtoa@fp,pad@fp
  1536   001082  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  1537   001086  0EDA               	movlw	low _dbuf
  1538   001088  2441               	addwf	dtoa@i^0,w,c
  1539   00108A  6E17               	movwf	pad@buf^0,c
  1540   00108C  0E00               	movlw	high _dbuf
  1541   00108E  2042               	addwfc	(dtoa@i+1)^0,w,c
  1542   001090  6E18               	movwf	(pad@buf+1)^0,c
  1543   001092  C036  F019         	movff	dtoa@w,pad@p
  1544   001096  C037  F01A         	movff	dtoa@w+1,pad@p+1
  1545   00109A  EC8E  F00B         	call	_pad	;wreg free
  1546   00109E  0012               	return		;funcret
  1547   0010A0                     __end_of_dtoa:
  1548                           	callstack 0
  1549                           
  1550 ;; *************** function _pad *****************
  1551 ;; Defined at:
  1552 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  1555 ;;		 -> sprintf@f(11), 
  1556 ;;  buf             2   22[COMRAM] PTR unsigned char 
  1557 ;;		 -> dbuf(32), 
  1558 ;;  p               2   24[COMRAM] int 
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;  w               2   29[COMRAM] int 
  1561 ;;  i               2   27[COMRAM] int 
  1562 ;; Return value:  Size  Location     Type
  1563 ;;                  1    wreg      void 
  1564 ;; Registers used:
  1565 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1571 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1572 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1573 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1574 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1575 ;;Total ram usage:       11 bytes
  1576 ;; Hardware stack levels used: 1
  1577 ;; Hardware stack levels required when called: 5
  1578 ;; This function calls:
  1579 ;;		_fputc
  1580 ;;		_fputs
  1581 ;; This function is called by:
  1582 ;;		_dtoa
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           	psect	text5
  1587   00171C                     __ptext5:
  1588                           	callstack 0
  1589   00171C                     _pad:
  1590                           	callstack 21
  1591   00171C                     
  1592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1593   00171C  BE1A               	btfsc	(pad@p+1)^0,7,c
  1594   00171E  EF93  F00B         	goto	u1321
  1595   001722  EF95  F00B         	goto	u1320
  1596   001726                     u1321:
  1597   001726  EF9B  F00B         	goto	l2279
  1598   00172A                     u1320:
  1599   00172A  C019  F01E         	movff	pad@p,pad@w
  1600   00172E  C01A  F01F         	movff	pad@p+1,pad@w+1
  1601   001732  EF9F  F00B         	goto	l1063
  1602   001736                     l2279:
  1603   001736  0E00               	movlw	0
  1604   001738  6E1F               	movwf	(pad@w+1)^0,c
  1605   00173A  0E00               	movlw	0
  1606   00173C  6E1E               	movwf	pad@w^0,c
  1607   00173E                     l1063:
  1608                           
  1609                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1610   00173E  0E00               	movlw	0
  1611   001740  6E1D               	movwf	(pad@i+1)^0,c
  1612   001742  0E00               	movlw	0
  1613   001744  6E1C               	movwf	pad@i^0,c
  1614                           
  1615                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1616   001746  EFB1  F00B         	goto	l2285
  1617   00174A                     l2281:
  1618                           
  1619                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1620   00174A  0E00               	movlw	0
  1621   00174C  6E06               	movwf	(fputc@c+1)^0,c
  1622   00174E  0E20               	movlw	32
  1623   001750  6E05               	movwf	fputc@c^0,c
  1624   001752  C015  F007         	movff	pad@fp,fputc@fp
  1625   001756  C016  F008         	movff	pad@fp+1,fputc@fp+1
  1626   00175A  ECE1  F00A         	call	_fputc	;wreg free
  1627   00175E                     
  1628                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1629   00175E  4A1C               	infsnz	pad@i^0,f,c
  1630   001760  2A1D               	incf	(pad@i+1)^0,f,c
  1631   001762                     l2285:
  1632                           
  1633                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1634   001762  501E               	movf	pad@w^0,w,c
  1635   001764  5C1C               	subwf	pad@i^0,w,c
  1636   001766  501D               	movf	(pad@i+1)^0,w,c
  1637   001768  0A80               	xorlw	128
  1638   00176A  6E1B               	movwf	??_pad^0,c
  1639   00176C  501F               	movf	(pad@w+1)^0,w,c
  1640   00176E  0A80               	xorlw	128
  1641   001770  581B               	subwfb	??_pad^0,w,c
  1642   001772  A0D8               	btfss	status,0,c
  1643   001774  EFBE  F00B         	goto	u1331
  1644   001778  EFC0  F00B         	goto	u1330
  1645   00177C                     u1331:
  1646   00177C  EFA5  F00B         	goto	l2281
  1647   001780                     u1330:
  1648   001780                     
  1649                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1650   001780  C017  F00E         	movff	pad@buf,fputs@s
  1651   001784  C018  F00F         	movff	pad@buf+1,fputs@s+1
  1652   001788  C015  F010         	movff	pad@fp,fputs@fp
  1653   00178C  C016  F011         	movff	pad@fp+1,fputs@fp+1
  1654   001790  ECBC  F00C         	call	_fputs	;wreg free
  1655   001794  0012               	return		;funcret
  1656   001796                     __end_of_pad:
  1657                           	callstack 0
  1658                           
  1659 ;; *************** function _fputs *****************
  1660 ;; Defined at:
  1661 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;  s               2   13[COMRAM] PTR const unsigned char 
  1664 ;;		 -> dbuf(32), 
  1665 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1666 ;;		 -> sprintf@f(11), 
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  i               2   18[COMRAM] int 
  1669 ;;  c               1   17[COMRAM] unsigned char 
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  2   13[COMRAM] int 
  1672 ;; Registers used:
  1673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1679 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1680 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1682 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1683 ;;Total ram usage:        7 bytes
  1684 ;; Hardware stack levels used: 1
  1685 ;; Hardware stack levels required when called: 4
  1686 ;; This function calls:
  1687 ;;		_fputc
  1688 ;; This function is called by:
  1689 ;;		_pad
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           	psect	text6
  1694   001978                     __ptext6:
  1695                           	callstack 0
  1696   001978                     _fputs:
  1697                           	callstack 21
  1698   001978  0E00               	movlw	0
  1699   00197A  6E14               	movwf	(fputs@i+1)^0,c
  1700   00197C  0E00               	movlw	0
  1701   00197E  6E13               	movwf	fputs@i^0,c
  1702   001980  EFCD  F00C         	goto	l2193
  1703   001984                     l2189:
  1704   001984  C012  F005         	movff	fputs@c,fputc@c
  1705   001988  6A06               	clrf	(fputc@c+1)^0,c
  1706   00198A  C010  F007         	movff	fputs@fp,fputc@fp
  1707   00198E  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  1708   001992  ECE1  F00A         	call	_fputc	;wreg free
  1709   001996  4A13               	infsnz	fputs@i^0,f,c
  1710   001998  2A14               	incf	(fputs@i+1)^0,f,c
  1711   00199A                     l2193:
  1712   00199A  5013               	movf	fputs@i^0,w,c
  1713   00199C  240E               	addwf	fputs@s^0,w,c
  1714   00199E  6ED9               	movwf	fsr2l,c
  1715   0019A0  5014               	movf	(fputs@i+1)^0,w,c
  1716   0019A2  200F               	addwfc	(fputs@s+1)^0,w,c
  1717   0019A4  6EDA               	movwf	fsr2h,c
  1718   0019A6  50DF               	movf	indf2,w,c
  1719   0019A8  6E12               	movwf	fputs@c^0,c
  1720   0019AA  5012               	movf	fputs@c^0,w,c
  1721   0019AC  A4D8               	btfss	status,2,c
  1722   0019AE  EFDB  F00C         	goto	u1181
  1723   0019B2  EFDD  F00C         	goto	u1180
  1724   0019B6                     u1181:
  1725   0019B6  EFC2  F00C         	goto	l2189
  1726   0019BA                     u1180:
  1727   0019BA  0012               	return		;funcret
  1728   0019BC                     __end_of_fputs:
  1729                           	callstack 0
  1730                           
  1731 ;; *************** function _fputc *****************
  1732 ;; Defined at:
  1733 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;  c               2    4[COMRAM] int 
  1736 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  1737 ;;		 -> sprintf@f(11), 
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;		None
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  2    4[COMRAM] int 
  1742 ;; Registers used:
  1743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1749 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1751 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1752 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1753 ;;Total ram usage:        9 bytes
  1754 ;; Hardware stack levels used: 1
  1755 ;; Hardware stack levels required when called: 3
  1756 ;; This function calls:
  1757 ;;		_putch
  1758 ;; This function is called by:
  1759 ;;		_pad
  1760 ;;		_vfpfcnvrt
  1761 ;;		_fputs
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           	psect	text7
  1766   0015C2                     __ptext7:
  1767                           	callstack 0
  1768   0015C2                     _fputc:
  1769                           	callstack 24
  1770   0015C2  5007               	movf	fputc@fp^0,w,c
  1771   0015C4  1008               	iorwf	(fputc@fp+1)^0,w,c
  1772   0015C6  B4D8               	btfsc	status,2,c
  1773   0015C8  EFE8  F00A         	goto	u1141
  1774   0015CC  EFEA  F00A         	goto	u1140
  1775   0015D0                     u1141:
  1776   0015D0  EFF3  F00A         	goto	l2177
  1777   0015D4                     u1140:
  1778   0015D4  5007               	movf	fputc@fp^0,w,c
  1779   0015D6  1008               	iorwf	(fputc@fp+1)^0,w,c
  1780   0015D8  A4D8               	btfss	status,2,c
  1781   0015DA  EFF1  F00A         	goto	u1151
  1782   0015DE  EFF3  F00A         	goto	u1150
  1783   0015E2                     u1151:
  1784   0015E2  EFF8  F00A         	goto	l2179
  1785   0015E6                     u1150:
  1786   0015E6                     l2177:
  1787   0015E6  5005               	movf	fputc@c^0,w,c
  1788   0015E8  EC11  F00E         	call	_putch
  1789   0015EC  EF45  F00B         	goto	l1118
  1790   0015F0                     l2179:
  1791   0015F0  EE20 F009          	lfsr	2,9
  1792   0015F4  5007               	movf	fputc@fp^0,w,c
  1793   0015F6  26D9               	addwf	fsr2l,f,c
  1794   0015F8  5008               	movf	(fputc@fp+1)^0,w,c
  1795   0015FA  22DA               	addwfc	fsr2h,f,c
  1796   0015FC  50DE               	movf	postinc2,w,c
  1797   0015FE  10DE               	iorwf	postinc2,w,c
  1798   001600  B4D8               	btfsc	status,2,c
  1799   001602  EF05  F00B         	goto	u1161
  1800   001606  EF07  F00B         	goto	u1160
  1801   00160A                     u1161:
  1802   00160A  EF22  F00B         	goto	l2183
  1803   00160E                     u1160:
  1804   00160E  EE20 F009          	lfsr	2,9
  1805   001612  5007               	movf	fputc@fp^0,w,c
  1806   001614  26D9               	addwf	fsr2l,f,c
  1807   001616  5008               	movf	(fputc@fp+1)^0,w,c
  1808   001618  22DA               	addwfc	fsr2h,f,c
  1809   00161A  EE10 F003          	lfsr	1,3
  1810   00161E  5007               	movf	fputc@fp^0,w,c
  1811   001620  26E1               	addwf	fsr1l,f,c
  1812   001622  5008               	movf	(fputc@fp+1)^0,w,c
  1813   001624  22E2               	addwfc	fsr1h,f,c
  1814   001626  50DE               	movf	postinc2,w,c
  1815   001628  5CE6               	subwf	postinc1,w,c
  1816   00162A  50E6               	movf	postinc1,w,c
  1817   00162C  0A80               	xorlw	128
  1818   00162E  6E0D               	movwf	(??_fputc+4)^0,c
  1819   001630  50DE               	movf	postinc2,w,c
  1820   001632  0A80               	xorlw	128
  1821   001634  580D               	subwfb	(??_fputc+4)^0,w,c
  1822   001636  B0D8               	btfsc	status,0,c
  1823   001638  EF20  F00B         	goto	u1171
  1824   00163C  EF22  F00B         	goto	u1170
  1825   001640                     u1171:
  1826   001640  EF45  F00B         	goto	l1118
  1827   001644                     u1170:
  1828   001644                     l2183:
  1829   001644  EE20 F003          	lfsr	2,3
  1830   001648  5007               	movf	fputc@fp^0,w,c
  1831   00164A  26D9               	addwf	fsr2l,f,c
  1832   00164C  5008               	movf	(fputc@fp+1)^0,w,c
  1833   00164E  22DA               	addwfc	fsr2h,f,c
  1834   001650  CFDE F009          	movff	postinc2,??_fputc
  1835   001654  CFDD F00A          	movff	postdec2,??_fputc+1
  1836   001658  C007  FFD9         	movff	fputc@fp,fsr2l
  1837   00165C  C008  FFDA         	movff	fputc@fp+1,fsr2h
  1838   001660  CFDE F00B          	movff	postinc2,??_fputc+2
  1839   001664  CFDD F00C          	movff	postdec2,??_fputc+3
  1840   001668  5009               	movf	??_fputc^0,w,c
  1841   00166A  240B               	addwf	(??_fputc+2)^0,w,c
  1842   00166C  6ED9               	movwf	fsr2l,c
  1843   00166E  500A               	movf	(??_fputc+1)^0,w,c
  1844   001670  200C               	addwfc	(??_fputc+3)^0,w,c
  1845   001672  6EDA               	movwf	fsr2h,c
  1846   001674  C005  FFDF         	movff	fputc@c,indf2
  1847   001678  EE20 F003          	lfsr	2,3
  1848   00167C  5007               	movf	fputc@fp^0,w,c
  1849   00167E  26D9               	addwf	fsr2l,f,c
  1850   001680  5008               	movf	(fputc@fp+1)^0,w,c
  1851   001682  22DA               	addwfc	fsr2h,f,c
  1852   001684  2ADE               	incf	postinc2,f,c
  1853   001686  0E00               	movlw	0
  1854   001688  22DD               	addwfc	postdec2,f,c
  1855   00168A                     l1118:
  1856   00168A  0012               	return		;funcret
  1857   00168C                     __end_of_fputc:
  1858                           	callstack 0
  1859                           
  1860 ;; *************** function _putch *****************
  1861 ;; Defined at:
  1862 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;  c               1    wreg     unsigned char 
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;  c               1    0[COMRAM] unsigned char 
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      void 
  1869 ;; Registers used:
  1870 ;;		wreg
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1880 ;;Total ram usage:        0 bytes
  1881 ;; Hardware stack levels used: 1
  1882 ;; Hardware stack levels required when called: 2
  1883 ;; This function calls:
  1884 ;;		Nothing
  1885 ;; This function is called by:
  1886 ;;		_fputc
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           	psect	text8
  1891   001C22                     __ptext8:
  1892                           	callstack 0
  1893   001C22                     _putch:
  1894                           	callstack 24
  1895   001C22  0012               	return		;funcret
  1896   001C24                     __end_of_putch:
  1897                           	callstack 0
  1898                           
  1899 ;; *************** function _abs *****************
  1900 ;; Defined at:
  1901 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;  a               2   22[COMRAM] int 
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;		None
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  2   22[COMRAM] int 
  1908 ;; Registers used:
  1909 ;;		wreg, status,2, status,0
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1915 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1917 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1918 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1919 ;;Total ram usage:        4 bytes
  1920 ;; Hardware stack levels used: 1
  1921 ;; Hardware stack levels required when called: 2
  1922 ;; This function calls:
  1923 ;;		Nothing
  1924 ;; This function is called by:
  1925 ;;		_dtoa
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           	psect	text9
  1930   0019FE                     __ptext9:
  1931                           	callstack 0
  1932   0019FE                     _abs:
  1933                           	callstack 24
  1934   0019FE  BE18               	btfsc	(abs@a+1)^0,7,c
  1935   001A00  EF0C  F00D         	goto	u1340
  1936   001A04  5018               	movf	(abs@a+1)^0,w,c
  1937   001A06  E106               	bnz	u1341
  1938   001A08  0417               	decf	abs@a^0,w,c
  1939   001A0A  B0D8               	btfsc	status,0,c
  1940   001A0C  EF0A  F00D         	goto	u1341
  1941   001A10  EF0C  F00D         	goto	u1340
  1942   001A14                     u1341:
  1943   001A14  EF1A  F00D         	goto	l1103
  1944   001A18                     u1340:
  1945   001A18  C017  F019         	movff	abs@a,??_abs
  1946   001A1C  C018  F01A         	movff	abs@a+1,??_abs+1
  1947   001A20  1E19               	comf	??_abs^0,f,c
  1948   001A22  1E1A               	comf	(??_abs+1)^0,f,c
  1949   001A24  4A19               	infsnz	??_abs^0,f,c
  1950   001A26  2A1A               	incf	(??_abs+1)^0,f,c
  1951   001A28  C019  F017         	movff	??_abs,?_abs
  1952   001A2C  C01A  F018         	movff	??_abs+1,?_abs+1
  1953   001A30  EF1E  F00D         	goto	l1106
  1954   001A34                     l1103:
  1955   001A34  C017  F017         	movff	abs@a,?_abs
  1956   001A38  C018  F018         	movff	abs@a+1,?_abs+1
  1957   001A3C                     l1106:
  1958   001A3C  0012               	return		;funcret
  1959   001A3E                     __end_of_abs:
  1960                           	callstack 0
  1961                           
  1962 ;; *************** function ___aomod *****************
  1963 ;; Defined at:
  1964 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  dividend        8    4[COMRAM] long long 
  1967 ;;  divisor         8   12[COMRAM] long long 
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;  sign            1   21[COMRAM] unsigned char 
  1970 ;;  counter         1   20[COMRAM] unsigned char 
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  8    4[COMRAM] long long 
  1973 ;; Registers used:
  1974 ;;		wreg, status,2, status,0
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1980 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1981 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1983 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1984 ;;Total ram usage:       18 bytes
  1985 ;; Hardware stack levels used: 1
  1986 ;; Hardware stack levels required when called: 2
  1987 ;; This function calls:
  1988 ;;		Nothing
  1989 ;; This function is called by:
  1990 ;;		_dtoa
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           	psect	text10
  1995   001228                     __ptext10:
  1996                           	callstack 0
  1997   001228                     ___aomod:
  1998                           	callstack 24
  1999   001228  0E00               	movlw	0
  2000   00122A  6E16               	movwf	___aomod@sign^0,c
  2001   00122C  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  2002   00122E  EF1D  F009         	goto	u1260
  2003   001232  EF1B  F009         	goto	u1261
  2004   001236                     u1261:
  2005   001236  EF2F  F009         	goto	l2247
  2006   00123A                     u1260:
  2007   00123A  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2008   00123C  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2009   00123E  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2010   001240  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2011   001242  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2012   001244  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2013   001246  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2014   001248  6C05               	negf	___aomod@dividend^0,c
  2015   00124A  0E00               	movlw	0
  2016   00124C  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2017   00124E  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2018   001250  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2019   001252  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2020   001254  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2021   001256  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2022   001258  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2023   00125A  0E01               	movlw	1
  2024   00125C  6E16               	movwf	___aomod@sign^0,c
  2025   00125E                     l2247:
  2026   00125E  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  2027   001260  EF36  F009         	goto	u1270
  2028   001264  EF34  F009         	goto	u1271
  2029   001268                     u1271:
  2030   001268  EF46  F009         	goto	l2251
  2031   00126C                     u1270:
  2032   00126C  1E14               	comf	(___aomod@divisor+7)^0,f,c
  2033   00126E  1E13               	comf	(___aomod@divisor+6)^0,f,c
  2034   001270  1E12               	comf	(___aomod@divisor+5)^0,f,c
  2035   001272  1E11               	comf	(___aomod@divisor+4)^0,f,c
  2036   001274  1E10               	comf	(___aomod@divisor+3)^0,f,c
  2037   001276  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  2038   001278  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  2039   00127A  6C0D               	negf	___aomod@divisor^0,c
  2040   00127C  0E00               	movlw	0
  2041   00127E  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  2042   001280  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  2043   001282  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  2044   001284  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  2045   001286  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  2046   001288  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  2047   00128A  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  2048   00128C                     l2251:
  2049   00128C  500D               	movf	___aomod@divisor^0,w,c
  2050   00128E  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  2051   001290  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  2052   001292  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  2053   001294  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  2054   001296  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  2055   001298  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  2056   00129A  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  2057   00129C  B4D8               	btfsc	status,2,c
  2058   00129E  EF53  F009         	goto	u1281
  2059   0012A2  EF55  F009         	goto	u1280
  2060   0012A6                     u1281:
  2061   0012A6  EF9D  F009         	goto	l2267
  2062   0012AA                     u1280:
  2063   0012AA  0E01               	movlw	1
  2064   0012AC  6E15               	movwf	___aomod@counter^0,c
  2065   0012AE  EF63  F009         	goto	l2257
  2066   0012B2                     l2255:
  2067   0012B2  90D8               	bcf	status,0,c
  2068   0012B4  360D               	rlcf	___aomod@divisor^0,f,c
  2069   0012B6  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  2070   0012B8  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  2071   0012BA  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  2072   0012BC  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  2073   0012BE  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  2074   0012C0  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  2075   0012C2  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  2076   0012C4  2A15               	incf	___aomod@counter^0,f,c
  2077   0012C6                     l2257:
  2078   0012C6  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  2079   0012C8  EF68  F009         	goto	u1291
  2080   0012CC  EF6A  F009         	goto	u1290
  2081   0012D0                     u1291:
  2082   0012D0  EF59  F009         	goto	l2255
  2083   0012D4                     u1290:
  2084   0012D4                     l2259:
  2085   0012D4  500D               	movf	___aomod@divisor^0,w,c
  2086   0012D6  5C05               	subwf	___aomod@dividend^0,w,c
  2087   0012D8  500E               	movf	(___aomod@divisor+1)^0,w,c
  2088   0012DA  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  2089   0012DC  500F               	movf	(___aomod@divisor+2)^0,w,c
  2090   0012DE  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  2091   0012E0  5010               	movf	(___aomod@divisor+3)^0,w,c
  2092   0012E2  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  2093   0012E4  5011               	movf	(___aomod@divisor+4)^0,w,c
  2094   0012E6  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  2095   0012E8  5012               	movf	(___aomod@divisor+5)^0,w,c
  2096   0012EA  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  2097   0012EC  5013               	movf	(___aomod@divisor+6)^0,w,c
  2098   0012EE  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  2099   0012F0  5014               	movf	(___aomod@divisor+7)^0,w,c
  2100   0012F2  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  2101   0012F4  A0D8               	btfss	status,0,c
  2102   0012F6  EF7F  F009         	goto	u1301
  2103   0012FA  EF81  F009         	goto	u1300
  2104   0012FE                     u1301:
  2105   0012FE  EF91  F009         	goto	l2263
  2106   001302                     u1300:
  2107   001302  500D               	movf	___aomod@divisor^0,w,c
  2108   001304  5E05               	subwf	___aomod@dividend^0,f,c
  2109   001306  500E               	movf	(___aomod@divisor+1)^0,w,c
  2110   001308  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  2111   00130A  500F               	movf	(___aomod@divisor+2)^0,w,c
  2112   00130C  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  2113   00130E  5010               	movf	(___aomod@divisor+3)^0,w,c
  2114   001310  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  2115   001312  5011               	movf	(___aomod@divisor+4)^0,w,c
  2116   001314  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  2117   001316  5012               	movf	(___aomod@divisor+5)^0,w,c
  2118   001318  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  2119   00131A  5013               	movf	(___aomod@divisor+6)^0,w,c
  2120   00131C  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  2121   00131E  5014               	movf	(___aomod@divisor+7)^0,w,c
  2122   001320  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  2123   001322                     l2263:
  2124   001322  90D8               	bcf	status,0,c
  2125   001324  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  2126   001326  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  2127   001328  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  2128   00132A  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  2129   00132C  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  2130   00132E  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  2131   001330  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  2132   001332  320D               	rrcf	___aomod@divisor^0,f,c
  2133   001334  2E15               	decfsz	___aomod@counter^0,f,c
  2134   001336  EF6A  F009         	goto	l2259
  2135   00133A                     l2267:
  2136   00133A  5016               	movf	___aomod@sign^0,w,c
  2137   00133C  B4D8               	btfsc	status,2,c
  2138   00133E  EFA3  F009         	goto	u1311
  2139   001342  EFA5  F009         	goto	u1310
  2140   001346                     u1311:
  2141   001346  EFB5  F009         	goto	l2271
  2142   00134A                     u1310:
  2143   00134A  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2144   00134C  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2145   00134E  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2146   001350  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2147   001352  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2148   001354  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2149   001356  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2150   001358  6C05               	negf	___aomod@dividend^0,c
  2151   00135A  0E00               	movlw	0
  2152   00135C  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2153   00135E  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2154   001360  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2155   001362  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2156   001364  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2157   001366  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2158   001368  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2159   00136A                     l2271:
  2160   00136A  C005  F005         	movff	___aomod@dividend,?___aomod
  2161   00136E  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  2162   001372  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  2163   001376  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  2164   00137A  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  2165   00137E  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  2166   001382  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  2167   001386  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  2168   00138A  0012               	return		;funcret
  2169   00138C                     __end_of___aomod:
  2170                           	callstack 0
  2171                           
  2172 ;; *************** function ___aodiv *****************
  2173 ;; Defined at:
  2174 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  dividend        8    4[COMRAM] long long 
  2177 ;;  divisor         8   12[COMRAM] long long 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  quotient        8   22[COMRAM] long long 
  2180 ;;  sign            1   21[COMRAM] unsigned char 
  2181 ;;  counter         1   20[COMRAM] unsigned char 
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  8    4[COMRAM] long long 
  2184 ;; Registers used:
  2185 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2191 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2192 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2194 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2195 ;;Total ram usage:       26 bytes
  2196 ;; Hardware stack levels used: 1
  2197 ;; Hardware stack levels required when called: 2
  2198 ;; This function calls:
  2199 ;;		Nothing
  2200 ;; This function is called by:
  2201 ;;		_dtoa
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           	psect	text11
  2206   0010A0                     __ptext11:
  2207                           	callstack 0
  2208   0010A0                     ___aodiv:
  2209                           	callstack 24
  2210   0010A0  0E00               	movlw	0
  2211   0010A2  6E16               	movwf	___aodiv@sign^0,c
  2212   0010A4  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  2213   0010A6  EF59  F008         	goto	u1190
  2214   0010AA  EF57  F008         	goto	u1191
  2215   0010AE                     u1191:
  2216   0010AE  EF6B  F008         	goto	l2203
  2217   0010B2                     u1190:
  2218   0010B2  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  2219   0010B4  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  2220   0010B6  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  2221   0010B8  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  2222   0010BA  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  2223   0010BC  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  2224   0010BE  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  2225   0010C0  6C0D               	negf	___aodiv@divisor^0,c
  2226   0010C2  0E00               	movlw	0
  2227   0010C4  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  2228   0010C6  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  2229   0010C8  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  2230   0010CA  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  2231   0010CC  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  2232   0010CE  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  2233   0010D0  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  2234   0010D2  0E01               	movlw	1
  2235   0010D4  6E16               	movwf	___aodiv@sign^0,c
  2236   0010D6                     l2203:
  2237   0010D6  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  2238   0010D8  EF72  F008         	goto	u1200
  2239   0010DC  EF70  F008         	goto	u1201
  2240   0010E0                     u1201:
  2241   0010E0  EF84  F008         	goto	l2209
  2242   0010E4                     u1200:
  2243   0010E4  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  2244   0010E6  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  2245   0010E8  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  2246   0010EA  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  2247   0010EC  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  2248   0010EE  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  2249   0010F0  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  2250   0010F2  6C05               	negf	___aodiv@dividend^0,c
  2251   0010F4  0E00               	movlw	0
  2252   0010F6  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  2253   0010F8  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  2254   0010FA  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  2255   0010FC  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  2256   0010FE  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  2257   001100  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  2258   001102  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  2259   001104  0E01               	movlw	1
  2260   001106  1A16               	xorwf	___aodiv@sign^0,f,c
  2261   001108                     l2209:
  2262   001108  EE20  F017         	lfsr	2,___aodiv@quotient
  2263   00110C  0E07               	movlw	7
  2264   00110E                     u1211:
  2265   00110E  6ADE               	clrf	postinc2,c
  2266   001110  06E8               	decf	wreg,f,c
  2267   001112  E2FD               	bc	u1211
  2268   001114  500D               	movf	___aodiv@divisor^0,w,c
  2269   001116  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  2270   001118  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  2271   00111A  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  2272   00111C  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  2273   00111E  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  2274   001120  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  2275   001122  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  2276   001124  B4D8               	btfsc	status,2,c
  2277   001126  EF97  F008         	goto	u1221
  2278   00112A  EF99  F008         	goto	u1220
  2279   00112E                     u1221:
  2280   00112E  EFEB  F008         	goto	l2231
  2281   001132                     u1220:
  2282   001132  0E01               	movlw	1
  2283   001134  6E15               	movwf	___aodiv@counter^0,c
  2284   001136  EFA7  F008         	goto	l2217
  2285   00113A                     l2215:
  2286   00113A  90D8               	bcf	status,0,c
  2287   00113C  360D               	rlcf	___aodiv@divisor^0,f,c
  2288   00113E  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  2289   001140  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  2290   001142  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  2291   001144  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  2292   001146  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  2293   001148  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  2294   00114A  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  2295   00114C  2A15               	incf	___aodiv@counter^0,f,c
  2296   00114E                     l2217:
  2297   00114E  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  2298   001150  EFAC  F008         	goto	u1231
  2299   001154  EFAE  F008         	goto	u1230
  2300   001158                     u1231:
  2301   001158  EF9D  F008         	goto	l2215
  2302   00115C                     u1230:
  2303   00115C                     l2219:
  2304   00115C  90D8               	bcf	status,0,c
  2305   00115E  3617               	rlcf	___aodiv@quotient^0,f,c
  2306   001160  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  2307   001162  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  2308   001164  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  2309   001166  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  2310   001168  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  2311   00116A  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  2312   00116C  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  2313   00116E  500D               	movf	___aodiv@divisor^0,w,c
  2314   001170  5C05               	subwf	___aodiv@dividend^0,w,c
  2315   001172  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2316   001174  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  2317   001176  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2318   001178  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  2319   00117A  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2320   00117C  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  2321   00117E  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2322   001180  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  2323   001182  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2324   001184  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  2325   001186  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2326   001188  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  2327   00118A  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2328   00118C  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  2329   00118E  A0D8               	btfss	status,0,c
  2330   001190  EFCC  F008         	goto	u1241
  2331   001194  EFCE  F008         	goto	u1240
  2332   001198                     u1241:
  2333   001198  EFDF  F008         	goto	l2227
  2334   00119C                     u1240:
  2335   00119C  500D               	movf	___aodiv@divisor^0,w,c
  2336   00119E  5E05               	subwf	___aodiv@dividend^0,f,c
  2337   0011A0  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2338   0011A2  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  2339   0011A4  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2340   0011A6  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  2341   0011A8  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2342   0011AA  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  2343   0011AC  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2344   0011AE  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  2345   0011B0  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2346   0011B2  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  2347   0011B4  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2348   0011B6  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  2349   0011B8  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2350   0011BA  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  2351   0011BC  8017               	bsf	___aodiv@quotient^0,0,c
  2352   0011BE                     l2227:
  2353   0011BE  90D8               	bcf	status,0,c
  2354   0011C0  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  2355   0011C2  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  2356   0011C4  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  2357   0011C6  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  2358   0011C8  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  2359   0011CA  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  2360   0011CC  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  2361   0011CE  320D               	rrcf	___aodiv@divisor^0,f,c
  2362   0011D0  2E15               	decfsz	___aodiv@counter^0,f,c
  2363   0011D2  EFAE  F008         	goto	l2219
  2364   0011D6                     l2231:
  2365   0011D6  5016               	movf	___aodiv@sign^0,w,c
  2366   0011D8  B4D8               	btfsc	status,2,c
  2367   0011DA  EFF1  F008         	goto	u1251
  2368   0011DE  EFF3  F008         	goto	u1250
  2369   0011E2                     u1251:
  2370   0011E2  EF03  F009         	goto	l2235
  2371   0011E6                     u1250:
  2372   0011E6  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  2373   0011E8  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  2374   0011EA  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  2375   0011EC  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  2376   0011EE  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  2377   0011F0  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  2378   0011F2  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  2379   0011F4  6C17               	negf	___aodiv@quotient^0,c
  2380   0011F6  0E00               	movlw	0
  2381   0011F8  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  2382   0011FA  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  2383   0011FC  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  2384   0011FE  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  2385   001200  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  2386   001202  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  2387   001204  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  2388   001206                     l2235:
  2389   001206  C017  F005         	movff	___aodiv@quotient,?___aodiv
  2390   00120A  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  2391   00120E  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  2392   001212  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  2393   001216  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  2394   00121A  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  2395   00121E  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  2396   001222  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  2397   001226  0012               	return		;funcret
  2398   001228                     __end_of___aodiv:
  2399                           	callstack 0
  2400                           
  2401 ;; *************** function _sendStringSerial4 *****************
  2402 ;; Defined at:
  2403 ;;		line 38 in file "serial.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;  string          2    5[COMRAM] PTR unsigned char 
  2406 ;;		 -> main@buf(40), 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;		None
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2418 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2421 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2422 ;;Total ram usage:        2 bytes
  2423 ;; Hardware stack levels used: 1
  2424 ;; Hardware stack levels required when called: 3
  2425 ;; This function calls:
  2426 ;;		_sendCharSerial4
  2427 ;; This function is called by:
  2428 ;;		_main
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           	psect	text12
  2433   001AA4                     __ptext12:
  2434                           	callstack 0
  2435   001AA4                     _sendStringSerial4:
  2436                           	callstack 27
  2437   001AA4                     
  2438                           ;serial.c: 40:     while (*string != 0) {
  2439   001AA4  EF5D  F00D         	goto	l2059
  2440   001AA8                     l2055:
  2441                           
  2442                           ;serial.c: 41:         sendCharSerial4(*string++);
  2443   001AA8  C006  FFD9         	movff	sendStringSerial4@string,fsr2l
  2444   001AAC  C007  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2445   001AB0  50DF               	movf	indf2,w,c
  2446   001AB2  ECDE  F00D         	call	_sendCharSerial4
  2447   001AB6  4A06               	infsnz	sendStringSerial4@string^0,f,c
  2448   001AB8  2A07               	incf	(sendStringSerial4@string+1)^0,f,c
  2449   001ABA                     l2059:
  2450                           
  2451                           ;serial.c: 40:     while (*string != 0) {
  2452   001ABA  C006  FFD9         	movff	sendStringSerial4@string,fsr2l
  2453   001ABE  C007  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2454   001AC2  50DF               	movf	indf2,w,c
  2455   001AC4  A4D8               	btfss	status,2,c
  2456   001AC6  EF67  F00D         	goto	u1041
  2457   001ACA  EF69  F00D         	goto	u1040
  2458   001ACE                     u1041:
  2459   001ACE  EF54  F00D         	goto	l2055
  2460   001AD2                     u1040:
  2461   001AD2  0012               	return		;funcret
  2462   001AD4                     __end_of_sendStringSerial4:
  2463                           	callstack 0
  2464                           
  2465 ;; *************** function _sendCharSerial4 *****************
  2466 ;; Defined at:
  2467 ;;		line 32 in file "serial.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;  charToSend      1    wreg     unsigned char 
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;  charToSend      1    4[COMRAM] unsigned char 
  2472 ;; Return value:  Size  Location     Type
  2473 ;;                  1    wreg      void 
  2474 ;; Registers used:
  2475 ;;		wreg
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2482 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2484 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2485 ;;Total ram usage:        1 bytes
  2486 ;; Hardware stack levels used: 1
  2487 ;; Hardware stack levels required when called: 2
  2488 ;; This function calls:
  2489 ;;		Nothing
  2490 ;; This function is called by:
  2491 ;;		_sendStringSerial4
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           	psect	text13
  2496   001BBC                     __ptext13:
  2497                           	callstack 0
  2498   001BBC                     _sendCharSerial4:
  2499                           	callstack 27
  2500                           
  2501                           ;incstack = 0
  2502                           ;sendCharSerial4@charToSend stored from wreg
  2503   001BBC  6E05               	movwf	sendCharSerial4@charToSend^0,c
  2504   001BBE                     l319:
  2505   001BBE  010E               	movlb	14	; () banked
  2506   001BC0  A537               	btfss	55,2,b	;volatile
  2507   001BC2  EFE5  F00D         	goto	u1021
  2508   001BC6  EFE7  F00D         	goto	u1020
  2509   001BCA                     u1021:
  2510   001BCA  EFDF  F00D         	goto	l319
  2511   001BCE                     u1020:
  2512   001BCE                     
  2513                           ; BSR set to: 14
  2514                           ;serial.c: 34:     TX4REG = charToSend;
  2515   001BCE  C005  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2516   001BD2                     
  2517                           ; BSR set to: 14
  2518   001BD2  0012               	return		;funcret
  2519   001BD4                     __end_of_sendCharSerial4:
  2520                           	callstack 0
  2521                           
  2522 ;; *************** function _initUSART4 *****************
  2523 ;; Defined at:
  2524 ;;		line 5 in file "serial.c"
  2525 ;; Parameters:    Size  Location     Type
  2526 ;;		None
  2527 ;; Auto vars:     Size  Location     Type
  2528 ;;		None
  2529 ;; Return value:  Size  Location     Type
  2530 ;;                  1    wreg      void 
  2531 ;; Registers used:
  2532 ;;		wreg, status,2
  2533 ;; Tracked objects:
  2534 ;;		On entry : 0/0
  2535 ;;		On exit  : 0/0
  2536 ;;		Unchanged: 0/0
  2537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2542 ;;Total ram usage:        0 bytes
  2543 ;; Hardware stack levels used: 1
  2544 ;; Hardware stack levels required when called: 2
  2545 ;; This function calls:
  2546 ;;		Nothing
  2547 ;; This function is called by:
  2548 ;;		_main
  2549 ;; This function uses a non-reentrant model
  2550 ;;
  2551                           
  2552                           	psect	text14
  2553   001B7C                     __ptext14:
  2554                           	callstack 0
  2555   001B7C                     _initUSART4:
  2556                           	callstack 28
  2557   001B7C                     
  2558                           ;serial.c: 7:     RC0PPS = 0x12;
  2559   001B7C  0E12               	movlw	18
  2560   001B7E  010E               	movlb	14	; () banked
  2561   001B80  6F62               	movwf	98,b	;volatile
  2562                           
  2563                           ;serial.c: 8:     RX4PPS = 0x11;
  2564   001B82  0E11               	movlw	17
  2565   001B84  6F15               	movwf	21,b	;volatile
  2566   001B86                     
  2567                           ; BSR set to: 14
  2568                           ;serial.c: 9:     TRISCbits.TRISC1 = 1;
  2569   001B86  8283               	bsf	131,1,c	;volatile
  2570   001B88                     
  2571                           ; BSR set to: 14
  2572                           ;serial.c: 13:     BAUD4CONbits.BRG16 = 0;
  2573   001B88  97E9               	bcf	233,3,b	;volatile
  2574   001B8A                     
  2575                           ; BSR set to: 14
  2576                           ;serial.c: 14:     TX4STAbits.BRGH = 0;
  2577   001B8A  95E8               	bcf	232,2,b	;volatile
  2578                           
  2579                           ;serial.c: 15:     SP4BRGL = 51;
  2580   001B8C  0E33               	movlw	51
  2581   001B8E  6FE5               	movwf	229,b	;volatile
  2582                           
  2583                           ;serial.c: 16:     SP4BRGH = 0;
  2584   001B90  0E00               	movlw	0
  2585   001B92  6FE6               	movwf	230,b	;volatile
  2586   001B94                     
  2587                           ; BSR set to: 14
  2588                           ;serial.c: 18:     RC4STAbits.CREN = 1;
  2589   001B94  89E7               	bsf	231,4,b	;volatile
  2590   001B96                     
  2591                           ; BSR set to: 14
  2592                           ;serial.c: 19:     TX4STAbits.TXEN = 1;
  2593   001B96  8BE8               	bsf	232,5,b	;volatile
  2594   001B98                     
  2595                           ; BSR set to: 14
  2596                           ;serial.c: 20:     RC4STAbits.SPEN = 1;
  2597   001B98  8FE7               	bsf	231,7,b	;volatile
  2598   001B9A                     
  2599                           ; BSR set to: 14
  2600   001B9A  0012               	return		;funcret
  2601   001B9C                     __end_of_initUSART4:
  2602                           	callstack 0
  2603                           
  2604 ;; *************** function _initDCmotorsPWM *****************
  2605 ;; Defined at:
  2606 ;;		line 5 in file "dc_motor.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;  PWMperiod       2    4[COMRAM] unsigned int 
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;		None
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  1    wreg      void 
  2613 ;; Registers used:
  2614 ;;		wreg, status,2
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2620 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2623 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2624 ;;Total ram usage:        2 bytes
  2625 ;; Hardware stack levels used: 1
  2626 ;; Hardware stack levels required when called: 2
  2627 ;; This function calls:
  2628 ;;		Nothing
  2629 ;; This function is called by:
  2630 ;;		_main
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text15
  2635   00168C                     __ptext15:
  2636                           	callstack 0
  2637   00168C                     _initDCmotorsPWM:
  2638                           	callstack 28
  2639   00168C                     
  2640                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2641   00168C  9485               	bcf	133,2,c	;volatile
  2642                           
  2643                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2644   00168E  9885               	bcf	133,4,c	;volatile
  2645                           
  2646                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2647   001690  9E83               	bcf	131,7,c	;volatile
  2648                           
  2649                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2650   001692  9C87               	bcf	135,6,c	;volatile
  2651                           
  2652                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2653   001694  947D               	bcf	125,2,c	;volatile
  2654                           
  2655                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2656   001696  987D               	bcf	125,4,c	;volatile
  2657                           
  2658                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2659   001698  9E7B               	bcf	123,7,c	;volatile
  2660                           
  2661                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2662   00169A  9C7F               	bcf	127,6,c	;volatile
  2663   00169C                     
  2664                           ;dc_motor.c: 18:     RE2PPS=0x05;
  2665   00169C  0E05               	movlw	5
  2666   00169E  010E               	movlb	14	; () banked
  2667   0016A0  6F74               	movwf	116,b	;volatile
  2668                           
  2669                           ;dc_motor.c: 19:     RE4PPS=0x06;
  2670   0016A2  0E06               	movlw	6
  2671   0016A4  6F76               	movwf	118,b	;volatile
  2672                           
  2673                           ;dc_motor.c: 20:     RC7PPS=0x07;
  2674   0016A6  0E07               	movlw	7
  2675   0016A8  6F69               	movwf	105,b	;volatile
  2676                           
  2677                           ;dc_motor.c: 21:     RG6PPS=0x08;
  2678   0016AA  0E08               	movlw	8
  2679   0016AC  6F88               	movwf	136,b	;volatile
  2680                           
  2681                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  2682   0016AE  50BD               	movf	189,w,c	;volatile
  2683   0016B0  0B8F               	andlw	-113
  2684   0016B2  0940               	iorlw	64
  2685   0016B4  6EBD               	movwf	189,c	;volatile
  2686                           
  2687                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  2688   0016B6  0EE0               	movlw	-32
  2689   0016B8  16BE               	andwf	190,f,c	;volatile
  2690                           
  2691                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  2692   0016BA  50BF               	movf	191,w,c	;volatile
  2693   0016BC  0BF0               	andlw	-16
  2694   0016BE  0901               	iorlw	1
  2695   0016C0  6EBF               	movwf	191,c	;volatile
  2696   0016C2                     
  2697                           ; BSR set to: 14
  2698                           ;dc_motor.c: 30:     T2PR=PWMperiod;
  2699   0016C2  C005  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  2700   0016C6                     
  2701                           ; BSR set to: 14
  2702                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  2703   0016C6  8EBD               	bsf	189,7,c	;volatile
  2704                           
  2705                           ;dc_motor.c: 35:     CCPR1H=0;
  2706   0016C8  0E00               	movlw	0
  2707   0016CA  6EAA               	movwf	170,c	;volatile
  2708                           
  2709                           ;dc_motor.c: 36:     CCPR2H=0;
  2710   0016CC  0E00               	movlw	0
  2711   0016CE  6EA6               	movwf	166,c	;volatile
  2712                           
  2713                           ;dc_motor.c: 37:     CCPR3H=0;
  2714   0016D0  0E00               	movlw	0
  2715   0016D2  010F               	movlb	15	; () banked
  2716   0016D4  6F25               	movwf	37,b	;volatile
  2717                           
  2718                           ;dc_motor.c: 38:     CCPR4H=0;
  2719   0016D6  0E00               	movlw	0
  2720   0016D8  6F21               	movwf	33,b	;volatile
  2721                           
  2722                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  2723   0016DA  0EFC               	movlw	-4
  2724   0016DC  16AD               	andwf	173,f,c	;volatile
  2725                           
  2726                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  2727   0016DE  0EF3               	movlw	-13
  2728   0016E0  16AD               	andwf	173,f,c	;volatile
  2729                           
  2730                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  2731   0016E2  0ECF               	movlw	-49
  2732   0016E4  16AD               	andwf	173,f,c	;volatile
  2733                           
  2734                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  2735   0016E6  0E3F               	movlw	-193
  2736   0016E8  16AD               	andwf	173,f,c	;volatile
  2737   0016EA                     
  2738                           ; BSR set to: 15
  2739                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  2740   0016EA  88AB               	bsf	171,4,c	;volatile
  2741                           
  2742                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  2743   0016EC  50AB               	movf	171,w,c	;volatile
  2744   0016EE  0BF0               	andlw	-16
  2745   0016F0  090C               	iorlw	12
  2746   0016F2  6EAB               	movwf	171,c	;volatile
  2747   0016F4                     
  2748                           ; BSR set to: 15
  2749                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  2750   0016F4  8EAB               	bsf	171,7,c	;volatile
  2751   0016F6                     
  2752                           ; BSR set to: 15
  2753                           ;dc_motor.c: 52:     CCP2CONbits.FMT=1;
  2754   0016F6  88A7               	bsf	167,4,c	;volatile
  2755                           
  2756                           ;dc_motor.c: 53:     CCP2CONbits.CCP2MODE=0b1100;
  2757   0016F8  50A7               	movf	167,w,c	;volatile
  2758   0016FA  0BF0               	andlw	-16
  2759   0016FC  090C               	iorlw	12
  2760   0016FE  6EA7               	movwf	167,c	;volatile
  2761   001700                     
  2762                           ; BSR set to: 15
  2763                           ;dc_motor.c: 54:     CCP2CONbits.EN=1;
  2764   001700  8EA7               	bsf	167,7,c	;volatile
  2765   001702                     
  2766                           ; BSR set to: 15
  2767                           ;dc_motor.c: 58:     CCP3CONbits.FMT=1;
  2768   001702  8926               	bsf	38,4,b	;volatile
  2769                           
  2770                           ;dc_motor.c: 59:     CCP3CONbits.CCP3MODE=0b1100;
  2771   001704  5126               	movf	38,w,b	;volatile
  2772   001706  0BF0               	andlw	-16
  2773   001708  090C               	iorlw	12
  2774   00170A  6F26               	movwf	38,b	;volatile
  2775   00170C                     
  2776                           ; BSR set to: 15
  2777                           ;dc_motor.c: 60:     CCP3CONbits.EN=1;
  2778   00170C  8F26               	bsf	38,7,b	;volatile
  2779   00170E                     
  2780                           ; BSR set to: 15
  2781                           ;dc_motor.c: 63:     CCP4CONbits.FMT=1;
  2782   00170E  8922               	bsf	34,4,b	;volatile
  2783                           
  2784                           ;dc_motor.c: 64:     CCP4CONbits.CCP4MODE=0b1100;
  2785   001710  5122               	movf	34,w,b	;volatile
  2786   001712  0BF0               	andlw	-16
  2787   001714  090C               	iorlw	12
  2788   001716  6F22               	movwf	34,b	;volatile
  2789   001718                     
  2790                           ; BSR set to: 15
  2791                           ;dc_motor.c: 65:     CCP4CONbits.EN=1;
  2792   001718  8F22               	bsf	34,7,b	;volatile
  2793   00171A                     
  2794                           ; BSR set to: 15
  2795   00171A  0012               	return		;funcret
  2796   00171C                     __end_of_initDCmotorsPWM:
  2797                           	callstack 0
  2798                           
  2799 ;; *************** function _color_read_Red *****************
  2800 ;; Defined at:
  2801 ;;		line 26 in file "color.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;		None
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;  tmp             2   13[COMRAM] unsigned int 
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  2    8[COMRAM] unsigned int 
  2808 ;; Registers used:
  2809 ;;		wreg, status,2, status,0, cstack
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2815 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2816 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2817 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2818 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2819 ;;Total ram usage:        7 bytes
  2820 ;; Hardware stack levels used: 1
  2821 ;; Hardware stack levels required when called: 4
  2822 ;; This function calls:
  2823 ;;		_I2C_2_Master_Read
  2824 ;;		_I2C_2_Master_RepStart
  2825 ;;		_I2C_2_Master_Start
  2826 ;;		_I2C_2_Master_Stop
  2827 ;;		_I2C_2_Master_Write
  2828 ;; This function is called by:
  2829 ;;		_main
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           	psect	text16
  2834   001838                     __ptext16:
  2835                           	callstack 0
  2836   001838                     _color_read_Red:
  2837                           	callstack 26
  2838   001838                     
  2839                           ;color.c: 28:  unsigned int tmp;;color.c: 29:  I2C_2_Master_Start();
  2840   001838  EC0C  F00E         	call	_I2C_2_Master_Start	;wreg free
  2841                           
  2842                           ;color.c: 30:  I2C_2_Master_Write(0x52 | 0x00);
  2843   00183C  0E52               	movlw	82
  2844   00183E  ECF6  F00D         	call	_I2C_2_Master_Write
  2845                           
  2846                           ;color.c: 32:  I2C_2_Master_Write(0xA0 | 0x16);
  2847   001842  0EB6               	movlw	182
  2848   001844  ECF6  F00D         	call	_I2C_2_Master_Write
  2849                           
  2850                           ;color.c: 33:  I2C_2_Master_RepStart();
  2851   001848  EC02  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  2852                           
  2853                           ;color.c: 34:  I2C_2_Master_Write(0x52 | 0x01);
  2854   00184C  0E53               	movlw	83
  2855   00184E  ECF6  F00D         	call	_I2C_2_Master_Write
  2856                           
  2857                           ;color.c: 35:  tmp=I2C_2_Master_Read(1);
  2858   001852  0E01               	movlw	1
  2859   001854  ECDE  F00C         	call	_I2C_2_Master_Read
  2860   001858  6E0B               	movwf	??_color_read_Red^0,c
  2861   00185A  500B               	movf	??_color_read_Red^0,w,c
  2862   00185C  6E0E               	movwf	color_read_Red@tmp^0,c
  2863   00185E  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
  2864                           
  2865                           ;color.c: 36:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2866   001860  0E00               	movlw	0
  2867   001862  ECDE  F00C         	call	_I2C_2_Master_Read
  2868   001866  6E0B               	movwf	??_color_read_Red^0,c
  2869   001868  500B               	movf	??_color_read_Red^0,w,c
  2870   00186A  6E0D               	movwf	(??_color_read_Red+2)^0,c
  2871   00186C  6A0C               	clrf	(??_color_read_Red+1)^0,c
  2872   00186E  500E               	movf	color_read_Red@tmp^0,w,c
  2873   001870  100C               	iorwf	(??_color_read_Red+1)^0,w,c
  2874   001872  6E0E               	movwf	color_read_Red@tmp^0,c
  2875   001874  500F               	movf	(color_read_Red@tmp+1)^0,w,c
  2876   001876  100D               	iorwf	(??_color_read_Red+2)^0,w,c
  2877   001878  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
  2878                           
  2879                           ;color.c: 37:  I2C_2_Master_Stop();
  2880   00187A  EC07  F00E         	call	_I2C_2_Master_Stop	;wreg free
  2881   00187E                     
  2882                           ;color.c: 38:  return tmp;
  2883   00187E  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
  2884   001882  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2885   001886  0012               	return		;funcret
  2886   001888                     __end_of_color_read_Red:
  2887                           	callstack 0
  2888                           
  2889 ;; *************** function _color_read_Green *****************
  2890 ;; Defined at:
  2891 ;;		line 56 in file "color.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;		None
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;  tmp             2   13[COMRAM] unsigned int 
  2896 ;; Return value:  Size  Location     Type
  2897 ;;                  2    8[COMRAM] unsigned int 
  2898 ;; Registers used:
  2899 ;;		wreg, status,2, status,0, cstack
  2900 ;; Tracked objects:
  2901 ;;		On entry : 0/0
  2902 ;;		On exit  : 0/0
  2903 ;;		Unchanged: 0/0
  2904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2905 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2906 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2907 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2908 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2909 ;;Total ram usage:        7 bytes
  2910 ;; Hardware stack levels used: 1
  2911 ;; Hardware stack levels required when called: 4
  2912 ;; This function calls:
  2913 ;;		_I2C_2_Master_Read
  2914 ;;		_I2C_2_Master_RepStart
  2915 ;;		_I2C_2_Master_Start
  2916 ;;		_I2C_2_Master_Stop
  2917 ;;		_I2C_2_Master_Write
  2918 ;; This function is called by:
  2919 ;;		_main
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           	psect	text17
  2924   001888                     __ptext17:
  2925                           	callstack 0
  2926   001888                     _color_read_Green:
  2927                           	callstack 26
  2928   001888                     
  2929                           ;color.c: 58:  unsigned int tmp;;color.c: 59:  I2C_2_Master_Start();
  2930   001888  EC0C  F00E         	call	_I2C_2_Master_Start	;wreg free
  2931                           
  2932                           ;color.c: 60:  I2C_2_Master_Write(0x52 | 0x00);
  2933   00188C  0E52               	movlw	82
  2934   00188E  ECF6  F00D         	call	_I2C_2_Master_Write
  2935                           
  2936                           ;color.c: 62:  I2C_2_Master_Write(0xA0 | 0x18);
  2937   001892  0EB8               	movlw	184
  2938   001894  ECF6  F00D         	call	_I2C_2_Master_Write
  2939                           
  2940                           ;color.c: 63:  I2C_2_Master_RepStart();
  2941   001898  EC02  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  2942                           
  2943                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x01);
  2944   00189C  0E53               	movlw	83
  2945   00189E  ECF6  F00D         	call	_I2C_2_Master_Write
  2946                           
  2947                           ;color.c: 65:  tmp=I2C_2_Master_Read(1);
  2948   0018A2  0E01               	movlw	1
  2949   0018A4  ECDE  F00C         	call	_I2C_2_Master_Read
  2950   0018A8  6E0B               	movwf	??_color_read_Green^0,c
  2951   0018AA  500B               	movf	??_color_read_Green^0,w,c
  2952   0018AC  6E0E               	movwf	color_read_Green@tmp^0,c
  2953   0018AE  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
  2954                           
  2955                           ;color.c: 66:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2956   0018B0  0E00               	movlw	0
  2957   0018B2  ECDE  F00C         	call	_I2C_2_Master_Read
  2958   0018B6  6E0B               	movwf	??_color_read_Green^0,c
  2959   0018B8  500B               	movf	??_color_read_Green^0,w,c
  2960   0018BA  6E0D               	movwf	(??_color_read_Green+2)^0,c
  2961   0018BC  6A0C               	clrf	(??_color_read_Green+1)^0,c
  2962   0018BE  500E               	movf	color_read_Green@tmp^0,w,c
  2963   0018C0  100C               	iorwf	(??_color_read_Green+1)^0,w,c
  2964   0018C2  6E0E               	movwf	color_read_Green@tmp^0,c
  2965   0018C4  500F               	movf	(color_read_Green@tmp+1)^0,w,c
  2966   0018C6  100D               	iorwf	(??_color_read_Green+2)^0,w,c
  2967   0018C8  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
  2968                           
  2969                           ;color.c: 67:  I2C_2_Master_Stop();
  2970   0018CA  EC07  F00E         	call	_I2C_2_Master_Stop	;wreg free
  2971   0018CE                     
  2972                           ;color.c: 68:  return tmp;
  2973   0018CE  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
  2974   0018D2  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2975   0018D6  0012               	return		;funcret
  2976   0018D8                     __end_of_color_read_Green:
  2977                           	callstack 0
  2978                           
  2979 ;; *************** function _color_read_Clear *****************
  2980 ;; Defined at:
  2981 ;;		line 71 in file "color.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;		None
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;  tmp             2   13[COMRAM] unsigned int 
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  2    8[COMRAM] unsigned int 
  2988 ;; Registers used:
  2989 ;;		wreg, status,2, status,0, cstack
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2995 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2996 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2997 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2998 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2999 ;;Total ram usage:        7 bytes
  3000 ;; Hardware stack levels used: 1
  3001 ;; Hardware stack levels required when called: 4
  3002 ;; This function calls:
  3003 ;;		_I2C_2_Master_Read
  3004 ;;		_I2C_2_Master_RepStart
  3005 ;;		_I2C_2_Master_Start
  3006 ;;		_I2C_2_Master_Stop
  3007 ;;		_I2C_2_Master_Write
  3008 ;; This function is called by:
  3009 ;;		_main
  3010 ;; This function uses a non-reentrant model
  3011 ;;
  3012                           
  3013                           	psect	text18
  3014   0018D8                     __ptext18:
  3015                           	callstack 0
  3016   0018D8                     _color_read_Clear:
  3017                           	callstack 26
  3018   0018D8                     
  3019                           ;color.c: 73:  unsigned int tmp;;color.c: 74:  I2C_2_Master_Start();
  3020   0018D8  EC0C  F00E         	call	_I2C_2_Master_Start	;wreg free
  3021                           
  3022                           ;color.c: 75:  I2C_2_Master_Write(0x52 | 0x00);
  3023   0018DC  0E52               	movlw	82
  3024   0018DE  ECF6  F00D         	call	_I2C_2_Master_Write
  3025                           
  3026                           ;color.c: 77:  I2C_2_Master_Write(0xA0 | 0x14);
  3027   0018E2  0EB4               	movlw	180
  3028   0018E4  ECF6  F00D         	call	_I2C_2_Master_Write
  3029                           
  3030                           ;color.c: 78:  I2C_2_Master_RepStart();
  3031   0018E8  EC02  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3032                           
  3033                           ;color.c: 79:  I2C_2_Master_Write(0x52 | 0x01);
  3034   0018EC  0E53               	movlw	83
  3035   0018EE  ECF6  F00D         	call	_I2C_2_Master_Write
  3036                           
  3037                           ;color.c: 80:  tmp=I2C_2_Master_Read(1);
  3038   0018F2  0E01               	movlw	1
  3039   0018F4  ECDE  F00C         	call	_I2C_2_Master_Read
  3040   0018F8  6E0B               	movwf	??_color_read_Clear^0,c
  3041   0018FA  500B               	movf	??_color_read_Clear^0,w,c
  3042   0018FC  6E0E               	movwf	color_read_Clear@tmp^0,c
  3043   0018FE  6A0F               	clrf	(color_read_Clear@tmp+1)^0,c
  3044                           
  3045                           ;color.c: 81:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3046   001900  0E00               	movlw	0
  3047   001902  ECDE  F00C         	call	_I2C_2_Master_Read
  3048   001906  6E0B               	movwf	??_color_read_Clear^0,c
  3049   001908  500B               	movf	??_color_read_Clear^0,w,c
  3050   00190A  6E0D               	movwf	(??_color_read_Clear+2)^0,c
  3051   00190C  6A0C               	clrf	(??_color_read_Clear+1)^0,c
  3052   00190E  500E               	movf	color_read_Clear@tmp^0,w,c
  3053   001910  100C               	iorwf	(??_color_read_Clear+1)^0,w,c
  3054   001912  6E0E               	movwf	color_read_Clear@tmp^0,c
  3055   001914  500F               	movf	(color_read_Clear@tmp+1)^0,w,c
  3056   001916  100D               	iorwf	(??_color_read_Clear+2)^0,w,c
  3057   001918  6E0F               	movwf	(color_read_Clear@tmp+1)^0,c
  3058                           
  3059                           ;color.c: 82:  I2C_2_Master_Stop();
  3060   00191A  EC07  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3061   00191E                     
  3062                           ;color.c: 83:  return tmp;
  3063   00191E  C00E  F009         	movff	color_read_Clear@tmp,?_color_read_Clear
  3064   001922  C00F  F00A         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  3065   001926  0012               	return		;funcret
  3066   001928                     __end_of_color_read_Clear:
  3067                           	callstack 0
  3068                           
  3069 ;; *************** function _color_read_Blue *****************
  3070 ;; Defined at:
  3071 ;;		line 41 in file "color.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;		None
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  tmp             2   13[COMRAM] unsigned int 
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  2    8[COMRAM] unsigned int 
  3078 ;; Registers used:
  3079 ;;		wreg, status,2, status,0, cstack
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3085 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3086 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3087 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3088 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3089 ;;Total ram usage:        7 bytes
  3090 ;; Hardware stack levels used: 1
  3091 ;; Hardware stack levels required when called: 4
  3092 ;; This function calls:
  3093 ;;		_I2C_2_Master_Read
  3094 ;;		_I2C_2_Master_RepStart
  3095 ;;		_I2C_2_Master_Start
  3096 ;;		_I2C_2_Master_Stop
  3097 ;;		_I2C_2_Master_Write
  3098 ;; This function is called by:
  3099 ;;		_main
  3100 ;; This function uses a non-reentrant model
  3101 ;;
  3102                           
  3103                           	psect	text19
  3104   001928                     __ptext19:
  3105                           	callstack 0
  3106   001928                     _color_read_Blue:
  3107                           	callstack 26
  3108   001928                     
  3109                           ;color.c: 43:  unsigned int tmp;;color.c: 44:  I2C_2_Master_Start();
  3110   001928  EC0C  F00E         	call	_I2C_2_Master_Start	;wreg free
  3111                           
  3112                           ;color.c: 45:  I2C_2_Master_Write(0x52 | 0x00);
  3113   00192C  0E52               	movlw	82
  3114   00192E  ECF6  F00D         	call	_I2C_2_Master_Write
  3115                           
  3116                           ;color.c: 47:  I2C_2_Master_Write(0xA0 | 0x1A);
  3117   001932  0EBA               	movlw	186
  3118   001934  ECF6  F00D         	call	_I2C_2_Master_Write
  3119                           
  3120                           ;color.c: 48:  I2C_2_Master_RepStart();
  3121   001938  EC02  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3122                           
  3123                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x01);
  3124   00193C  0E53               	movlw	83
  3125   00193E  ECF6  F00D         	call	_I2C_2_Master_Write
  3126                           
  3127                           ;color.c: 50:  tmp=I2C_2_Master_Read(1);
  3128   001942  0E01               	movlw	1
  3129   001944  ECDE  F00C         	call	_I2C_2_Master_Read
  3130   001948  6E0B               	movwf	??_color_read_Blue^0,c
  3131   00194A  500B               	movf	??_color_read_Blue^0,w,c
  3132   00194C  6E0E               	movwf	color_read_Blue@tmp^0,c
  3133   00194E  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
  3134                           
  3135                           ;color.c: 51:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3136   001950  0E00               	movlw	0
  3137   001952  ECDE  F00C         	call	_I2C_2_Master_Read
  3138   001956  6E0B               	movwf	??_color_read_Blue^0,c
  3139   001958  500B               	movf	??_color_read_Blue^0,w,c
  3140   00195A  6E0D               	movwf	(??_color_read_Blue+2)^0,c
  3141   00195C  6A0C               	clrf	(??_color_read_Blue+1)^0,c
  3142   00195E  500E               	movf	color_read_Blue@tmp^0,w,c
  3143   001960  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
  3144   001962  6E0E               	movwf	color_read_Blue@tmp^0,c
  3145   001964  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
  3146   001966  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
  3147   001968  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
  3148                           
  3149                           ;color.c: 52:  I2C_2_Master_Stop();
  3150   00196A  EC07  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3151   00196E                     
  3152                           ;color.c: 53:  return tmp;
  3153   00196E  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
  3154   001972  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3155   001976  0012               	return		;funcret
  3156   001978                     __end_of_color_read_Blue:
  3157                           	callstack 0
  3158                           
  3159 ;; *************** function _I2C_2_Master_RepStart *****************
  3160 ;; Defined at:
  3161 ;;		line 33 in file "i2c.c"
  3162 ;; Parameters:    Size  Location     Type
  3163 ;;		None
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;		None
  3166 ;; Return value:  Size  Location     Type
  3167 ;;                  1    wreg      void 
  3168 ;; Registers used:
  3169 ;;		wreg, status,2, status,0, cstack
  3170 ;; Tracked objects:
  3171 ;;		On entry : 0/0
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3179 ;;Total ram usage:        0 bytes
  3180 ;; Hardware stack levels used: 1
  3181 ;; Hardware stack levels required when called: 3
  3182 ;; This function calls:
  3183 ;;		_I2C_2_Master_Idle
  3184 ;; This function is called by:
  3185 ;;		_color_read_Red
  3186 ;;		_color_read_Blue
  3187 ;;		_color_read_Green
  3188 ;;		_color_read_Clear
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192                           	psect	text20
  3193   001C04                     __ptext20:
  3194                           	callstack 0
  3195   001C04                     _I2C_2_Master_RepStart:
  3196                           	callstack 26
  3197   001C04                     
  3198                           ;i2c.c: 35:   I2C_2_Master_Idle();
  3199   001C04  ECAA  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3200   001C08                     
  3201                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3202   001C08  010E               	movlb	14	; () banked
  3203   001C0A  83DA               	bsf	218,1,b	;volatile
  3204   001C0C                     
  3205                           ; BSR set to: 14
  3206   001C0C  0012               	return		;funcret
  3207   001C0E                     __end_of_I2C_2_Master_RepStart:
  3208                           	callstack 0
  3209                           
  3210 ;; *************** function _I2C_2_Master_Read *****************
  3211 ;; Defined at:
  3212 ;;		line 51 in file "i2c.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;  ack             1    wreg     unsigned char 
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;  ack             1    6[COMRAM] unsigned char 
  3217 ;;  tmp             1    7[COMRAM] unsigned char 
  3218 ;; Return value:  Size  Location     Type
  3219 ;;                  1    wreg      unsigned char 
  3220 ;; Registers used:
  3221 ;;		wreg, status,2, status,0, cstack
  3222 ;; Tracked objects:
  3223 ;;		On entry : 0/0
  3224 ;;		On exit  : 0/0
  3225 ;;		Unchanged: 0/0
  3226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3228 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3229 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3230 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3231 ;;Total ram usage:        3 bytes
  3232 ;; Hardware stack levels used: 1
  3233 ;; Hardware stack levels required when called: 3
  3234 ;; This function calls:
  3235 ;;		_I2C_2_Master_Idle
  3236 ;; This function is called by:
  3237 ;;		_color_read_Red
  3238 ;;		_color_read_Blue
  3239 ;;		_color_read_Green
  3240 ;;		_color_read_Clear
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           	psect	text21
  3245   0019BC                     __ptext21:
  3246                           	callstack 0
  3247   0019BC                     _I2C_2_Master_Read:
  3248                           	callstack 26
  3249                           
  3250                           ; BSR set to: 14
  3251                           ;incstack = 0
  3252                           ;I2C_2_Master_Read@ack stored from wreg
  3253   0019BC  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  3254   0019BE                     
  3255                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  3256   0019BE  ECAA  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3257   0019C2                     
  3258                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3259   0019C2  010E               	movlb	14	; () banked
  3260   0019C4  87DA               	bsf	218,3,b	;volatile
  3261                           
  3262                           ;i2c.c: 56:   I2C_2_Master_Idle();
  3263   0019C6  ECAA  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3264   0019CA                     
  3265                           ;i2c.c: 57:   tmp = SSP2BUF;
  3266   0019CA  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3267                           
  3268                           ;i2c.c: 58:   I2C_2_Master_Idle();
  3269   0019CE  ECAA  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3270   0019D2                     
  3271                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3272   0019D2  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  3273   0019D4  B4D8               	btfsc	status,2,c
  3274   0019D6  EFEF  F00C         	goto	u1001
  3275   0019DA  EFF3  F00C         	goto	u1000
  3276   0019DE                     u1001:
  3277   0019DE  6A06               	clrf	??_I2C_2_Master_Read^0,c
  3278   0019E0  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  3279   0019E2  EFF4  F00C         	goto	u1018
  3280   0019E6                     u1000:
  3281   0019E6  6A06               	clrf	??_I2C_2_Master_Read^0,c
  3282   0019E8                     u1018:
  3283   0019E8  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  3284   0019EA  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  3285   0019EC  010E               	movlb	14	; () banked
  3286   0019EE  51DA               	movf	218,w,b	;volatile
  3287   0019F0  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  3288   0019F2  0BDF               	andlw	-33
  3289   0019F4  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  3290   0019F6  6FDA               	movwf	218,b	;volatile
  3291   0019F8                     
  3292                           ; BSR set to: 14
  3293                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3294   0019F8  89DA               	bsf	218,4,b	;volatile
  3295   0019FA                     
  3296                           ; BSR set to: 14
  3297                           ;i2c.c: 61:   return tmp;
  3298   0019FA  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  3299   0019FC                     
  3300                           ; BSR set to: 14
  3301   0019FC  0012               	return		;funcret
  3302   0019FE                     __end_of_I2C_2_Master_Read:
  3303                           	callstack 0
  3304                           
  3305 ;; *************** function _color_click_init *****************
  3306 ;; Defined at:
  3307 ;;		line 5 in file "color.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;		None
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;		None
  3312 ;; Return value:  Size  Location     Type
  3313 ;;                  1    wreg      void 
  3314 ;; Registers used:
  3315 ;;		wreg, status,2, status,0, cstack
  3316 ;; Tracked objects:
  3317 ;;		On entry : 0/0
  3318 ;;		On exit  : 0/0
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3323 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3324 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3325 ;;Total ram usage:        1 bytes
  3326 ;; Hardware stack levels used: 1
  3327 ;; Hardware stack levels required when called: 5
  3328 ;; This function calls:
  3329 ;;		_I2C_2_Master_Init
  3330 ;;		_color_writetoaddr
  3331 ;; This function is called by:
  3332 ;;		_main
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           	psect	text22
  3337   001A3E                     __ptext22:
  3338                           	callstack 0
  3339   001A3E                     _color_click_init:
  3340                           	callstack 25
  3341   001A3E                     
  3342                           ;color.c: 8:     I2C_2_Master_Init();
  3343   001A3E  EC80  F00D         	call	_I2C_2_Master_Init	;wreg free
  3344   001A42                     
  3345                           ;color.c: 10:   color_writetoaddr(0x00, 0x01);
  3346   001A42  0E01               	movlw	1
  3347   001A44  6E07               	movwf	color_writetoaddr@value^0,c
  3348   001A46  0E00               	movlw	0
  3349   001A48  ECCE  F00D         	call	_color_writetoaddr
  3350   001A4C                     
  3351                           ;color.c: 11:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3352   001A4C  0E3F               	movlw	63
  3353   001A4E  6E09               	movwf	??_color_click_init^0,c
  3354   001A50  0E55               	movlw	85
  3355   001A52                     u1497:
  3356   001A52  2EE8               	decfsz	wreg,f,c
  3357   001A54  D7FE               	bra	u1497
  3358   001A56  2E09               	decfsz	??_color_click_init^0,f,c
  3359   001A58  D7FC               	bra	u1497
  3360   001A5A  F000               	nop	
  3361   001A5C                     
  3362                           ;color.c: 13:  color_writetoaddr(0x00, 0x03);
  3363   001A5C  0E03               	movlw	3
  3364   001A5E  6E07               	movwf	color_writetoaddr@value^0,c
  3365   001A60  0E00               	movlw	0
  3366   001A62  ECCE  F00D         	call	_color_writetoaddr
  3367   001A66                     
  3368                           ;color.c: 15:  color_writetoaddr(0x01, 0xD5);
  3369   001A66  0ED5               	movlw	213
  3370   001A68  6E07               	movwf	color_writetoaddr@value^0,c
  3371   001A6A  0E01               	movlw	1
  3372   001A6C  ECCE  F00D         	call	_color_writetoaddr
  3373   001A70  0012               	return		;funcret
  3374   001A72                     __end_of_color_click_init:
  3375                           	callstack 0
  3376                           
  3377 ;; *************** function _color_writetoaddr *****************
  3378 ;; Defined at:
  3379 ;;		line 18 in file "color.c"
  3380 ;; Parameters:    Size  Location     Type
  3381 ;;  address         1    wreg     unsigned char 
  3382 ;;  value           1    6[COMRAM] unsigned char 
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;  address         1    7[COMRAM] unsigned char 
  3385 ;; Return value:  Size  Location     Type
  3386 ;;                  1    wreg      void 
  3387 ;; Registers used:
  3388 ;;		wreg, status,2, status,0, cstack
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3394 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3395 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3397 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3398 ;;Total ram usage:        2 bytes
  3399 ;; Hardware stack levels used: 1
  3400 ;; Hardware stack levels required when called: 4
  3401 ;; This function calls:
  3402 ;;		_I2C_2_Master_Start
  3403 ;;		_I2C_2_Master_Stop
  3404 ;;		_I2C_2_Master_Write
  3405 ;; This function is called by:
  3406 ;;		_color_click_init
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410                           	psect	text23
  3411   001B9C                     __ptext23:
  3412                           	callstack 0
  3413   001B9C                     _color_writetoaddr:
  3414                           	callstack 25
  3415                           
  3416                           ;incstack = 0
  3417                           ;color_writetoaddr@address stored from wreg
  3418   001B9C  6E08               	movwf	color_writetoaddr@address^0,c
  3419   001B9E                     
  3420                           ;color.c: 19:     I2C_2_Master_Start();
  3421   001B9E  EC0C  F00E         	call	_I2C_2_Master_Start	;wreg free
  3422                           
  3423                           ;color.c: 20:     I2C_2_Master_Write(0x52 | 0x00);
  3424   001BA2  0E52               	movlw	82
  3425   001BA4  ECF6  F00D         	call	_I2C_2_Master_Write
  3426                           
  3427                           ;color.c: 21:     I2C_2_Master_Write(0x80 | address);
  3428   001BA8  5008               	movf	color_writetoaddr@address^0,w,c
  3429   001BAA  0980               	iorlw	128
  3430   001BAC  ECF6  F00D         	call	_I2C_2_Master_Write
  3431                           
  3432                           ;color.c: 22:     I2C_2_Master_Write(value);
  3433   001BB0  5007               	movf	color_writetoaddr@value^0,w,c
  3434   001BB2  ECF6  F00D         	call	_I2C_2_Master_Write
  3435                           
  3436                           ;color.c: 23:     I2C_2_Master_Stop();
  3437   001BB6  EC07  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3438   001BBA  0012               	return		;funcret
  3439   001BBC                     __end_of_color_writetoaddr:
  3440                           	callstack 0
  3441                           
  3442 ;; *************** function _I2C_2_Master_Write *****************
  3443 ;; Defined at:
  3444 ;;		line 45 in file "i2c.c"
  3445 ;; Parameters:    Size  Location     Type
  3446 ;;  data_byte       1    wreg     unsigned char 
  3447 ;; Auto vars:     Size  Location     Type
  3448 ;;  data_byte       1    5[COMRAM] unsigned char 
  3449 ;; Return value:  Size  Location     Type
  3450 ;;                  1    wreg      void 
  3451 ;; Registers used:
  3452 ;;		wreg, status,2, status,0, cstack
  3453 ;; Tracked objects:
  3454 ;;		On entry : 0/0
  3455 ;;		On exit  : 0/0
  3456 ;;		Unchanged: 0/0
  3457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3459 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3461 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3462 ;;Total ram usage:        1 bytes
  3463 ;; Hardware stack levels used: 1
  3464 ;; Hardware stack levels required when called: 3
  3465 ;; This function calls:
  3466 ;;		_I2C_2_Master_Idle
  3467 ;; This function is called by:
  3468 ;;		_color_writetoaddr
  3469 ;;		_color_read_Red
  3470 ;;		_color_read_Blue
  3471 ;;		_color_read_Green
  3472 ;;		_color_read_Clear
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476                           	psect	text24
  3477   001BEC                     __ptext24:
  3478                           	callstack 0
  3479   001BEC                     _I2C_2_Master_Write:
  3480                           	callstack 26
  3481                           
  3482                           ;incstack = 0
  3483                           ;I2C_2_Master_Write@data_byte stored from wreg
  3484   001BEC  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  3485   001BEE                     
  3486                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3487   001BEE  ECAA  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3488   001BF2                     
  3489                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3490   001BF2  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3491   001BF6  0012               	return		;funcret
  3492   001BF8                     __end_of_I2C_2_Master_Write:
  3493                           	callstack 0
  3494                           
  3495 ;; *************** function _I2C_2_Master_Stop *****************
  3496 ;; Defined at:
  3497 ;;		line 39 in file "i2c.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;		None
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;		None
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  1    wreg      void 
  3504 ;; Registers used:
  3505 ;;		wreg, status,2, status,0, cstack
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3515 ;;Total ram usage:        0 bytes
  3516 ;; Hardware stack levels used: 1
  3517 ;; Hardware stack levels required when called: 3
  3518 ;; This function calls:
  3519 ;;		_I2C_2_Master_Idle
  3520 ;; This function is called by:
  3521 ;;		_color_writetoaddr
  3522 ;;		_color_read_Red
  3523 ;;		_color_read_Blue
  3524 ;;		_color_read_Green
  3525 ;;		_color_read_Clear
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           
  3529                           	psect	text25
  3530   001C0E                     __ptext25:
  3531                           	callstack 0
  3532   001C0E                     _I2C_2_Master_Stop:
  3533                           	callstack 26
  3534   001C0E                     
  3535                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3536   001C0E  ECAA  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3537   001C12                     
  3538                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3539   001C12  010E               	movlb	14	; () banked
  3540   001C14  85DA               	bsf	218,2,b	;volatile
  3541   001C16                     
  3542                           ; BSR set to: 14
  3543   001C16  0012               	return		;funcret
  3544   001C18                     __end_of_I2C_2_Master_Stop:
  3545                           	callstack 0
  3546                           
  3547 ;; *************** function _I2C_2_Master_Start *****************
  3548 ;; Defined at:
  3549 ;;		line 27 in file "i2c.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;		None
  3552 ;; Auto vars:     Size  Location     Type
  3553 ;;		None
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  1    wreg      void 
  3556 ;; Registers used:
  3557 ;;		wreg, status,2, status,0, cstack
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3567 ;;Total ram usage:        0 bytes
  3568 ;; Hardware stack levels used: 1
  3569 ;; Hardware stack levels required when called: 3
  3570 ;; This function calls:
  3571 ;;		_I2C_2_Master_Idle
  3572 ;; This function is called by:
  3573 ;;		_color_writetoaddr
  3574 ;;		_color_read_Red
  3575 ;;		_color_read_Blue
  3576 ;;		_color_read_Green
  3577 ;;		_color_read_Clear
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           	psect	text26
  3582   001C18                     __ptext26:
  3583                           	callstack 0
  3584   001C18                     _I2C_2_Master_Start:
  3585                           	callstack 26
  3586   001C18                     
  3587                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3588   001C18  ECAA  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3589   001C1C                     
  3590                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3591   001C1C  010E               	movlb	14	; () banked
  3592   001C1E  81DA               	bsf	218,0,b	;volatile
  3593   001C20                     
  3594                           ; BSR set to: 14
  3595   001C20  0012               	return		;funcret
  3596   001C22                     __end_of_I2C_2_Master_Start:
  3597                           	callstack 0
  3598                           
  3599 ;; *************** function _I2C_2_Master_Idle *****************
  3600 ;; Defined at:
  3601 ;;		line 22 in file "i2c.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;		None
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;		None
  3606 ;; Return value:  Size  Location     Type
  3607 ;;                  1    wreg      void 
  3608 ;; Registers used:
  3609 ;;		wreg, status,2, status,0
  3610 ;; Tracked objects:
  3611 ;;		On entry : 0/0
  3612 ;;		On exit  : 0/0
  3613 ;;		Unchanged: 0/0
  3614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3617 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3618 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3619 ;;Total ram usage:        1 bytes
  3620 ;; Hardware stack levels used: 1
  3621 ;; Hardware stack levels required when called: 2
  3622 ;; This function calls:
  3623 ;;		Nothing
  3624 ;; This function is called by:
  3625 ;;		_I2C_2_Master_Start
  3626 ;;		_I2C_2_Master_RepStart
  3627 ;;		_I2C_2_Master_Stop
  3628 ;;		_I2C_2_Master_Write
  3629 ;;		_I2C_2_Master_Read
  3630 ;; This function uses a non-reentrant model
  3631 ;;
  3632                           
  3633                           	psect	text27
  3634   001B54                     __ptext27:
  3635                           	callstack 0
  3636   001B54                     _I2C_2_Master_Idle:
  3637                           	callstack 26
  3638   001B54                     l64:
  3639   001B54  010E               	movlb	14	; () banked
  3640   001B56  B5D8               	btfsc	216,2,b	;volatile
  3641   001B58  EFB0  F00D         	goto	u851
  3642   001B5C  EFB2  F00D         	goto	u850
  3643   001B60                     u851:
  3644   001B60  EFAA  F00D         	goto	l64
  3645   001B64                     u850:
  3646   001B64                     
  3647                           ; BSR set to: 14
  3648   001B64  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3649   001B68  0E1F               	movlw	31
  3650   001B6A  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  3651   001B6C  A4D8               	btfss	status,2,c
  3652   001B6E  EFBB  F00D         	goto	u861
  3653   001B72  EFBD  F00D         	goto	u860
  3654   001B76                     u861:
  3655   001B76  EFAA  F00D         	goto	l64
  3656   001B7A                     u860:
  3657   001B7A                     
  3658                           ; BSR set to: 14
  3659   001B7A  0012               	return		;funcret
  3660   001B7C                     __end_of_I2C_2_Master_Idle:
  3661                           	callstack 0
  3662                           
  3663 ;; *************** function _I2C_2_Master_Init *****************
  3664 ;; Defined at:
  3665 ;;		line 4 in file "i2c.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;		None
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;		None
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  1    wreg      void 
  3672 ;; Registers used:
  3673 ;;		wreg, status,2
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3683 ;;Total ram usage:        0 bytes
  3684 ;; Hardware stack levels used: 1
  3685 ;; Hardware stack levels required when called: 2
  3686 ;; This function calls:
  3687 ;;		Nothing
  3688 ;; This function is called by:
  3689 ;;		_color_click_init
  3690 ;;		_main
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694                           	psect	text28
  3695   001B00                     __ptext28:
  3696                           	callstack 0
  3697   001B00                     _I2C_2_Master_Init:
  3698                           	callstack 27
  3699   001B00                     
  3700                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3701   001B00  010E               	movlb	14	; () banked
  3702   001B02  51D9               	movf	217,w,b	;volatile
  3703   001B04  0BF0               	andlw	-16
  3704   001B06  0908               	iorlw	8
  3705   001B08  6FD9               	movwf	217,b	;volatile
  3706   001B0A                     
  3707                           ; BSR set to: 14
  3708                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3709   001B0A  8BD9               	bsf	217,5,b	;volatile
  3710                           
  3711                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3712   001B0C  0E9F               	movlw	159
  3713   001B0E  6FD6               	movwf	214,b	;volatile
  3714   001B10                     
  3715                           ; BSR set to: 14
  3716                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3717   001B10  8A84               	bsf	132,5,c	;volatile
  3718   001B12                     
  3719                           ; BSR set to: 14
  3720                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3721   001B12  8C84               	bsf	132,6,c	;volatile
  3722   001B14                     
  3723                           ; BSR set to: 14
  3724                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3725   001B14  9BA7               	bcf	167,5,b	;volatile
  3726   001B16                     
  3727                           ; BSR set to: 14
  3728                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3729   001B16  9DA7               	bcf	167,6,b	;volatile
  3730                           
  3731                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3732   001B18  0E1D               	movlw	29
  3733   001B1A  6F1D               	movwf	29,b	;volatile
  3734                           
  3735                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3736   001B1C  0E1E               	movlw	30
  3737   001B1E  6F1C               	movwf	28,b	;volatile
  3738                           
  3739                           ;i2c.c: 18:   RD5PPS=0x1C;
  3740   001B20  0E1C               	movlw	28
  3741   001B22  6F6F               	movwf	111,b	;volatile
  3742                           
  3743                           ;i2c.c: 19:   RD6PPS=0x1B;
  3744   001B24  0E1B               	movlw	27
  3745   001B26  6F70               	movwf	112,b	;volatile
  3746   001B28                     
  3747                           ; BSR set to: 14
  3748   001B28  0012               	return		;funcret
  3749   001B2A                     __end_of_I2C_2_Master_Init:
  3750                           	callstack 0
  3751                           
  3752 ;; *************** function _Interrupts_init *****************
  3753 ;; Defined at:
  3754 ;;		line 9 in file "interrupts.c"
  3755 ;; Parameters:    Size  Location     Type
  3756 ;;		None
  3757 ;; Auto vars:     Size  Location     Type
  3758 ;;		None
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  1    wreg      void 
  3761 ;; Registers used:
  3762 ;;		None
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3772 ;;Total ram usage:        0 bytes
  3773 ;; Hardware stack levels used: 1
  3774 ;; Hardware stack levels required when called: 2
  3775 ;; This function calls:
  3776 ;;		Nothing
  3777 ;; This function is called by:
  3778 ;;		_main
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782                           	psect	text29
  3783   001BF8                     __ptext29:
  3784                           	callstack 0
  3785   001BF8                     _Interrupts_init:
  3786                           	callstack 28
  3787   001BF8                     
  3788                           ;interrupts.c: 15:     INTCONbits.PEIE=1;
  3789   001BF8  8CF2               	bsf	242,6,c	;volatile
  3790                           
  3791                           ;interrupts.c: 16:     PIE4bits.RC4IE=1;
  3792   001BFA  010E               	movlb	14	; () banked
  3793   001BFC  872D               	bsf	45,3,b	;volatile
  3794                           
  3795                           ;interrupts.c: 17:     PIE4bits.TX4IE=0;
  3796   001BFE  952D               	bcf	45,2,b	;volatile
  3797                           
  3798                           ;interrupts.c: 18:     INTCONbits.GIE=1;
  3799   001C00  8EF2               	bsf	242,7,c	;volatile
  3800   001C02                     
  3801                           ; BSR set to: 14
  3802   001C02  0012               	return		;funcret
  3803   001C04                     __end_of_Interrupts_init:
  3804                           	callstack 0
  3805                           
  3806 ;; *************** function _HighISR *****************
  3807 ;; Defined at:
  3808 ;;		line 37 in file "interrupts.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;		None
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;		None
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  1    wreg      void 
  3815 ;; Registers used:
  3816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3824 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3825 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3826 ;;Total ram usage:        2 bytes
  3827 ;; Hardware stack levels used: 1
  3828 ;; Hardware stack levels required when called: 1
  3829 ;; This function calls:
  3830 ;;		_getCharFromTxBuf
  3831 ;;		_isDataInTxBuf
  3832 ;;		_putCharToRxBuf
  3833 ;; This function is called by:
  3834 ;;		Interrupt level 2
  3835 ;; This function uses a non-reentrant model
  3836 ;;
  3837                           
  3838                           	psect	intcode
  3839   000008                     __pintcode:
  3840                           	callstack 0
  3841   000008                     _HighISR:
  3842                           	callstack 21
  3843                           
  3844                           ; BSR set to: 14
  3845                           ;incstack = 0
  3846   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3847   00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  3848   00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  3849   000012                     
  3850                           ;interrupts.c: 39:     if (PIR4bits.RC4IF == 1){
  3851   000012  010E               	movlb	14	; () banked
  3852   000014  A737               	btfss	55,3,b	;volatile
  3853   000016  EF0F  F000         	goto	i2u108_41
  3854   00001A  EF11  F000         	goto	i2u108_40
  3855   00001E                     i2u108_41:
  3856   00001E  EF14  F000         	goto	i2l2147
  3857   000022                     i2u108_40:
  3858   000022                     
  3859                           ; BSR set to: 14
  3860                           ;interrupts.c: 40:         putCharToRxBuf(RC4REG);
  3861   000022  51E3               	movf	227,w,b	;volatile
  3862   000024  EC95  F00D         	call	_putCharToRxBuf
  3863   000028                     i2l2147:
  3864                           
  3865                           ;interrupts.c: 42:     if (PIR4bits.TX4IF == 1 && PIE4bits.TX4IE==1){
  3866   000028  010E               	movlb	14	; () banked
  3867   00002A  A537               	btfss	55,2,b	;volatile
  3868   00002C  EF1A  F000         	goto	i2u109_41
  3869   000030  EF1C  F000         	goto	i2u109_40
  3870   000034                     i2u109_41:
  3871   000034  EF35  F000         	goto	i2l271
  3872   000038                     i2u109_40:
  3873   000038                     
  3874                           ; BSR set to: 14
  3875   000038  A52D               	btfss	45,2,b	;volatile
  3876   00003A  EF21  F000         	goto	i2u110_41
  3877   00003E  EF23  F000         	goto	i2u110_40
  3878   000042                     i2u110_41:
  3879   000042  EF35  F000         	goto	i2l271
  3880   000046                     i2u110_40:
  3881   000046                     
  3882                           ; BSR set to: 14
  3883                           ;interrupts.c: 43:         if (isDataInTxBuf()==1 ) {TX4REG = getCharFromTxBuf();}
  3884   000046  ECEA  F00D         	call	_isDataInTxBuf	;wreg free
  3885   00004A  06E8               	decf	wreg,f,c
  3886   00004C  A4D8               	btfss	status,2,c
  3887   00004E  EF2B  F000         	goto	i2u111_41
  3888   000052  EF2D  F000         	goto	i2u111_40
  3889   000056                     i2u111_41:
  3890   000056  EF33  F000         	goto	i2l269
  3891   00005A                     i2u111_40:
  3892   00005A  EC6A  F00D         	call	_getCharFromTxBuf	;wreg free
  3893   00005E  010E               	movlb	14	; () banked
  3894   000060  6FE4               	movwf	228,b	;volatile
  3895   000062  EF35  F000         	goto	i2l271
  3896   000066                     i2l269:
  3897   000066  010E               	movlb	14	; () banked
  3898   000068  952D               	bcf	45,2,b	;volatile
  3899   00006A                     i2l271:
  3900                           
  3901                           ; BSR set to: 14
  3902   00006A  C004  FFDA         	movff	??_HighISR+1,fsr2h
  3903   00006E  C003  FFD9         	movff	??_HighISR,fsr2l
  3904   000072  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3905   000074  0011               	retfie		f
  3906   000076                     __end_of_HighISR:
  3907                           	callstack 0
  3908                           
  3909 ;; *************** function _putCharToRxBuf *****************
  3910 ;; Defined at:
  3911 ;;		line 56 in file "serial.c"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;  byte            1    wreg     unsigned char 
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;  byte            1    0[COMRAM] unsigned char 
  3916 ;; Return value:  Size  Location     Type
  3917 ;;                  1    wreg      void 
  3918 ;; Registers used:
  3919 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3920 ;; Tracked objects:
  3921 ;;		On entry : 0/0
  3922 ;;		On exit  : 0/0
  3923 ;;		Unchanged: 0/0
  3924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3926 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3928 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3929 ;;Total ram usage:        1 bytes
  3930 ;; Hardware stack levels used: 1
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		_HighISR
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	text31
  3939   001B2A                     __ptext31:
  3940                           	callstack 0
  3941   001B2A                     _putCharToRxBuf:
  3942                           	callstack 21
  3943                           
  3944                           ; BSR set to: 14
  3945                           ;incstack = 0
  3946                           ;putCharToRxBuf@byte stored from wreg
  3947   001B2A  6E01               	movwf	putCharToRxBuf@byte^0,c
  3948   001B2C                     
  3949                           ;serial.c: 57:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  3950   001B2C  0E13               	movlw	19
  3951   001B2E  645A               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  3952   001B30  EF9C  F00D         	goto	i2u105_41
  3953   001B34  EF9E  F00D         	goto	i2u105_40
  3954   001B38                     i2u105_41:
  3955   001B38  EFA0  F00D         	goto	i2l2065
  3956   001B3C                     i2u105_40:
  3957   001B3C  0E00               	movlw	0
  3958   001B3E  6E5A               	movwf	_RxBufWriteCnt^0,c	;volatile
  3959   001B40                     i2l2065:
  3960                           
  3961                           ;serial.c: 58:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  3962   001B40  0EC1               	movlw	low _EUSART4RXbuf
  3963   001B42  245A               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  3964   001B44  6ED9               	movwf	fsr2l,c
  3965   001B46  6ADA               	clrf	fsr2h,c
  3966   001B48  0E00               	movlw	high _EUSART4RXbuf
  3967   001B4A  22DA               	addwfc	fsr2h,f,c
  3968   001B4C  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  3969   001B50  2A5A               	incf	_RxBufWriteCnt^0,f,c	;volatile
  3970   001B52  0012               	return		;funcret
  3971   001B54                     __end_of_putCharToRxBuf:
  3972                           	callstack 0
  3973                           
  3974 ;; *************** function _isDataInTxBuf *****************
  3975 ;; Defined at:
  3976 ;;		line 84 in file "serial.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;		None
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;		None
  3981 ;; Return value:  Size  Location     Type
  3982 ;;                  1    wreg      unsigned char 
  3983 ;; Registers used:
  3984 ;;		wreg, status,2, status,0
  3985 ;; Tracked objects:
  3986 ;;		On entry : 0/0
  3987 ;;		On exit  : 0/0
  3988 ;;		Unchanged: 0/0
  3989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3994 ;;Total ram usage:        0 bytes
  3995 ;; Hardware stack levels used: 1
  3996 ;; This function calls:
  3997 ;;		Nothing
  3998 ;; This function is called by:
  3999 ;;		_HighISR
  4000 ;;		_sendTxBuf
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           	psect	text32
  4005   001BD4                     __ptext32:
  4006                           	callstack 0
  4007   001BD4                     _isDataInTxBuf:
  4008                           	callstack 21
  4009   001BD4                     
  4010                           ;serial.c: 85:     return (TxBufWriteCnt!=TxBufReadCnt);
  4011   001BD4  5057               	movf	_TxBufReadCnt^0,w,c	;volatile
  4012   001BD6  1858               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  4013   001BD8  A4D8               	btfss	status,2,c
  4014   001BDA  EFF1  F00D         	goto	i2u45_41
  4015   001BDE  EFF4  F00D         	goto	i2u45_40
  4016   001BE2                     i2u45_41:
  4017   001BE2  0E01               	movlw	1
  4018   001BE4  EFF5  F00D         	goto	i2u46_40
  4019   001BE8                     i2u45_40:
  4020   001BE8  0E00               	movlw	0
  4021   001BEA                     i2u46_40:
  4022   001BEA  0012               	return		;funcret
  4023   001BEC                     __end_of_isDataInTxBuf:
  4024                           	callstack 0
  4025                           
  4026 ;; *************** function _getCharFromTxBuf *****************
  4027 ;; Defined at:
  4028 ;;		line 70 in file "serial.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;		None
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;		None
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1    wreg      unsigned char 
  4035 ;; Registers used:
  4036 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4044 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4045 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4046 ;;Total ram usage:        2 bytes
  4047 ;; Hardware stack levels used: 1
  4048 ;; This function calls:
  4049 ;;		Nothing
  4050 ;; This function is called by:
  4051 ;;		_HighISR
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           	psect	text33
  4056   001AD4                     __ptext33:
  4057                           	callstack 0
  4058   001AD4                     _getCharFromTxBuf:
  4059                           	callstack 21
  4060   001AD4                     
  4061                           ;serial.c: 71:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  4062   001AD4  0E3B               	movlw	59
  4063   001AD6  6457               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  4064   001AD8  EF70  F00D         	goto	i2u106_41
  4065   001ADC  EF72  F00D         	goto	i2u106_40
  4066   001AE0                     i2u106_41:
  4067   001AE0  EF74  F00D         	goto	i2l2073
  4068   001AE4                     i2u106_40:
  4069   001AE4  0E00               	movlw	0
  4070   001AE6  6E57               	movwf	_TxBufReadCnt^0,c	;volatile
  4071   001AE8                     i2l2073:
  4072                           
  4073                           ;serial.c: 72:     return EUSART4TXbuf[TxBufReadCnt++];
  4074   001AE8  2A57               	incf	_TxBufReadCnt^0,f,c	;volatile
  4075   001AEA  0457               	decf	_TxBufReadCnt^0,w,c	;volatile
  4076   001AEC  6E01               	movwf	??_getCharFromTxBuf^0,c
  4077   001AEE  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  4078   001AF0  0E00               	movlw	low _EUSART4TXbuf
  4079   001AF2  2401               	addwf	??_getCharFromTxBuf^0,w,c
  4080   001AF4  6ED9               	movwf	fsr2l,c
  4081   001AF6  0E01               	movlw	high _EUSART4TXbuf
  4082   001AF8  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  4083   001AFA  6EDA               	movwf	fsr2h,c
  4084   001AFC  50DF               	movf	indf2,w,c
  4085   001AFE  0012               	return		;funcret
  4086   001B00                     __end_of_getCharFromTxBuf:
  4087                           	callstack 0
  4088                           
  4089                           	psect	rparam
  4090   000000                     
  4091                           	psect	temp
  4092   00005B                     btemp:
  4093                           	callstack 0
  4094   00005B                     	ds	1
  4095   000000                     int$flags	set	btemp
  4096   000000                     wtemp8	set	btemp+1
  4097   000000                     ttemp5	set	btemp+1
  4098   000000                     ttemp6	set	btemp+4
  4099   000000                     ttemp7	set	btemp+8
  4100                           
  4101                           	psect	idloc
  4102                           
  4103                           ;Config register IDLOC0 @ 0x200000
  4104                           ;	unspecified, using default values
  4105   200000                     	org	2097152
  4106   200000  0FFF               	dw	4095
  4107                           
  4108                           ;Config register IDLOC1 @ 0x200002
  4109                           ;	unspecified, using default values
  4110   200002                     	org	2097154
  4111   200002  0FFF               	dw	4095
  4112                           
  4113                           ;Config register IDLOC2 @ 0x200004
  4114                           ;	unspecified, using default values
  4115   200004                     	org	2097156
  4116   200004  0FFF               	dw	4095
  4117                           
  4118                           ;Config register IDLOC3 @ 0x200006
  4119                           ;	unspecified, using default values
  4120   200006                     	org	2097158
  4121   200006  0FFF               	dw	4095
  4122                           
  4123                           ;Config register IDLOC4 @ 0x200008
  4124                           ;	unspecified, using default values
  4125   200008                     	org	2097160
  4126   200008  0FFF               	dw	4095
  4127                           
  4128                           ;Config register IDLOC5 @ 0x20000A
  4129                           ;	unspecified, using default values
  4130   20000A                     	org	2097162
  4131   20000A  0FFF               	dw	4095
  4132                           
  4133                           ;Config register IDLOC6 @ 0x20000C
  4134                           ;	unspecified, using default values
  4135   20000C                     	org	2097164
  4136   20000C  0FFF               	dw	4095
  4137                           
  4138                           ;Config register IDLOC7 @ 0x20000E
  4139                           ;	unspecified, using default values
  4140   20000E                     	org	2097166
  4141   20000E  0FFF               	dw	4095
  4142                           
  4143                           	psect	config
  4144                           
  4145                           ;Config register CONFIG1L @ 0x300000
  4146                           ;	External Oscillator mode Selection bits
  4147                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4148                           ;	Power-up default value for COSC bits
  4149                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4150   300000                     	org	3145728
  4151   300000  AA                 	db	170
  4152                           
  4153                           ;Config register CONFIG1H @ 0x300001
  4154                           ;	unspecified, using default values
  4155                           ;	Clock Out Enable bit
  4156                           ;	CLKOUTEN = 0x1, unprogrammed default
  4157                           ;	Clock Switch Enable bit
  4158                           ;	CSWEN = 0x1, unprogrammed default
  4159                           ;	Fail-Safe Clock Monitor Enable bit
  4160                           ;	FCMEN = 0x1, unprogrammed default
  4161   300001                     	org	3145729
  4162   300001  FF                 	db	255
  4163                           
  4164                           ;Config register CONFIG2L @ 0x300002
  4165                           ;	unspecified, using default values
  4166                           ;	Master Clear Enable bit
  4167                           ;	MCLRE = 0x1, unprogrammed default
  4168                           ;	Power-up Timer Enable bit
  4169                           ;	PWRTE = 0x1, unprogrammed default
  4170                           ;	Low-power BOR enable bit
  4171                           ;	LPBOREN = 0x1, unprogrammed default
  4172                           ;	Brown-out Reset Enable bits
  4173                           ;	BOREN = 0x3, unprogrammed default
  4174   300002                     	org	3145730
  4175   300002  FF                 	db	255
  4176                           
  4177                           ;Config register CONFIG2H @ 0x300003
  4178                           ;	unspecified, using default values
  4179                           ;	Brown Out Reset Voltage selection bits
  4180                           ;	BORV = 0x3, unprogrammed default
  4181                           ;	ZCD Disable bit
  4182                           ;	ZCD = 0x1, unprogrammed default
  4183                           ;	PPSLOCK bit One-Way Set Enable bit
  4184                           ;	PPS1WAY = 0x1, unprogrammed default
  4185                           ;	Stack Full/Underflow Reset Enable bit
  4186                           ;	STVREN = 0x1, unprogrammed default
  4187                           ;	Debugger Enable bit
  4188                           ;	DEBUG = 0x1, unprogrammed default
  4189                           ;	Extended Instruction Set Enable bit
  4190                           ;	XINST = 0x1, unprogrammed default
  4191   300003                     	org	3145731
  4192   300003  FF                 	db	255
  4193                           
  4194                           ;Config register CONFIG3L @ 0x300004
  4195                           ;	WDT Period Select bits
  4196                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4197                           ;	WDT operating mode
  4198                           ;	WDTE = OFF, WDT Disabled
  4199   300004                     	org	3145732
  4200   300004  9F                 	db	159
  4201                           
  4202                           ;Config register CONFIG3H @ 0x300005
  4203                           ;	unspecified, using default values
  4204                           ;	WDT Window Select bits
  4205                           ;	WDTCWS = 0x7, unprogrammed default
  4206                           ;	WDT input clock selector
  4207                           ;	WDTCCS = 0x7, unprogrammed default
  4208   300005                     	org	3145733
  4209   300005  FF                 	db	255
  4210                           
  4211                           ;Config register CONFIG4L @ 0x300006
  4212                           ;	unspecified, using default values
  4213                           ;	Write Protection Block 0
  4214                           ;	WRT0 = 0x1, unprogrammed default
  4215                           ;	Write Protection Block 1
  4216                           ;	WRT1 = 0x1, unprogrammed default
  4217                           ;	Write Protection Block 2
  4218                           ;	WRT2 = 0x1, unprogrammed default
  4219                           ;	Write Protection Block 3
  4220                           ;	WRT3 = 0x1, unprogrammed default
  4221                           ;	Write Protection Block 3
  4222                           ;	WRT4 = 0x1, unprogrammed default
  4223                           ;	Write Protection Block 3
  4224                           ;	WRT5 = 0x1, unprogrammed default
  4225                           ;	Write Protection Block 3
  4226                           ;	WRT6 = 0x1, unprogrammed default
  4227                           ;	Write Protection Block 3
  4228                           ;	WRT7 = 0x1, unprogrammed default
  4229   300006                     	org	3145734
  4230   300006  FF                 	db	255
  4231                           
  4232                           ;Config register CONFIG4H @ 0x300007
  4233                           ;	unspecified, using default values
  4234                           ;	Configuration Register Write Protection bit
  4235                           ;	WRTC = 0x1, unprogrammed default
  4236                           ;	Boot Block Write Protection bit
  4237                           ;	WRTB = 0x1, unprogrammed default
  4238                           ;	Data EEPROM Write Protection bit
  4239                           ;	WRTD = 0x1, unprogrammed default
  4240                           ;	Scanner Enable bit
  4241                           ;	SCANE = 0x1, unprogrammed default
  4242                           ;	Low Voltage Programming Enable bit
  4243                           ;	LVP = 0x1, unprogrammed default
  4244   300007                     	org	3145735
  4245   300007  FF                 	db	255
  4246                           
  4247                           ;Config register CONFIG5L @ 0x300008
  4248                           ;	unspecified, using default values
  4249                           ;	UserNVM Program Memory Code Protection bit
  4250                           ;	CP = 0x1, unprogrammed default
  4251                           ;	DataNVM Memory Code Protection bit
  4252                           ;	CPD = 0x1, unprogrammed default
  4253   300008                     	org	3145736
  4254   300008  FF                 	db	255
  4255                           
  4256                           ;Config register CONFIG5H @ 0x300009
  4257                           ;	unspecified, using default values
  4258   300009                     	org	3145737
  4259   300009  FF                 	db	255
  4260                           
  4261                           ;Config register CONFIG6L @ 0x30000A
  4262                           ;	unspecified, using default values
  4263                           ;	Table Read Protection Block 0
  4264                           ;	EBTR0 = 0x1, unprogrammed default
  4265                           ;	Table Read Protection Block 1
  4266                           ;	EBTR1 = 0x1, unprogrammed default
  4267                           ;	Table Read Protection Block 2
  4268                           ;	EBTR2 = 0x1, unprogrammed default
  4269                           ;	Table Read Protection Block 3
  4270                           ;	EBTR3 = 0x1, unprogrammed default
  4271                           ;	Table Read Protection Block 4
  4272                           ;	EBTR4 = 0x1, unprogrammed default
  4273                           ;	Table Read Protection Block 5
  4274                           ;	EBTR5 = 0x1, unprogrammed default
  4275                           ;	Table Read Protection Block 6
  4276                           ;	EBTR6 = 0x1, unprogrammed default
  4277                           ;	Table Read Protection Block 7
  4278                           ;	EBTR7 = 0x1, unprogrammed default
  4279   30000A                     	org	3145738
  4280   30000A  FF                 	db	255
  4281                           
  4282                           ;Config register CONFIG6H @ 0x30000B
  4283                           ;	unspecified, using default values
  4284                           ;	Boot Block Table Read Protection bit
  4285                           ;	EBTRB = 0x1, unprogrammed default
  4286   30000B                     	org	3145739
  4287   30000B  FF                 	db	255
  4288                           tosu	equ	0xFFF
  4289                           tosh	equ	0xFFE
  4290                           tosl	equ	0xFFD
  4291                           stkptr	equ	0xFFC
  4292                           pclatu	equ	0xFFB
  4293                           pclath	equ	0xFFA
  4294                           pcl	equ	0xFF9
  4295                           tblptru	equ	0xFF8
  4296                           tblptrh	equ	0xFF7
  4297                           tblptrl	equ	0xFF6
  4298                           tablat	equ	0xFF5
  4299                           prodh	equ	0xFF4
  4300                           prodl	equ	0xFF3
  4301                           indf0	equ	0xFEF
  4302                           postinc0	equ	0xFEE
  4303                           postdec0	equ	0xFED
  4304                           preinc0	equ	0xFEC
  4305                           plusw0	equ	0xFEB
  4306                           fsr0h	equ	0xFEA
  4307                           fsr0l	equ	0xFE9
  4308                           wreg	equ	0xFE8
  4309                           indf1	equ	0xFE7
  4310                           postinc1	equ	0xFE6
  4311                           postdec1	equ	0xFE5
  4312                           preinc1	equ	0xFE4
  4313                           plusw1	equ	0xFE3
  4314                           fsr1h	equ	0xFE2
  4315                           fsr1l	equ	0xFE1
  4316                           bsr	equ	0xFE0
  4317                           indf2	equ	0xFDF
  4318                           postinc2	equ	0xFDE
  4319                           postdec2	equ	0xFDD
  4320                           preinc2	equ	0xFDC
  4321                           plusw2	equ	0xFDB
  4322                           fsr2h	equ	0xFDA
  4323                           fsr2l	equ	0xFD9
  4324                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        0
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     97     154
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_1(CODE[34]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 34
		 -> STR_1(CODE[34]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 34
		 -> STR_1(CODE[34]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2052$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_1(CODE[34]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1999$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1999$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    S851DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    S851DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                66    66      0    8895
                                             31 BANK0     66    66      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                   _color_click_init
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                    _initDCmotorsPWM
                         _initUSART4
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    7316
                                              6 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6830
                                             84 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    6369
                                             66 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4802
                                             31 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2533
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1177
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              5 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Green                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Clear                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Blue                                      7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              2     2      0      22
                                              2 COMRAM     2     2      0
                   _getCharFromTxBuf
                      _isDataInTxBuf
                     _putCharToRxBuf
 ---------------------------------------------------------------------------------
 (10) _putCharToRxBuf                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _isDataInTxBuf                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _getCharFromTxBuf                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_read_Blue
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Clear
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Green
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Red
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 _HighISR (ROOT)
   _getCharFromTxBuf
   _isDataInTxBuf
   _putCharToRxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      60        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     61      9A       5       96.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBIGSFRhlllhl     52      0       0      42        0.0%
BITBIGSFRhlllll     37      0       0      44        0.0%
BITBIGSFRhhhhl      32      0       0      33        0.0%
BITBIGSFRllh        2D      0       0      47        0.0%
BITBIGSFRlllhll     2A      0       0      54        0.0%
BITBIGSFRlllll      26      0       0      58        0.0%
BITBIGSFRlllhhh     1E      0       0      48        0.0%
BITBIGSFRhhhlll     1E      0       0      37        0.0%
BITBIGSFRlllhhh     11      0       0      49        0.0%
BITBIGSFRlllhll      F      0       0      56        0.0%
BITBIGSFRhhhlhh      E      0       0      34        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhll      9      0       0      55        0.0%
BITBIGSFRhlllll      8      0       0      45        0.0%
BITBIGSFRllllh       6      0       0      57        0.0%
BITBIGSFRlllhll      6      0       0      53        0.0%
BITBIGSFRlllhlh      5      0       0      52        0.0%
BITBIGSFRlllhhl      3      0       0      51        0.0%
BITBIGSFRhllllh      2      0       0      43        0.0%
BITBIGSFRhhhllh      2      0       0      36        0.0%
BITBIGSFRhlllhh      1      0       0      41        0.0%
BITBIGSFRhlhhh       1      0       0      38        0.0%
BITBIGSFRhhhlhl      1      0       0      35        0.0%
BITBIGSFRlllhhh      1      0       0      50        0.0%
BITBIGSFRhlhhl       1      0       0      39        0.0%
BITBIGSFRhllh        1      0       0      40        0.0%
BITBIGSFRlh          1      0       0      46        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     130      59        0.0%
DATA                 0      0     130       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Mar 08 17:11:36 2023

               _color_read_Red 1838                _color_read_Blue 1928                             l22 1BBA  
                           l31 18D6                             l25 1886                             l34 1926  
                           l19 1A70                             l28 1976                             l61 1B28  
                           l70 1C20                             l64 1B54                             l73 1C0C  
                           l82 19FC                             l67 1B7A                             l76 1C16  
                           l79 1BF6               _color_read_Clear 18D8               _color_read_Green 1888  
            ??_Interrupts_init 0005                            l133 171A                            l310 1B9A  
                          l231 15BE                            l322 1BD2                            l262 1C02  
                          l319 1BBE                            l328 1AD2                            l490 138A  
                          l477 1226                            u850 1B64                            u851 1B60  
                          u860 1B7A                            u861 1B76                            _abs 19FE  
                          _pad 171C                            wreg 000FE8                           l1103 1A34  
                         l2001 168C                           l1041 17E6                           l1106 1A3C  
                         l2011 16F4                           l2003 169C                           ?_abs 0017  
                         l2021 170E                           l2013 16F6                           l2005 16C2  
                         l1118 168A                           l1126 19BA                           l2023 1718  
                         l2015 1700                           l2007 16C6                           l2031 1B8A  
                         l1063 173E                           l1072 0EB0                           l2017 1702  
                         l2009 16EA                           l2033 1B94                           l2025 1B7C  
                         l2201 10D2                           l1129 1C22                           l1074 0EB8  
                         l2019 170C                           l2035 1B96                           l2027 1B86  
                         l2211 1114                           l2203 10D6                           l1067 1794  
                         l1075 0EFE                           l2037 1B98                           l2029 1B88  
                         l2053 1AA4                           l2221 116E                           l2213 1132  
                         l2205 10E4                           l2301 0E88                           l1093 14D8  
                         l1086 109E                           l2039 1BF8                           l2055 1AA8  
                         l2223 119C                           l2215 113A                           l2231 11D6  
                         l2207 1104                           l2311 0EE6                           l2303 0EA4  
                         l2057 1AB6                           l2233 11E6                           l2225 11BC  
                         l2217 114E                           l2209 1108                           l2241 122C  
                         l2321 0F14                           l2313 0EF2                           l2305 0EC0  
                         l2401 14EC                           l2059 1ABA                           l2235 1206  
                         l2227 11BE                           l2219 115C                           l2251 128C  
                         l2243 123A                           l2331 1020                           l2323 0F96  
                         l2315 0EFA                           l2307 0ED0                           l1099 1836  
                         l2411 150C                           l2403 14F0                           l2229 11D0  
                         l2261 1302                           l2253 12AA                           l2245 125A  
                         l2181 160E                           l2173 15C2                           l2341 107E  
                         l2333 103E                           l2325 0F9C                           l2317 0F06  
                         l2309 0ED6                           l2421 1528                           l2413 1510  
                         l2405 14F4                           l2271 136A                           l2263 1322  
                         l2255 12B2                           l2247 125E                           l2239 1228  
                         l2183 1644                           l2175 15D4                           l2191 1996  
                         l2335 1058                           l2327 0FA2                           l2319 0F0E  
                         l2351 13CC                           l2431 1540                           l2423 1530  
                         l2415 1514                           l2407 14FC                           l2265 1334  
                         l2257 12C6                           l2249 126C                           l2177 15E6  
                         l2193 199A                           l2281 174A                           l2337 1068  
                         l2329 1006                           l2361 146E                           l2353 13D0  
                         l2345 138C                           l2441 154A                           l2433 1542  
                         l2425 1534                           l2417 1518                           l2409 1504  
                         l2195 10A0                           l2259 12D4                           l2267 133A  
                         l2291 1A18                           l2179 15F0                           l2187 1978  
                         l2283 175E                           l2275 171C                           l2339 106E  
                         l2355 13E0                           l2347 13B0                           l2451 157C  
                         l2443 154C                           l2435 1544                           l2427 1538  
                         l2419 1520                           l2197 10A4                           l2269 134A  
                         l2189 1984                           l2285 1762                           l2277 172A  
                         l2293 0E24                           l2365 149E                           l2357 13FC  
                         l2349 13BE                           l2381 182C                           l2453 15B2  
                         l2445 1558                           l2437 1546                           l2429 153C  
                         l1823 1B54                           l2199 10B2                           l2287 1780  
                         l2279 1736                           l2295 0E44                           l2359 1418  
                         l2375 17E8                           l2391 17B8                           l2447 1564  
                         l2439 1548                           l1921 1B00                           l1825 1B64  
                         l2289 19FE                           l2297 0E58                           l2369 14B0  
                         l2377 17F4                           l2393 17D4                           l2385 1796  
                         l2449 1570                           l1931 1B16                           l1923 1B0A  
                         l2299 0E68                           l2379 1810                           l2387 17A8  
                         l1925 1B10                           l1933 1B9E                           l1941 19C2  
                         l2389 17B0                           l2397 14DA                           l1927 1B12  
                         l1943 19CA                           l1935 1C04                           l2399 14E6  
                         l1929 1B14                           l1881 1C1C                           l1945 19D2  
                         l1937 1C08                           l1953 1BBE                           l1883 1BEE  
                         l1971 1A4C                           l1947 19F8                           l1939 19BE  
                         l1955 1BCE                           l1885 1BF2                           l1973 1A5C  
                         l1949 19FA                           ?_pad 0015                           l1879 1C18  
                         l1887 1C0E                           l1975 1A66                           l1967 1A3E  
                         l1983 1928                           l1991 18CE                           l1889 1C12  
                         l1969 1A42                           l1985 196E                           l1977 1838  
                         l1995 18D8                           l1979 187E                           l1997 191E  
                         l1989 1888                           STR_1 0E01                           u1000 19E6  
                         u1001 19DE                           u1020 1BCE                           u1021 1BCA  
                         u1040 1AD2                           u1200 10E4                           u1041 1ACE  
                         u1201 10E0                           u1018 19E8                           u1211 110E  
                         u1220 1132                           u1300 1302                           u1140 15D4  
                         u1221 112E                           u1301 12FE                           u1141 15D0  
                         u1230 115C                           u1310 134A                           u1150 15E6  
                         u1231 1158                           u1311 1346                           u1151 15E2  
                         u1240 119C                           u1160 160E                           u1320 172A  
                         u1400 0EE6                           u1241 1198                           u1161 160A  
                         u1321 1726                           u1401 0EE2                           u1250 11E6  
                         u1170 1644                           u1330 1780                           u1410 1020  
                         u1251 11E2                           u1171 1640                           u1331 177C  
                         u1411 101C                           u1260 123A                           u1340 1A18  
                         u1180 19BA                           u1420 103E                           u1261 1236  
                         u1341 1A14                           u1181 19B6                           u1421 103A  
                         u1190 10B2                           u1270 126C                           u1430 1058  
                         u1350 0E54                           u1191 10AE                           u1271 1268  
                         u1431 1054                           u1351 0E4E                           u1280 12AA  
                         u1440 1068                           u1360 0E56                   _BAUD4CONbits 000EE9  
                         u1281 12A6                           u1441 1064                           u1290 12D4  
                         u1370 0E68                           u1450 13B0                           u1291 12D0  
                         u1371 0E64                           u1451 13AC                           u1380 0EA4  
                         u1460 13FC                           u1381 0EA0                           u1461 13F8  
                         u1390 0ED0                           u1470 1418                           u1391 0ECC  
                         u1471 1414                           u1480 182C                           u1481 1828  
                         _T2PR 000FBC                           u1497 1A52                           abs@a 0017  
                         _dbuf 00DA                           _main 14DA                           _dtoa 0E24  
                         _prec 00D7                           pad@i 001C                           pad@p 0019  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001E                           fsr2l 000FD9  
                         btemp 005B                           start 0076         __end_of_color_read_Red 1888  
              __end_of_HighISR 0076                   ___param_bank 000000                          ??_abs 0019  
                        ??_pad 001B                __end_of___aodiv 1228                          ?_main 0001  
                        ?_dtoa 0020                __end_of___aomod 138C                          i2l350 1BEA  
                        i2l343 1AFE                          i2l271 006A                          i2l336 1B52  
                        i2l269 0066                   vfpfcnvrt@fmt 0045        __end_of_sendCharSerial4 1BD4  
   __end_of_I2C_2_Master_Start 1C22     __end_of_I2C_2_Master_Write 1BF8                          _flags 00D9  
                        _fputc 15C2                          _fputs 1978                          pad@fp 0015  
                        main@B 00A9                          main@C 00AD                          main@G 00AB  
                        _width 00D5                          main@R 00A7                          _putch 1C22  
                        dtoa@d 0022                          dtoa@i 0041                          dtoa@n 0038  
                        dtoa@p 0034                          dtoa@s 0040                          dtoa@w 0036  
                        tablat 000FF5                          ttemp5 005C                          ttemp6 005F  
                        ttemp7 0063                          status 000FD8                          wtemp8 005C  
              __end_of_sprintf 17E8        __end_of_color_read_Blue 1978          _I2C_2_Master_RepStart 1C04  
           putCharToRxBuf@byte 0001                ?_color_read_Red 0009                __initialization 1A72  
                 __end_of_main 15C2                   __end_of_dtoa 10A0                         ??_main 0057  
                       ??_dtoa 002A                  __activetblptr 000001                         ?_fputc 0005  
                       ?_fputs 000E                         _CCPR1H 000FAA                         _CCPR2H 000FA6  
                       _CCPR3H 000F25                         _CCPR4H 000F21                         ?_putch 0001  
                       _RC0PPS 000E62                         _RC4REG 000EE3                         _RE2PPS 000E74  
                       _RD5PPS 000E6F                         _RC7PPS 000E69                         _RE4PPS 000E76  
                       _RD6PPS 000E70                         i2l2061 1B2C                         i2l2071 1AE4  
                       i2l2063 1B3C                         i2l2151 0046                         i2l2143 0012  
                       i2l2073 1AE8                         i2l2065 1B40                         i2l2153 005A  
                       i2l2145 0022                         i2l2067 1B50                         i2l2147 0028  
                       i2l2069 1AD4                         i2l2149 0038                         i2l1527 1BD4  
                       _RG6PPS 000E88                      ??_HighISR 0003       __end_of_color_click_init 1A72  
                       _RX4PPS 000E15                         _TX4REG 000EE4                   _CCPTMRS0bits 000FAD  
                 vfprintf@cfmt 0055               _getCharFromTxBuf 1AD4                      ??___aodiv 0015  
                    ??___aomod 0015                         clear_0 1A78                         clear_1 1A84  
                       isa$std 000001                         pad@buf 0017                         dtoa@fp 0020  
                       fputc@c 0005                         fputs@c 0012                         fputs@i 0013  
                       fputs@s 000E                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8               ?_sendCharSerial4 0001  
                       putch@c 0001               __end_of_vfprintf 1838              ??_initDCmotorsPWM 0007  
                    ??_sprintf 0057          __end_of_isDataInTxBuf 1BEC                     __accesstop 0060  
      __end_of__initialization 1A92       __end_of_color_read_Clear 1928       __end_of_color_read_Green 18D8  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001               ?_color_read_Blue 0009  
              _Interrupts_init 1BF8                 __pcstackCOMRAM 0001                  __end_of_fputc 168C  
                __end_of_fputs 19BC                  __end_of_putch 1C24                        ??_fputc 0009  
                      ??_fputs 0012                        ??_putch 0005                     __pbssBANK0 00C1  
                   __pbssBANK1 0100              _color_writetoaddr 1B9C                   _T2CLKCONbits 000FBF  
           ?_color_writetoaddr 0007            ??_color_writetoaddr 0008                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5                        i2u45_40 1BE8                        i2u45_41 1BE2  
                      i2u46_40 1BEA                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
      __end_of_Interrupts_init 1C04         color_writetoaddr@value 0007               ??_color_read_Red 000B  
                      _HighISR 0008      __end_of_color_writetoaddr 1BBC             _I2C_2_Master_Start 1C18  
                   _initUSART4 1B7C             _I2C_2_Master_Write 1BEC                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000E        sendStringSerial4@string 0006  
                      ___aodiv 10A0                        ___aomod 1228            ?_I2C_2_Master_Start 0001  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 0060                   __psmallconst 0E00  
                      __pcinit 1A72                        __ramtop 0E00                        __ptext0 14DA  
                      __ptext1 1796                        __ptext2 17E8                        __ptext3 138C  
                      __ptext4 0E24                        __ptext5 171C                        __ptext6 1978  
                      __ptext7 15C2                        __ptext8 1C22                        __ptext9 19FE  
                    _T2CONbits 000FBD                      _T2HLTbits 000FBE                  _RxBufWriteCnt 005A  
     __end_of_getCharFromTxBuf 1B00                        main@buf 007F                        _sprintf 1796  
         ??_I2C_2_Master_Start 0006           ??_I2C_2_Master_Write 0006           end_of_initialization 1A92  
                      fputc@fp 0007                        fputs@fp 0010              ?_color_click_init 0001  
           ??_color_click_init 0009              __end_of_vfpfcnvrt 14DA                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
             vfpfcnvrt@convarg 004B                     ??_vfprintf 0055                _initDCmotorsPWM 168C  
                    _TRISAbits 000F81                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISFbits 000F86                      _TRISGbits 000F87  
     color_writetoaddr@address 0008        ??_I2C_2_Master_RepStart 0006               ?_Interrupts_init 0001  
                  _CCP1CONbits 000FAB              ?_color_read_Clear 0009                   _EUSART4RXbuf 00C1  
                 _EUSART4TXbuf 0100                    _CCP2CONbits 000FA7              ?_color_read_Green 0009  
                  _CCP3CONbits 000F26                    ?_initUSART4 0001                    _CCP4CONbits 000F22  
    sendCharSerial4@charToSend 0005                     main@motorL 00AF                     main@motorR 00B8  
           ??_color_read_Clear 000B             ??_color_read_Green 000B                    vfpfcnvrt@ap 0047  
                  vfpfcnvrt@cp 0053                    vfpfcnvrt@fp 0043            color_read_Clear@tmp 000E  
          start_initialization 1A72                    __end_of_abs 1A3E                    __end_of_pad 1796  
                _TxBufWriteCnt 0058            color_read_Green@tmp 000E        __end_of_initDCmotorsPWM 171C  
                  vfprintf@fmt 0062                 _putCharToRxBuf 1B2A                    __pbssCOMRAM 0057  
                __pcstackBANK0 0060               ___aodiv@dividend 0005                       ?_HighISR 0001  
                    _dtoa$2080 0032         __end_of_putCharToRxBuf 1B54                      __pintcode 0008  
                     ?___aodiv 0005                       ?___aomod 0005               ___aodiv@quotient 0017  
         I2C_2_Master_Read@ack 0007           I2C_2_Master_Read@tmp 0008                    __smallconst 0E00  
            _I2C_2_Master_Idle 1B54              _I2C_2_Master_Init 1B00              _I2C_2_Master_Read 19BC  
            _I2C_2_Master_Stop 1C0E                   _RxBufReadCnt 0059             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
     initDCmotorsPWM@PWMperiod 0005                       ?_sprintf 0066              ?_getCharFromTxBuf 0001  
           ??_getCharFromTxBuf 0001              _sendStringSerial4 1AA4            ??_I2C_2_Master_Idle 0005  
          ??_I2C_2_Master_Init 0005            ??_I2C_2_Master_Read 0006                       _LATAbits 000F79  
          ??_I2C_2_Master_Stop 0006                       _LATCbits 000F7B                  _isDataInTxBuf 1BD4  
                     _LATEbits 000F7D                       _LATFbits 000F7E                       _LATGbits 000F7F  
           ?_sendStringSerial4 0006                       _PIE4bits 000E2D                       i2u110_40 0046  
                     i2u110_41 0042                       i2u111_40 005A                       i2u111_41 0056  
                     i2u105_40 1B3C                       i2u105_41 1B38                       i2u106_40 1AE4  
                     i2u106_41 1AE0                       i2u108_40 0022                       i2u108_41 001E  
                     i2u109_40 0038                       i2u109_41 0034                       _PIR4bits 000E37  
              ?_putCharToRxBuf 0001               ?_initDCmotorsPWM 0005              ??_sendCharSerial4 0005  
                     _SSP2CON2 000EDA            ??_sendStringSerial4 0008                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 138C      __end_of_I2C_2_Master_Idle 1B7C      __end_of_I2C_2_Master_Init 1B2A  
    __end_of_I2C_2_Master_Read 19FE      __end_of_I2C_2_Master_Stop 1C18    I2C_2_Master_Write@data_byte 0006  
            ??_color_read_Blue 000B                   _TxBufReadCnt 0057      __end_of_sendStringSerial4 1AD4  
               ?_isDataInTxBuf 0001  __end_of_I2C_2_Master_RepStart 1C0E             color_read_Blue@tmp 000E  
                 ??_initUSART4 0005                       __Hrparam 0000                     vfprintf@ap 0064  
                     __Lrparam 0000                     vfprintf@fp 0060                   __Lsmallconst 0E00  
                   ?_vfpfcnvrt 0043                ___aodiv@divisor 000D                ___aodiv@counter 0015  
                   _ANSELDbits 000EA7                     sprintf@fmt 0068             __end_of_initUSART4 1B9C  
                     __ptext10 1228                       __ptext11 10A0                       __ptext20 1C04  
                     __ptext12 1AA4                       __ptext21 19BC                       __ptext13 1BBC  
                     __ptext22 1A3E                       __ptext14 1B7C                       __ptext31 1B2A  
                     __ptext23 1B9C                       __ptext15 168C                       __ptext32 1BD4  
                     __ptext24 1BEC                       __ptext16 1838                       __ptext33 1AD4  
                     __ptext25 1C0E                       __ptext17 1888                       __ptext26 1C18  
                     __ptext18 18D8                       __ptext27 1B54                       __ptext19 1928  
                     __ptext28 1B00                       __ptext29 1BF8                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                       isa$xinst 000000                     _RC4STAbits 000EE7  
                     int$flags 005B                       _vfprintf 17E8               ___aomod@dividend 0005  
                   _INTCONbits 000FF2                ??_isDataInTxBuf 0001                       intlevel2 0000  
                    sprintf@ap 0072                ___aomod@divisor 000D                    ??_vfpfcnvrt 0049  
              ___aomod@counter 0015               _color_click_init 1A3E                       sprintf@f 0074  
                     sprintf@s 0066                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
                   _TX4STAbits 000EE8                   ___aodiv@sign 0016                _sendCharSerial4 1BBC  
             ??_putCharToRxBuf 0001                   ___aomod@sign 0016  
