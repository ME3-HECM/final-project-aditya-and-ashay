

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Mar 11 20:45:31 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    29                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    31   000000                     
    32                           ; Generated 06/04/2022 GMT
    33                           ; 
    34                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F67K40 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66   000000                     
    67                           	psect	idataCOMRAM
    68   0002D4                     __pidataCOMRAM:
    69                           	callstack 0
    70                           
    71                           ;initializer for _color_upperbound
    72   0002D4  09C4               	dw	2500
    73   000000                     _TRISBbits	set	3970
    74   000000                     _TRISAbits	set	3969
    75   000000                     _TRISFbits	set	3974
    76   000000                     _LATFbits	set	3966
    77   000000                     _LATDbits	set	3964
    78   000000                     _LATHbits	set	3968
    79   000000                     _LATGbits	set	3967
    80   000000                     _TRISGbits	set	3975
    81   000000                     _TRISEbits	set	3973
    82   000000                     _TX4REG	set	3812
    83   000000                     _RC4STAbits	set	3815
    84   000000                     _SP4BRGH	set	3814
    85   000000                     _SSP2CON2bits	set	3802
    86   000000                     _RX4PPS	set	3605
    87   000000                     _SSP2CLKPPS	set	3612
    88   000000                     _SSP2DATPPS	set	3613
    89   000000                     _ANSELDbits	set	3751
    90   000000                     _SSP2ADD	set	3798
    91   000000                     _SSP2CON1bits	set	3801
    92   000000                     _RC4REG	set	3811
    93   000000                     _SP4BRGL	set	3813
    94   000000                     _TX4STAbits	set	3816
    95   000000                     _BAUD4CONbits	set	3817
    96   000000                     _TRISCbits	set	3971
    97   000000                     _SSP2CON2	set	3802
    98   000000                     _TRISDbits	set	3972
    99   000000                     _SSP2STAT	set	3800
   100   000000                     _ANSELFbits	set	3764
   101   000000                     _SSP2BUF	set	3797
   102   000000                     _IPR0bits	set	3615
   103   000000                     _PIE0bits	set	3625
   104   000000                     _PIE4bits	set	3629
   105   000000                     _PIR4bits	set	3639
   106   000000                     _RC0PPS	set	3682
   107   000000                     _RD5PPS	set	3695
   108   000000                     _RE2PPS	set	3700
   109   000000                     _RD6PPS	set	3696
   110   000000                     _RC7PPS	set	3689
   111   000000                     _LATCbits	set	3963
   112   000000                     _LATEbits	set	3965
   113   000000                     _CCPR4H	set	3873
   114   000000                     _CCPR3H	set	3877
   115   000000                     _PIR0bits	set	3635
   116   000000                     _TRISHbits	set	3976
   117   000000                     _T2PR	set	4028
   118   000000                     _T2CONbits	set	4029
   119   000000                     _CCPR2H	set	4006
   120   000000                     _CCPR1H	set	4010
   121   000000                     _RE4PPS	set	3702
   122   000000                     _RG6PPS	set	3720
   123   000000                     _ANSELBbits	set	3738
   124   000000                     _INTCONbits	set	4082
   125   000000                     _T2CLKCONbits	set	4031
   126   000000                     _T2HLTbits	set	4030
   127   000000                     _CCP1CONbits	set	4011
   128   000000                     _CCPTMRS0bits	set	4013
   129   000000                     _CCP2CONbits	set	4007
   130   000000                     _LATAbits	set	3961
   131   000000                     _CCP3CONbits	set	3878
   132   000000                     _CCP4CONbits	set	3874
   133                           
   134                           ; #config settings
   135                           
   136                           	psect	cinit
   137   000186                     __pcinit:
   138                           	callstack 0
   139   000186                     start_initialization:
   140                           	callstack 0
   141   000186                     __initialization:
   142                           	callstack 0
   143                           
   144                           ; Initialize objects allocated to COMRAM (2 bytes)
   145                           ; load TBLPTR registers with __pidataCOMRAM
   146   000186  0ED4               	movlw	low __pidataCOMRAM
   147   000188  6EF6               	movwf	tblptrl,c
   148   00018A  0E02               	movlw	high __pidataCOMRAM
   149   00018C  6EF7               	movwf	tblptrh,c
   150   00018E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   151   000190  6EF8               	movwf	tblptru,c
   152   000192  0009               	tblrd		*+	;fetch initializer
   153   000194  CFF5 F047          	movff	tablat,__pdataCOMRAM
   154   000198  0009               	tblrd		*+	;fetch initializer
   155   00019A  CFF5 F048          	movff	tablat,__pdataCOMRAM+1
   156                           
   157                           ; Clear objects allocated to BANK0 (60 bytes)
   158   00019E  EE00  F060         	lfsr	0,__pbssBANK0
   159   0001A2  0E3C               	movlw	60
   160   0001A4                     clear_0:
   161   0001A4  6AEE               	clrf	postinc0,c
   162   0001A6  06E8               	decf	wreg,f,c
   163   0001A8  E1FD               	bnz	clear_0
   164                           
   165                           ; Clear objects allocated to COMRAM (65 bytes)
   166   0001AA  EE00  F001         	lfsr	0,__pbssCOMRAM
   167   0001AE  0E41               	movlw	65
   168   0001B0                     clear_1:
   169   0001B0  6AEE               	clrf	postinc0,c
   170   0001B2  06E8               	decf	wreg,f,c
   171   0001B4  E1FD               	bnz	clear_1
   172   0001B6                     end_of_initialization:
   173                           	callstack 0
   174   0001B6                     __end_of__initialization:
   175                           	callstack 0
   176   0001B6  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   177   0001B8  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   178   0001BA  0100               	movlb	0
   179   0001BC  EF81  F000         	goto	_main	;jump to C main() function
   180                           
   181                           	psect	bssCOMRAM
   182   000001                     __pbssCOMRAM:
   183                           	callstack 0
   184   000001                     _EUSART4RXbuf:
   185                           	callstack 0
   186   000001                     	ds	20
   187   000015                     _color_lowerbound:
   188                           	callstack 0
   189   000015                     	ds	2
   190   000017                     _TxBufReadCnt:
   191                           	callstack 0
   192   000017                     	ds	1
   193   000018                     _TxBufWriteCnt:
   194                           	callstack 0
   195   000018                     	ds	1
   196   000019                     _RxBufReadCnt:
   197                           	callstack 0
   198   000019                     	ds	1
   199   00001A                     _RxBufWriteCnt:
   200                           	callstack 0
   201   00001A                     	ds	1
   202   00001B                     _read_color_flag:
   203                           	callstack 0
   204   00001B                     	ds	1
   205   00001C                     _color:
   206                           	callstack 0
   207   00001C                     	ds	20
   208   000030                     _motorR:
   209                           	callstack 0
   210   000030                     	ds	9
   211   000039                     _motorL:
   212                           	callstack 0
   213   000039                     	ds	9
   214                           
   215                           	psect	dataCOMRAM
   216   000047                     __pdataCOMRAM:
   217                           	callstack 0
   218   000047                     _color_upperbound:
   219                           	callstack 0
   220   000047                     	ds	2
   221                           
   222                           	psect	bssBANK0
   223   000060                     __pbssBANK0:
   224                           	callstack 0
   225   000060                     _EUSART4TXbuf:
   226                           	callstack 0
   227   000060                     	ds	60
   228                           
   229                           	psect	cstackCOMRAM
   230   000042                     __pcstackCOMRAM:
   231                           	callstack 0
   232   000042                     ??_I2C_2_Master_Idle:
   233   000042                     initDCmotorsPWM@PWMperiod:
   234                           	callstack 0
   235   000042                     motor_init@mL:
   236                           	callstack 0
   237                           
   238                           ; 2 bytes @ 0x0
   239   000042                     	ds	1
   240   000043                     I2C_2_Master_Write@data_byte:
   241                           	callstack 0
   242                           
   243                           ; 1 bytes @ 0x1
   244   000043                     	ds	1
   245   000044                     color_writetoaddr@value:
   246                           	callstack 0
   247   000044                     motor_init@mR:
   248                           	callstack 0
   249                           
   250                           ; 2 bytes @ 0x2
   251   000044                     	ds	1
   252   000045                     color_writetoaddr@address:
   253                           	callstack 0
   254                           
   255                           ; 1 bytes @ 0x3
   256   000045                     	ds	1
   257   000046                     ??_color_click_init:
   258   000046                     
   259                           ; 1 bytes @ 0x4
   260   000046                     	ds	1
   261   000047                     
   262                           ; 1 bytes @ 0x5
   263 ;;
   264 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   265 ;;
   266 ;; *************** function _main *****************
   267 ;; Defined at:
   268 ;;		line 17 in file "main.c"
   269 ;; Parameters:    Size  Location     Type
   270 ;;		None
   271 ;; Auto vars:     Size  Location     Type
   272 ;;		None
   273 ;; Return value:  Size  Location     Type
   274 ;;                  1    wreg      void 
   275 ;; Registers used:
   276 ;;		wreg, status,2, status,0, cstack
   277 ;; Tracked objects:
   278 ;;		On entry : 0/0
   279 ;;		On exit  : 0/0
   280 ;;		Unchanged: 0/0
   281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   286 ;;Total ram usage:        0 bytes
   287 ;; Hardware stack levels required when called: 6
   288 ;; This function calls:
   289 ;;		_buggyLEDs_init
   290 ;;		_color_click_init
   291 ;;		_initDCmotorsPWM
   292 ;;		_initUSART4
   293 ;;		_interrupts_init
   294 ;;		_motor_init
   295 ;; This function is called by:
   296 ;;		Startup code after reset
   297 ;; This function uses a non-reentrant model
   298 ;;
   299                           
   300                           	psect	text0
   301   000102                     __ptext0:
   302                           	callstack 0
   303   000102                     _main:
   304                           	callstack 25
   305   000102                     
   306                           ;main.c: 19:     initDCmotorsPWM(99);
   307   000102  0E00               	movlw	0
   308   000104  6E43               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   309   000106  0E63               	movlw	99
   310   000108  6E42               	movwf	initDCmotorsPWM@PWMperiod^0,c
   311   00010A  EC14  F000         	call	_initDCmotorsPWM	;wreg free
   312   00010E                     
   313                           ;main.c: 20:     motor_init(&motorL,&motorR);
   314   00010E  0E39               	movlw	low _motorL
   315   000110  6E42               	movwf	motor_init@mL^0,c
   316   000112  0E00               	movlw	high _motorL
   317   000114  6E43               	movwf	(motor_init@mL+1)^0,c
   318   000116  0E30               	movlw	low _motorR
   319   000118  6E44               	movwf	motor_init@mR^0,c
   320   00011A  0E00               	movlw	high _motorR
   321   00011C  6E45               	movwf	(motor_init@mR+1)^0,c
   322   00011E  EC5C  F000         	call	_motor_init	;wreg free
   323   000122                     
   324                           ;main.c: 21:     buggyLEDs_init();
   325   000122  EC4F  F001         	call	_buggyLEDs_init	;wreg free
   326   000126                     
   327                           ;main.c: 22:     initUSART4();
   328   000126  EC23  F001         	call	_initUSART4	;wreg free
   329   00012A                     
   330                           ;main.c: 23:     color_click_init();
   331   00012A  ECE0  F000         	call	_color_click_init	;wreg free
   332   00012E                     
   333                           ;main.c: 24:     interrupts_init();
   334   00012E  EC43  F001         	call	_interrupts_init	;wreg free
   335   000132                     
   336                           ;main.c: 26:     TRISGbits.TRISG1 = 0;
   337   000132  9287               	bcf	135,1,c	;volatile
   338   000134                     
   339                           ;main.c: 27:     TRISAbits.TRISA4 = 0;
   340   000134  9881               	bcf	129,4,c	;volatile
   341   000136                     
   342                           ;main.c: 28:     TRISFbits.TRISF7 = 0;
   343   000136  9E86               	bcf	134,7,c	;volatile
   344   000138                     
   345                           ;main.c: 30:     LATGbits.LATG1 = 1;
   346   000138  827F               	bsf	127,1,c	;volatile
   347   00013A                     
   348                           ;main.c: 31:     LATAbits.LATA4 = 1;
   349   00013A  8879               	bsf	121,4,c	;volatile
   350   00013C                     
   351                           ;main.c: 32:     LATFbits.LATF7 = 1;
   352   00013C  8E7E               	bsf	126,7,c	;volatile
   353   00013E                     
   354                           ;main.c: 34:     TRISFbits.TRISF2 = 1;
   355   00013E  8486               	bsf	134,2,c	;volatile
   356   000140                     
   357                           ;main.c: 35:     ANSELFbits.ANSELF2=0;
   358   000140  010E               	movlb	14	; () banked
   359   000142  95B4               	bcf	180,2,b	;volatile
   360   000144                     
   361                           ; BSR set to: 14
   362   000144  EF12  F000         	goto	start
   363   000148                     __end_of_main:
   364                           	callstack 0
   365                           
   366 ;; *************** function _motor_init *****************
   367 ;; Defined at:
   368 ;;		line 94 in file "dc_motor.c"
   369 ;; Parameters:    Size  Location     Type
   370 ;;  mL              2    0[COMRAM] PTR struct DC_motor
   371 ;;		 -> motorL(9), 
   372 ;;  mR              2    2[COMRAM] PTR struct DC_motor
   373 ;;		 -> motorR(9), 
   374 ;; Auto vars:     Size  Location     Type
   375 ;;		None
   376 ;; Return value:  Size  Location     Type
   377 ;;                  1    wreg      void 
   378 ;; Registers used:
   379 ;;		wreg, status,2, status,0
   380 ;; Tracked objects:
   381 ;;		On entry : 0/0
   382 ;;		On exit  : 0/0
   383 ;;		Unchanged: 0/0
   384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   385 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   388 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   389 ;;Total ram usage:        4 bytes
   390 ;; Hardware stack levels used: 1
   391 ;; Hardware stack levels required when called: 1
   392 ;; This function calls:
   393 ;;		Nothing
   394 ;; This function is called by:
   395 ;;		_main
   396 ;; This function uses a non-reentrant model
   397 ;;
   398                           
   399                           	psect	text1
   400   0000B8                     __ptext1:
   401                           	callstack 0
   402   0000B8                     _motor_init:
   403                           	callstack 29
   404   0000B8                     
   405                           ;dc_motor.c: 94: void motor_init(DC_motor *mL, DC_motor *mR);dc_motor.c: 95: {;dc_motor.
      +                          c: 96:     motorL.power=0;
   406   0000B8  0E00               	movlw	0
   407   0000BA  6E39               	movwf	_motorL^0,c
   408                           
   409                           ;dc_motor.c: 97:     motorL.direction=1;
   410   0000BC  0E01               	movlw	1
   411   0000BE  6E3A               	movwf	(_motorL+1)^0,c
   412                           
   413                           ;dc_motor.c: 98:     motorL.brakemode=1;
   414   0000C0  0E01               	movlw	1
   415   0000C2  6E3B               	movwf	(_motorL+2)^0,c
   416   0000C4                     
   417                           ;dc_motor.c: 99:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   418   0000C4  0EAA               	movlw	170
   419   0000C6  6E3E               	movwf	(_motorL+5)^0,c
   420   0000C8  0E0F               	movlw	15
   421   0000CA  6E3F               	movwf	(_motorL+6)^0,c
   422   0000CC                     
   423                           ;dc_motor.c: 100:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   424   0000CC  0EA6               	movlw	166
   425   0000CE  6E40               	movwf	(_motorL+7)^0,c
   426   0000D0  0E0F               	movlw	15
   427   0000D2  6E41               	movwf	(_motorL+8)^0,c
   428                           
   429                           ;dc_motor.c: 101:     motorL.PWMperiod=99;
   430   0000D4  0E00               	movlw	0
   431   0000D6  6E3D               	movwf	(_motorL+4)^0,c
   432   0000D8  0E63               	movlw	99
   433   0000DA  6E3C               	movwf	(_motorL+3)^0,c
   434                           
   435                           ;dc_motor.c: 103:     motorR.power=0;
   436   0000DC  0E00               	movlw	0
   437   0000DE  6E30               	movwf	_motorR^0,c
   438                           
   439                           ;dc_motor.c: 104:     motorR.direction=1;
   440   0000E0  0E01               	movlw	1
   441   0000E2  6E31               	movwf	(_motorR+1)^0,c
   442                           
   443                           ;dc_motor.c: 105:     motorR.brakemode=1;
   444   0000E4  0E01               	movlw	1
   445   0000E6  6E32               	movwf	(_motorR+2)^0,c
   446   0000E8                     
   447                           ;dc_motor.c: 106:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   448   0000E8  0E25               	movlw	37
   449   0000EA  6E35               	movwf	(_motorR+5)^0,c
   450   0000EC  0E0F               	movlw	15
   451   0000EE  6E36               	movwf	(_motorR+6)^0,c
   452   0000F0                     
   453                           ;dc_motor.c: 107:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   454   0000F0  0E21               	movlw	33
   455   0000F2  6E37               	movwf	(_motorR+7)^0,c
   456   0000F4  0E0F               	movlw	15
   457   0000F6  6E38               	movwf	(_motorR+8)^0,c
   458                           
   459                           ;dc_motor.c: 108:     motorR.PWMperiod=99;
   460   0000F8  0E00               	movlw	0
   461   0000FA  6E34               	movwf	(_motorR+4)^0,c
   462   0000FC  0E63               	movlw	99
   463   0000FE  6E33               	movwf	(_motorR+3)^0,c
   464   000100  0012               	return		;funcret
   465   000102                     __end_of_motor_init:
   466                           	callstack 0
   467                           
   468 ;; *************** function _interrupts_init *****************
   469 ;; Defined at:
   470 ;;		line 10 in file "interrupts.c"
   471 ;; Parameters:    Size  Location     Type
   472 ;;		None
   473 ;; Auto vars:     Size  Location     Type
   474 ;;		None
   475 ;; Return value:  Size  Location     Type
   476 ;;                  1    wreg      void 
   477 ;; Registers used:
   478 ;;		wreg, status,2, status,0, cstack
   479 ;; Tracked objects:
   480 ;;		On entry : 0/0
   481 ;;		On exit  : 0/0
   482 ;;		Unchanged: 0/0
   483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   488 ;;Total ram usage:        0 bytes
   489 ;; Hardware stack levels used: 1
   490 ;; Hardware stack levels required when called: 5
   491 ;; This function calls:
   492 ;;		_colorclick_interrupts_init
   493 ;; This function is called by:
   494 ;;		_main
   495 ;; This function uses a non-reentrant model
   496 ;;
   497                           
   498                           	psect	text2
   499   000286                     __ptext2:
   500                           	callstack 0
   501   000286                     _interrupts_init:
   502                           	callstack 25
   503   000286                     
   504                           ;interrupts.c: 12:     TRISBbits.TRISB1 = 1;
   505   000286  8282               	bsf	130,1,c	;volatile
   506                           
   507                           ;interrupts.c: 13:     ANSELBbits.ANSELB1 = 0;
   508   000288  010E               	movlb	14	; () banked
   509   00028A  939A               	bcf	154,1,b	;volatile
   510                           
   511                           ;interrupts.c: 15:     PIE0bits.INT1IE = 1;
   512   00028C  8329               	bsf	41,1,b	;volatile
   513                           
   514                           ;interrupts.c: 17:     IPR0bits.INT1IP = 1;
   515   00028E  831F               	bsf	31,1,b	;volatile
   516                           
   517                           ;interrupts.c: 19:     INTCONbits.INT1EDG = 0;
   518   000290  92F2               	bcf	242,1,c	;volatile
   519                           
   520                           ;interrupts.c: 20:     INTCONbits.IPEN = 1;
   521   000292  8AF2               	bsf	242,5,c	;volatile
   522                           
   523                           ;interrupts.c: 22:     INTCONbits.PEIE=1;
   524   000294  8CF2               	bsf	242,6,c	;volatile
   525                           
   526                           ;interrupts.c: 23:     INTCONbits.GIE=1;
   527   000296  8EF2               	bsf	242,7,c	;volatile
   528   000298                     
   529                           ; BSR set to: 14
   530                           ;interrupts.c: 25:     colorclick_interrupts_init();
   531   000298  ECA4  F000         	call	_colorclick_interrupts_init	;wreg free
   532   00029C  0012               	return		;funcret
   533   00029E                     __end_of_interrupts_init:
   534                           	callstack 0
   535                           
   536 ;; *************** function _colorclick_interrupts_init *****************
   537 ;; Defined at:
   538 ;;		line 28 in file "interrupts.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;		None
   541 ;; Auto vars:     Size  Location     Type
   542 ;;		None
   543 ;; Return value:  Size  Location     Type
   544 ;;                  1    wreg      void 
   545 ;; Registers used:
   546 ;;		wreg, status,2, status,0, cstack
   547 ;; Tracked objects:
   548 ;;		On entry : 0/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   556 ;;Total ram usage:        0 bytes
   557 ;; Hardware stack levels used: 1
   558 ;; Hardware stack levels required when called: 4
   559 ;; This function calls:
   560 ;;		_color_writetoaddr
   561 ;; This function is called by:
   562 ;;		_interrupts_init
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           	psect	text3
   567   000148                     __ptext3:
   568                           	callstack 0
   569   000148                     _colorclick_interrupts_init:
   570                           	callstack 25
   571   000148                     
   572                           ;interrupts.c: 29:     color_writetoaddr(0x00,0x13);
   573   000148  0E13               	movlw	19
   574   00014A  6E44               	movwf	color_writetoaddr@value^0,c
   575   00014C  0E00               	movlw	0
   576   00014E  EC33  F001         	call	_color_writetoaddr
   577                           
   578                           ;interrupts.c: 30:     color_writetoaddr(0x04, (color_lowerbound & 0x00FF));
   579   000152  0E00               	movlw	0
   580   000154  6E44               	movwf	color_writetoaddr@value^0,c
   581   000156  0E04               	movlw	4
   582   000158  EC33  F001         	call	_color_writetoaddr
   583                           
   584                           ;interrupts.c: 31:     color_writetoaddr(0x05, (color_lowerbound >> 8));
   585   00015C  0E00               	movlw	0
   586   00015E  6E44               	movwf	color_writetoaddr@value^0,c
   587   000160  0E05               	movlw	5
   588   000162  EC33  F001         	call	_color_writetoaddr
   589   000166  0EC4               	movlw	196
   590   000168  6E44               	movwf	color_writetoaddr@value^0,c
   591   00016A  0E06               	movlw	6
   592   00016C  EC33  F001         	call	_color_writetoaddr
   593   000170  0E09               	movlw	9
   594   000172  6E44               	movwf	color_writetoaddr@value^0,c
   595   000174  0E07               	movlw	7
   596   000176  EC33  F001         	call	_color_writetoaddr
   597                           
   598                           ;interrupts.c: 34:     color_writetoaddr(0x0C, 0b0011);
   599   00017A  0E03               	movlw	3
   600   00017C  6E44               	movwf	color_writetoaddr@value^0,c
   601   00017E  0E0C               	movlw	12
   602   000180  EC33  F001         	call	_color_writetoaddr
   603   000184  0012               	return		;funcret
   604   000186                     __end_of_colorclick_interrupts_init:
   605                           	callstack 0
   606                           
   607 ;; *************** function _initUSART4 *****************
   608 ;; Defined at:
   609 ;;		line 5 in file "serial.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;		None
   612 ;; Auto vars:     Size  Location     Type
   613 ;;		None
   614 ;; Return value:  Size  Location     Type
   615 ;;                  1    wreg      void 
   616 ;; Registers used:
   617 ;;		wreg, status,2
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   627 ;;Total ram usage:        0 bytes
   628 ;; Hardware stack levels used: 1
   629 ;; Hardware stack levels required when called: 1
   630 ;; This function calls:
   631 ;;		Nothing
   632 ;; This function is called by:
   633 ;;		_main
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           	psect	text4
   638   000246                     __ptext4:
   639                           	callstack 0
   640   000246                     _initUSART4:
   641                           	callstack 29
   642   000246                     
   643                           ;serial.c: 7:     RC0PPS = 0x12;
   644   000246  0E12               	movlw	18
   645   000248  010E               	movlb	14	; () banked
   646   00024A  6F62               	movwf	98,b	;volatile
   647                           
   648                           ;serial.c: 8:     RX4PPS = 0x11;
   649   00024C  0E11               	movlw	17
   650   00024E  6F15               	movwf	21,b	;volatile
   651   000250                     
   652                           ; BSR set to: 14
   653                           ;serial.c: 9:     TRISCbits.TRISC1 = 1;
   654   000250  8283               	bsf	131,1,c	;volatile
   655   000252                     
   656                           ; BSR set to: 14
   657                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
   658   000252  97E9               	bcf	233,3,b	;volatile
   659   000254                     
   660                           ; BSR set to: 14
   661                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
   662   000254  95E8               	bcf	232,2,b	;volatile
   663                           
   664                           ;serial.c: 14:     SP4BRGL = 51;
   665   000256  0E33               	movlw	51
   666   000258  6FE5               	movwf	229,b	;volatile
   667                           
   668                           ;serial.c: 15:     SP4BRGH = 0;
   669   00025A  0E00               	movlw	0
   670   00025C  6FE6               	movwf	230,b	;volatile
   671   00025E                     
   672                           ; BSR set to: 14
   673                           ;serial.c: 17:     RC4STAbits.CREN = 1;
   674   00025E  89E7               	bsf	231,4,b	;volatile
   675   000260                     
   676                           ; BSR set to: 14
   677                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
   678   000260  8BE8               	bsf	232,5,b	;volatile
   679   000262                     
   680                           ; BSR set to: 14
   681                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
   682   000262  8FE7               	bsf	231,7,b	;volatile
   683   000264                     
   684                           ; BSR set to: 14
   685   000264  0012               	return		;funcret
   686   000266                     __end_of_initUSART4:
   687                           	callstack 0
   688                           
   689 ;; *************** function _initDCmotorsPWM *****************
   690 ;; Defined at:
   691 ;;		line 5 in file "dc_motor.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;  PWMperiod       2    0[COMRAM] unsigned int 
   694 ;; Auto vars:     Size  Location     Type
   695 ;;		None
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      void 
   698 ;; Registers used:
   699 ;;		wreg, status,2
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   705 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   708 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   709 ;;Total ram usage:        2 bytes
   710 ;; Hardware stack levels used: 1
   711 ;; Hardware stack levels required when called: 1
   712 ;; This function calls:
   713 ;;		Nothing
   714 ;; This function is called by:
   715 ;;		_main
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           	psect	text5
   720   000028                     __ptext5:
   721                           	callstack 0
   722   000028                     _initDCmotorsPWM:
   723                           	callstack 29
   724   000028                     
   725                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
   726   000028  9485               	bcf	133,2,c	;volatile
   727                           
   728                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
   729   00002A  9885               	bcf	133,4,c	;volatile
   730                           
   731                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
   732   00002C  9E83               	bcf	131,7,c	;volatile
   733                           
   734                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
   735   00002E  9C87               	bcf	135,6,c	;volatile
   736                           
   737                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
   738   000030  947D               	bcf	125,2,c	;volatile
   739                           
   740                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
   741   000032  987D               	bcf	125,4,c	;volatile
   742                           
   743                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
   744   000034  9E7B               	bcf	123,7,c	;volatile
   745                           
   746                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
   747   000036  9C7F               	bcf	127,6,c	;volatile
   748   000038                     
   749                           ;dc_motor.c: 18:     RE2PPS=0x05;
   750   000038  0E05               	movlw	5
   751   00003A  010E               	movlb	14	; () banked
   752   00003C  6F74               	movwf	116,b	;volatile
   753                           
   754                           ;dc_motor.c: 19:     RE4PPS=0x06;
   755   00003E  0E06               	movlw	6
   756   000040  6F76               	movwf	118,b	;volatile
   757                           
   758                           ;dc_motor.c: 20:     RC7PPS=0x07;
   759   000042  0E07               	movlw	7
   760   000044  6F69               	movwf	105,b	;volatile
   761                           
   762                           ;dc_motor.c: 21:     RG6PPS=0x08;
   763   000046  0E08               	movlw	8
   764   000048  6F88               	movwf	136,b	;volatile
   765                           
   766                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
   767   00004A  50BD               	movf	189,w,c	;volatile
   768   00004C  0B8F               	andlw	-113
   769   00004E  0940               	iorlw	64
   770   000050  6EBD               	movwf	189,c	;volatile
   771                           
   772                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
   773   000052  0EE0               	movlw	-32
   774   000054  16BE               	andwf	190,f,c	;volatile
   775                           
   776                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
   777   000056  50BF               	movf	191,w,c	;volatile
   778   000058  0BF0               	andlw	-16
   779   00005A  0901               	iorlw	1
   780   00005C  6EBF               	movwf	191,c	;volatile
   781   00005E                     
   782                           ; BSR set to: 14
   783                           ;dc_motor.c: 30:     T2PR=PWMperiod;
   784   00005E  C042  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
   785   000062                     
   786                           ; BSR set to: 14
   787                           ;dc_motor.c: 31:     T2CONbits.ON=1;
   788   000062  8EBD               	bsf	189,7,c	;volatile
   789                           
   790                           ;dc_motor.c: 35:     CCPR1H=0;
   791   000064  0E00               	movlw	0
   792   000066  6EAA               	movwf	170,c	;volatile
   793                           
   794                           ;dc_motor.c: 36:     CCPR2H=0;
   795   000068  0E00               	movlw	0
   796   00006A  6EA6               	movwf	166,c	;volatile
   797                           
   798                           ;dc_motor.c: 37:     CCPR3H=0;
   799   00006C  0E00               	movlw	0
   800   00006E  010F               	movlb	15	; () banked
   801   000070  6F25               	movwf	37,b	;volatile
   802                           
   803                           ;dc_motor.c: 38:     CCPR4H=0;
   804   000072  0E00               	movlw	0
   805   000074  6F21               	movwf	33,b	;volatile
   806                           
   807                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
   808   000076  0EFC               	movlw	-4
   809   000078  16AD               	andwf	173,f,c	;volatile
   810                           
   811                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
   812   00007A  0EF3               	movlw	-13
   813   00007C  16AD               	andwf	173,f,c	;volatile
   814                           
   815                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
   816   00007E  0ECF               	movlw	-49
   817   000080  16AD               	andwf	173,f,c	;volatile
   818                           
   819                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
   820   000082  0E3F               	movlw	-193
   821   000084  16AD               	andwf	173,f,c	;volatile
   822   000086                     
   823                           ; BSR set to: 15
   824                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
   825   000086  88AB               	bsf	171,4,c	;volatile
   826                           
   827                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
   828   000088  50AB               	movf	171,w,c	;volatile
   829   00008A  0BF0               	andlw	-16
   830   00008C  090C               	iorlw	12
   831   00008E  6EAB               	movwf	171,c	;volatile
   832   000090                     
   833                           ; BSR set to: 15
   834                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
   835   000090  8EAB               	bsf	171,7,c	;volatile
   836   000092                     
   837                           ; BSR set to: 15
   838                           ;dc_motor.c: 52:     CCP2CONbits.FMT=1;
   839   000092  88A7               	bsf	167,4,c	;volatile
   840                           
   841                           ;dc_motor.c: 53:     CCP2CONbits.CCP2MODE=0b1100;
   842   000094  50A7               	movf	167,w,c	;volatile
   843   000096  0BF0               	andlw	-16
   844   000098  090C               	iorlw	12
   845   00009A  6EA7               	movwf	167,c	;volatile
   846   00009C                     
   847                           ; BSR set to: 15
   848                           ;dc_motor.c: 54:     CCP2CONbits.EN=1;
   849   00009C  8EA7               	bsf	167,7,c	;volatile
   850   00009E                     
   851                           ; BSR set to: 15
   852                           ;dc_motor.c: 58:     CCP3CONbits.FMT=1;
   853   00009E  8926               	bsf	38,4,b	;volatile
   854                           
   855                           ;dc_motor.c: 59:     CCP3CONbits.CCP3MODE=0b1100;
   856   0000A0  5126               	movf	38,w,b	;volatile
   857   0000A2  0BF0               	andlw	-16
   858   0000A4  090C               	iorlw	12
   859   0000A6  6F26               	movwf	38,b	;volatile
   860   0000A8                     
   861                           ; BSR set to: 15
   862                           ;dc_motor.c: 60:     CCP3CONbits.EN=1;
   863   0000A8  8F26               	bsf	38,7,b	;volatile
   864   0000AA                     
   865                           ; BSR set to: 15
   866                           ;dc_motor.c: 63:     CCP4CONbits.FMT=1;
   867   0000AA  8922               	bsf	34,4,b	;volatile
   868                           
   869                           ;dc_motor.c: 64:     CCP4CONbits.CCP4MODE=0b1100;
   870   0000AC  5122               	movf	34,w,b	;volatile
   871   0000AE  0BF0               	andlw	-16
   872   0000B0  090C               	iorlw	12
   873   0000B2  6F22               	movwf	34,b	;volatile
   874   0000B4                     
   875                           ; BSR set to: 15
   876                           ;dc_motor.c: 65:     CCP4CONbits.EN=1;
   877   0000B4  8F22               	bsf	34,7,b	;volatile
   878   0000B6                     
   879                           ; BSR set to: 15
   880   0000B6  0012               	return		;funcret
   881   0000B8                     __end_of_initDCmotorsPWM:
   882                           	callstack 0
   883                           
   884 ;; *************** function _color_click_init *****************
   885 ;; Defined at:
   886 ;;		line 8 in file "color.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;		None
   889 ;; Auto vars:     Size  Location     Type
   890 ;;		None
   891 ;; Return value:  Size  Location     Type
   892 ;;                  1    wreg      void 
   893 ;; Registers used:
   894 ;;		wreg, status,2, status,0, cstack
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   902 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   903 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   904 ;;Total ram usage:        1 bytes
   905 ;; Hardware stack levels used: 1
   906 ;; Hardware stack levels required when called: 4
   907 ;; This function calls:
   908 ;;		_I2C_2_Master_Init
   909 ;;		_color_writetoaddr
   910 ;; This function is called by:
   911 ;;		_main
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           	psect	text6
   916   0001C0                     __ptext6:
   917                           	callstack 0
   918   0001C0                     _color_click_init:
   919                           	callstack 26
   920   0001C0                     
   921                           ;color.c: 11:     I2C_2_Master_Init();
   922   0001C0  ECFA  F000         	call	_I2C_2_Master_Init	;wreg free
   923   0001C4                     
   924                           ;color.c: 13:   color_writetoaddr(0x00, 0x01);
   925   0001C4  0E01               	movlw	1
   926   0001C6  6E44               	movwf	color_writetoaddr@value^0,c
   927   0001C8  0E00               	movlw	0
   928   0001CA  EC33  F001         	call	_color_writetoaddr
   929   0001CE                     
   930                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
   931   0001CE  0E3F               	movlw	63
   932   0001D0  6E46               	movwf	??_color_click_init^0,c
   933   0001D2  0E55               	movlw	85
   934   0001D4                     u617:
   935   0001D4  2EE8               	decfsz	wreg,f,c
   936   0001D6  D7FE               	bra	u617
   937   0001D8  2E46               	decfsz	??_color_click_init^0,f,c
   938   0001DA  D7FC               	bra	u617
   939   0001DC  F000               	nop	
   940   0001DE                     
   941                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
   942   0001DE  0E03               	movlw	3
   943   0001E0  6E44               	movwf	color_writetoaddr@value^0,c
   944   0001E2  0E00               	movlw	0
   945   0001E4  EC33  F001         	call	_color_writetoaddr
   946   0001E8                     
   947                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
   948   0001E8  0ED5               	movlw	213
   949   0001EA  6E44               	movwf	color_writetoaddr@value^0,c
   950   0001EC  0E01               	movlw	1
   951   0001EE  EC33  F001         	call	_color_writetoaddr
   952   0001F2  0012               	return		;funcret
   953   0001F4                     __end_of_color_click_init:
   954                           	callstack 0
   955                           
   956 ;; *************** function _color_writetoaddr *****************
   957 ;; Defined at:
   958 ;;		line 21 in file "color.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;  address         1    wreg     unsigned char 
   961 ;;  value           1    2[COMRAM] unsigned char 
   962 ;; Auto vars:     Size  Location     Type
   963 ;;  address         1    3[COMRAM] unsigned char 
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		wreg, status,2, status,0, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   973 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   974 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   976 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   977 ;;Total ram usage:        2 bytes
   978 ;; Hardware stack levels used: 1
   979 ;; Hardware stack levels required when called: 3
   980 ;; This function calls:
   981 ;;		_I2C_2_Master_Start
   982 ;;		_I2C_2_Master_Stop
   983 ;;		_I2C_2_Master_Write
   984 ;; This function is called by:
   985 ;;		_color_click_init
   986 ;;		_colorclick_interrupts_init
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text7
   991   000266                     __ptext7:
   992                           	callstack 0
   993   000266                     _color_writetoaddr:
   994                           	callstack 25
   995                           
   996                           ;incstack = 0
   997                           ;color_writetoaddr@address stored from wreg
   998   000266  6E45               	movwf	color_writetoaddr@address^0,c
   999   000268                     
  1000                           ;color.c: 22:     I2C_2_Master_Start();
  1001   000268  EC65  F001         	call	_I2C_2_Master_Start	;wreg free
  1002                           
  1003                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  1004   00026C  0E52               	movlw	82
  1005   00026E  EC5A  F001         	call	_I2C_2_Master_Write
  1006                           
  1007                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  1008   000272  5045               	movf	color_writetoaddr@address^0,w,c
  1009   000274  0980               	iorlw	128
  1010   000276  EC5A  F001         	call	_I2C_2_Master_Write
  1011                           
  1012                           ;color.c: 25:     I2C_2_Master_Write(value);
  1013   00027A  5044               	movf	color_writetoaddr@value^0,w,c
  1014   00027C  EC5A  F001         	call	_I2C_2_Master_Write
  1015                           
  1016                           ;color.c: 26:     I2C_2_Master_Stop();
  1017   000280  EC60  F001         	call	_I2C_2_Master_Stop	;wreg free
  1018   000284  0012               	return		;funcret
  1019   000286                     __end_of_color_writetoaddr:
  1020                           	callstack 0
  1021                           
  1022 ;; *************** function _I2C_2_Master_Write *****************
  1023 ;; Defined at:
  1024 ;;		line 45 in file "i2c.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;  data_byte       1    wreg     unsigned char 
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;  data_byte       1    1[COMRAM] unsigned char 
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  1    wreg      void 
  1031 ;; Registers used:
  1032 ;;		wreg, status,2, status,0, cstack
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1039 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1041 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1042 ;;Total ram usage:        1 bytes
  1043 ;; Hardware stack levels used: 1
  1044 ;; Hardware stack levels required when called: 2
  1045 ;; This function calls:
  1046 ;;		_I2C_2_Master_Idle
  1047 ;; This function is called by:
  1048 ;;		_color_writetoaddr
  1049 ;;		_color_read_Red
  1050 ;;		_color_read_Blue
  1051 ;;		_color_read_Green
  1052 ;;		_color_read_Clear
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           	psect	text8
  1057   0002B4                     __ptext8:
  1058                           	callstack 0
  1059   0002B4                     _I2C_2_Master_Write:
  1060                           	callstack 25
  1061                           
  1062                           ;incstack = 0
  1063                           ;I2C_2_Master_Write@data_byte stored from wreg
  1064   0002B4  6E43               	movwf	I2C_2_Master_Write@data_byte^0,c
  1065   0002B6                     
  1066                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  1067   0002B6  EC0F  F001         	call	_I2C_2_Master_Idle	;wreg free
  1068   0002BA                     
  1069                           ;i2c.c: 48:   SSP2BUF = data_byte;
  1070   0002BA  C043  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  1071   0002BE  0012               	return		;funcret
  1072   0002C0                     __end_of_I2C_2_Master_Write:
  1073                           	callstack 0
  1074                           
  1075 ;; *************** function _I2C_2_Master_Stop *****************
  1076 ;; Defined at:
  1077 ;;		line 39 in file "i2c.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;		None
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      void 
  1084 ;; Registers used:
  1085 ;;		wreg, status,2, status,0, cstack
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1095 ;;Total ram usage:        0 bytes
  1096 ;; Hardware stack levels used: 1
  1097 ;; Hardware stack levels required when called: 2
  1098 ;; This function calls:
  1099 ;;		_I2C_2_Master_Idle
  1100 ;; This function is called by:
  1101 ;;		_color_writetoaddr
  1102 ;;		_color_read_Red
  1103 ;;		_color_read_Blue
  1104 ;;		_color_read_Green
  1105 ;;		_color_read_Clear
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           	psect	text9
  1110   0002C0                     __ptext9:
  1111                           	callstack 0
  1112   0002C0                     _I2C_2_Master_Stop:
  1113                           	callstack 25
  1114   0002C0                     
  1115                           ;i2c.c: 41:   I2C_2_Master_Idle();
  1116   0002C0  EC0F  F001         	call	_I2C_2_Master_Idle	;wreg free
  1117   0002C4                     
  1118                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  1119   0002C4  010E               	movlb	14	; () banked
  1120   0002C6  85DA               	bsf	218,2,b	;volatile
  1121   0002C8                     
  1122                           ; BSR set to: 14
  1123   0002C8  0012               	return		;funcret
  1124   0002CA                     __end_of_I2C_2_Master_Stop:
  1125                           	callstack 0
  1126                           
  1127 ;; *************** function _I2C_2_Master_Start *****************
  1128 ;; Defined at:
  1129 ;;		line 27 in file "i2c.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;		None
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;		None
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  1    wreg      void 
  1136 ;; Registers used:
  1137 ;;		wreg, status,2, status,0, cstack
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1147 ;;Total ram usage:        0 bytes
  1148 ;; Hardware stack levels used: 1
  1149 ;; Hardware stack levels required when called: 2
  1150 ;; This function calls:
  1151 ;;		_I2C_2_Master_Idle
  1152 ;; This function is called by:
  1153 ;;		_color_writetoaddr
  1154 ;;		_color_read_Red
  1155 ;;		_color_read_Blue
  1156 ;;		_color_read_Green
  1157 ;;		_color_read_Clear
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           	psect	text10
  1162   0002CA                     __ptext10:
  1163                           	callstack 0
  1164   0002CA                     _I2C_2_Master_Start:
  1165                           	callstack 25
  1166   0002CA                     
  1167                           ;i2c.c: 29:   I2C_2_Master_Idle();
  1168   0002CA  EC0F  F001         	call	_I2C_2_Master_Idle	;wreg free
  1169   0002CE                     
  1170                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  1171   0002CE  010E               	movlb	14	; () banked
  1172   0002D0  81DA               	bsf	218,0,b	;volatile
  1173   0002D2                     
  1174                           ; BSR set to: 14
  1175   0002D2  0012               	return		;funcret
  1176   0002D4                     __end_of_I2C_2_Master_Start:
  1177                           	callstack 0
  1178                           
  1179 ;; *************** function _I2C_2_Master_Idle *****************
  1180 ;; Defined at:
  1181 ;;		line 22 in file "i2c.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;		None
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;		None
  1186 ;; Return value:  Size  Location     Type
  1187 ;;                  1    wreg      void 
  1188 ;; Registers used:
  1189 ;;		wreg, status,2, status,0
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1197 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1198 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1199 ;;Total ram usage:        1 bytes
  1200 ;; Hardware stack levels used: 1
  1201 ;; Hardware stack levels required when called: 1
  1202 ;; This function calls:
  1203 ;;		Nothing
  1204 ;; This function is called by:
  1205 ;;		_I2C_2_Master_Start
  1206 ;;		_I2C_2_Master_Stop
  1207 ;;		_I2C_2_Master_Write
  1208 ;;		_I2C_2_Master_RepStart
  1209 ;;		_I2C_2_Master_Read
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           	psect	text11
  1214   00021E                     __ptext11:
  1215                           	callstack 0
  1216   00021E                     _I2C_2_Master_Idle:
  1217                           	callstack 25
  1218   00021E                     l30:
  1219   00021E  010E               	movlb	14	; () banked
  1220   000220  B5D8               	btfsc	216,2,b	;volatile
  1221   000222  EF15  F001         	goto	u11
  1222   000226  EF17  F001         	goto	u10
  1223   00022A                     u11:
  1224   00022A  EF0F  F001         	goto	l30
  1225   00022E                     u10:
  1226   00022E                     
  1227                           ; BSR set to: 14
  1228   00022E  CEDA F042          	movff	3802,??_I2C_2_Master_Idle	;volatile
  1229   000232  0E1F               	movlw	31
  1230   000234  1642               	andwf	??_I2C_2_Master_Idle^0,f,c
  1231   000236  A4D8               	btfss	status,2,c
  1232   000238  EF20  F001         	goto	u21
  1233   00023C  EF22  F001         	goto	u20
  1234   000240                     u21:
  1235   000240  EF0F  F001         	goto	l30
  1236   000244                     u20:
  1237   000244                     
  1238                           ; BSR set to: 14
  1239   000244  0012               	return		;funcret
  1240   000246                     __end_of_I2C_2_Master_Idle:
  1241                           	callstack 0
  1242                           
  1243 ;; *************** function _I2C_2_Master_Init *****************
  1244 ;; Defined at:
  1245 ;;		line 4 in file "i2c.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;		None
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;		None
  1250 ;; Return value:  Size  Location     Type
  1251 ;;                  1    wreg      void 
  1252 ;; Registers used:
  1253 ;;		wreg, status,2
  1254 ;; Tracked objects:
  1255 ;;		On entry : 0/0
  1256 ;;		On exit  : 0/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1263 ;;Total ram usage:        0 bytes
  1264 ;; Hardware stack levels used: 1
  1265 ;; Hardware stack levels required when called: 1
  1266 ;; This function calls:
  1267 ;;		Nothing
  1268 ;; This function is called by:
  1269 ;;		_color_click_init
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           
  1273                           	psect	text12
  1274   0001F4                     __ptext12:
  1275                           	callstack 0
  1276   0001F4                     _I2C_2_Master_Init:
  1277                           	callstack 28
  1278   0001F4                     
  1279                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  1280   0001F4  010E               	movlb	14	; () banked
  1281   0001F6  51D9               	movf	217,w,b	;volatile
  1282   0001F8  0BF0               	andlw	-16
  1283   0001FA  0908               	iorlw	8
  1284   0001FC  6FD9               	movwf	217,b	;volatile
  1285   0001FE                     
  1286                           ; BSR set to: 14
  1287                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  1288   0001FE  8BD9               	bsf	217,5,b	;volatile
  1289                           
  1290                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  1291   000200  0E9F               	movlw	159
  1292   000202  6FD6               	movwf	214,b	;volatile
  1293   000204                     
  1294                           ; BSR set to: 14
  1295                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  1296   000204  8A84               	bsf	132,5,c	;volatile
  1297   000206                     
  1298                           ; BSR set to: 14
  1299                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  1300   000206  8C84               	bsf	132,6,c	;volatile
  1301   000208                     
  1302                           ; BSR set to: 14
  1303                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  1304   000208  9BA7               	bcf	167,5,b	;volatile
  1305   00020A                     
  1306                           ; BSR set to: 14
  1307                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  1308   00020A  9DA7               	bcf	167,6,b	;volatile
  1309                           
  1310                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  1311   00020C  0E1D               	movlw	29
  1312   00020E  6F1D               	movwf	29,b	;volatile
  1313                           
  1314                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  1315   000210  0E1E               	movlw	30
  1316   000212  6F1C               	movwf	28,b	;volatile
  1317                           
  1318                           ;i2c.c: 18:   RD5PPS=0x1C;
  1319   000214  0E1C               	movlw	28
  1320   000216  6F6F               	movwf	111,b	;volatile
  1321                           
  1322                           ;i2c.c: 19:   RD6PPS=0x1B;
  1323   000218  0E1B               	movlw	27
  1324   00021A  6F70               	movwf	112,b	;volatile
  1325   00021C                     
  1326                           ; BSR set to: 14
  1327   00021C  0012               	return		;funcret
  1328   00021E                     __end_of_I2C_2_Master_Init:
  1329                           	callstack 0
  1330                           
  1331 ;; *************** function _buggyLEDs_init *****************
  1332 ;; Defined at:
  1333 ;;		line 113 in file "dc_motor.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;		None
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;		None
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  1    wreg      void 
  1340 ;; Registers used:
  1341 ;;		None
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1351 ;;Total ram usage:        0 bytes
  1352 ;; Hardware stack levels used: 1
  1353 ;; Hardware stack levels required when called: 1
  1354 ;; This function calls:
  1355 ;;		Nothing
  1356 ;; This function is called by:
  1357 ;;		_main
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           	psect	text13
  1362   00029E                     __ptext13:
  1363                           	callstack 0
  1364   00029E                     _buggyLEDs_init:
  1365                           	callstack 29
  1366   00029E                     
  1367                           ;dc_motor.c: 114:     LATHbits.LATH1 = 0;
  1368   00029E  9280               	bcf	128,1,c	;volatile
  1369                           
  1370                           ;dc_motor.c: 115:     LATDbits.LATD3 = 0;
  1371   0002A0  967C               	bcf	124,3,c	;volatile
  1372                           
  1373                           ;dc_motor.c: 116:     LATDbits.LATD4 = 0;
  1374   0002A2  987C               	bcf	124,4,c	;volatile
  1375                           
  1376                           ;dc_motor.c: 117:     LATFbits.LATF0 = 0;
  1377   0002A4  907E               	bcf	126,0,c	;volatile
  1378                           
  1379                           ;dc_motor.c: 118:     LATHbits.LATH0 = 0;
  1380   0002A6  9080               	bcf	128,0,c	;volatile
  1381                           
  1382                           ;dc_motor.c: 120:     TRISHbits.TRISH1 = 0;
  1383   0002A8  9288               	bcf	136,1,c	;volatile
  1384                           
  1385                           ;dc_motor.c: 121:     TRISDbits.TRISD3 = 0;
  1386   0002AA  9684               	bcf	132,3,c	;volatile
  1387                           
  1388                           ;dc_motor.c: 122:     TRISDbits.TRISD4 = 0;
  1389   0002AC  9884               	bcf	132,4,c	;volatile
  1390                           
  1391                           ;dc_motor.c: 123:     TRISFbits.TRISF0 = 0;
  1392   0002AE  9086               	bcf	134,0,c	;volatile
  1393                           
  1394                           ;dc_motor.c: 124:     TRISHbits.TRISH0 = 0;
  1395   0002B0  9088               	bcf	136,0,c	;volatile
  1396   0002B2  0012               	return		;funcret
  1397   0002B4                     __end_of_buggyLEDs_init:
  1398                           	callstack 0
  1399                           
  1400 ;; *************** function _HighISR *****************
  1401 ;; Defined at:
  1402 ;;		line 37 in file "interrupts.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;		None
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;		None
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      void 
  1409 ;; Registers used:
  1410 ;;		wreg, status,2
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1420 ;;Total ram usage:        0 bytes
  1421 ;; Hardware stack levels used: 1
  1422 ;; This function calls:
  1423 ;;		Nothing
  1424 ;; This function is called by:
  1425 ;;		Interrupt level 2
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           	psect	intcode
  1430   000008                     __pintcode:
  1431                           	callstack 0
  1432   000008                     _HighISR:
  1433                           	callstack 25
  1434                           
  1435                           ;incstack = 0
  1436   000008  8249               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1437   00000A                     
  1438                           ;interrupts.c: 38:    if (PIR0bits.INT0IF) {
  1439   00000A  010E               	movlb	14	; () banked
  1440   00000C  A133               	btfss	51,0,b	;volatile
  1441   00000E  EF0B  F000         	goto	i2u57_41
  1442   000012  EF0D  F000         	goto	i2u57_40
  1443   000016                     i2u57_41:
  1444   000016  EF10  F000         	goto	i2l460
  1445   00001A                     i2u57_40:
  1446   00001A                     
  1447                           ; BSR set to: 14
  1448                           ;interrupts.c: 39:        read_color_flag = 1;
  1449   00001A  0E01               	movlw	1
  1450   00001C  6E1B               	movwf	_read_color_flag^0,c
  1451   00001E                     
  1452                           ; BSR set to: 14
  1453                           ;interrupts.c: 40:        PIR0bits.INT0IF = 0;
  1454   00001E  9133               	bcf	51,0,b	;volatile
  1455   000020                     i2l460:
  1456                           
  1457                           ; BSR set to: 14
  1458   000020  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1459   000022  0011               	retfie		f
  1460   000024                     __end_of_HighISR:
  1461                           	callstack 0
  1462   000000                     
  1463                           	psect	rparam
  1464   000000                     
  1465                           	psect	temp
  1466   000049                     btemp:
  1467                           	callstack 0
  1468   000049                     	ds	1
  1469   000000                     int$flags	set	btemp
  1470   000000                     wtemp8	set	btemp+1
  1471   000000                     ttemp5	set	btemp+1
  1472   000000                     ttemp6	set	btemp+4
  1473   000000                     ttemp7	set	btemp+8
  1474                           
  1475                           	psect	idloc
  1476                           
  1477                           ;Config register IDLOC0 @ 0x200000
  1478                           ;	unspecified, using default values
  1479   200000                     	org	2097152
  1480   200000  0FFF               	dw	4095
  1481                           
  1482                           ;Config register IDLOC1 @ 0x200002
  1483                           ;	unspecified, using default values
  1484   200002                     	org	2097154
  1485   200002  0FFF               	dw	4095
  1486                           
  1487                           ;Config register IDLOC2 @ 0x200004
  1488                           ;	unspecified, using default values
  1489   200004                     	org	2097156
  1490   200004  0FFF               	dw	4095
  1491                           
  1492                           ;Config register IDLOC3 @ 0x200006
  1493                           ;	unspecified, using default values
  1494   200006                     	org	2097158
  1495   200006  0FFF               	dw	4095
  1496                           
  1497                           ;Config register IDLOC4 @ 0x200008
  1498                           ;	unspecified, using default values
  1499   200008                     	org	2097160
  1500   200008  0FFF               	dw	4095
  1501                           
  1502                           ;Config register IDLOC5 @ 0x20000A
  1503                           ;	unspecified, using default values
  1504   20000A                     	org	2097162
  1505   20000A  0FFF               	dw	4095
  1506                           
  1507                           ;Config register IDLOC6 @ 0x20000C
  1508                           ;	unspecified, using default values
  1509   20000C                     	org	2097164
  1510   20000C  0FFF               	dw	4095
  1511                           
  1512                           ;Config register IDLOC7 @ 0x20000E
  1513                           ;	unspecified, using default values
  1514   20000E                     	org	2097166
  1515   20000E  0FFF               	dw	4095
  1516                           
  1517                           	psect	config
  1518                           
  1519                           ;Config register CONFIG1L @ 0x300000
  1520                           ;	External Oscillator mode Selection bits
  1521                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  1522                           ;	Power-up default value for COSC bits
  1523                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  1524   300000                     	org	3145728
  1525   300000  AA                 	db	170
  1526                           
  1527                           ;Config register CONFIG1H @ 0x300001
  1528                           ;	unspecified, using default values
  1529                           ;	Clock Out Enable bit
  1530                           ;	CLKOUTEN = 0x1, unprogrammed default
  1531                           ;	Clock Switch Enable bit
  1532                           ;	CSWEN = 0x1, unprogrammed default
  1533                           ;	Fail-Safe Clock Monitor Enable bit
  1534                           ;	FCMEN = 0x1, unprogrammed default
  1535   300001                     	org	3145729
  1536   300001  FF                 	db	255
  1537                           
  1538                           ;Config register CONFIG2L @ 0x300002
  1539                           ;	unspecified, using default values
  1540                           ;	Master Clear Enable bit
  1541                           ;	MCLRE = 0x1, unprogrammed default
  1542                           ;	Power-up Timer Enable bit
  1543                           ;	PWRTE = 0x1, unprogrammed default
  1544                           ;	Low-power BOR enable bit
  1545                           ;	LPBOREN = 0x1, unprogrammed default
  1546                           ;	Brown-out Reset Enable bits
  1547                           ;	BOREN = 0x3, unprogrammed default
  1548   300002                     	org	3145730
  1549   300002  FF                 	db	255
  1550                           
  1551                           ;Config register CONFIG2H @ 0x300003
  1552                           ;	unspecified, using default values
  1553                           ;	Brown Out Reset Voltage selection bits
  1554                           ;	BORV = 0x3, unprogrammed default
  1555                           ;	ZCD Disable bit
  1556                           ;	ZCD = 0x1, unprogrammed default
  1557                           ;	PPSLOCK bit One-Way Set Enable bit
  1558                           ;	PPS1WAY = 0x1, unprogrammed default
  1559                           ;	Stack Full/Underflow Reset Enable bit
  1560                           ;	STVREN = 0x1, unprogrammed default
  1561                           ;	Debugger Enable bit
  1562                           ;	DEBUG = 0x1, unprogrammed default
  1563                           ;	Extended Instruction Set Enable bit
  1564                           ;	XINST = 0x1, unprogrammed default
  1565   300003                     	org	3145731
  1566   300003  FF                 	db	255
  1567                           
  1568                           ;Config register CONFIG3L @ 0x300004
  1569                           ;	WDT Period Select bits
  1570                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1571                           ;	WDT operating mode
  1572                           ;	WDTE = OFF, WDT Disabled
  1573   300004                     	org	3145732
  1574   300004  9F                 	db	159
  1575                           
  1576                           ;Config register CONFIG3H @ 0x300005
  1577                           ;	unspecified, using default values
  1578                           ;	WDT Window Select bits
  1579                           ;	WDTCWS = 0x7, unprogrammed default
  1580                           ;	WDT input clock selector
  1581                           ;	WDTCCS = 0x7, unprogrammed default
  1582   300005                     	org	3145733
  1583   300005  FF                 	db	255
  1584                           
  1585                           ;Config register CONFIG4L @ 0x300006
  1586                           ;	unspecified, using default values
  1587                           ;	Write Protection Block 0
  1588                           ;	WRT0 = 0x1, unprogrammed default
  1589                           ;	Write Protection Block 1
  1590                           ;	WRT1 = 0x1, unprogrammed default
  1591                           ;	Write Protection Block 2
  1592                           ;	WRT2 = 0x1, unprogrammed default
  1593                           ;	Write Protection Block 3
  1594                           ;	WRT3 = 0x1, unprogrammed default
  1595                           ;	Write Protection Block 3
  1596                           ;	WRT4 = 0x1, unprogrammed default
  1597                           ;	Write Protection Block 3
  1598                           ;	WRT5 = 0x1, unprogrammed default
  1599                           ;	Write Protection Block 3
  1600                           ;	WRT6 = 0x1, unprogrammed default
  1601                           ;	Write Protection Block 3
  1602                           ;	WRT7 = 0x1, unprogrammed default
  1603   300006                     	org	3145734
  1604   300006  FF                 	db	255
  1605                           
  1606                           ;Config register CONFIG4H @ 0x300007
  1607                           ;	unspecified, using default values
  1608                           ;	Configuration Register Write Protection bit
  1609                           ;	WRTC = 0x1, unprogrammed default
  1610                           ;	Boot Block Write Protection bit
  1611                           ;	WRTB = 0x1, unprogrammed default
  1612                           ;	Data EEPROM Write Protection bit
  1613                           ;	WRTD = 0x1, unprogrammed default
  1614                           ;	Scanner Enable bit
  1615                           ;	SCANE = 0x1, unprogrammed default
  1616                           ;	Low Voltage Programming Enable bit
  1617                           ;	LVP = 0x1, unprogrammed default
  1618   300007                     	org	3145735
  1619   300007  FF                 	db	255
  1620                           
  1621                           ;Config register CONFIG5L @ 0x300008
  1622                           ;	unspecified, using default values
  1623                           ;	UserNVM Program Memory Code Protection bit
  1624                           ;	CP = 0x1, unprogrammed default
  1625                           ;	DataNVM Memory Code Protection bit
  1626                           ;	CPD = 0x1, unprogrammed default
  1627   300008                     	org	3145736
  1628   300008  FF                 	db	255
  1629                           
  1630                           ;Config register CONFIG5H @ 0x300009
  1631                           ;	unspecified, using default values
  1632   300009                     	org	3145737
  1633   300009  FF                 	db	255
  1634                           
  1635                           ;Config register CONFIG6L @ 0x30000A
  1636                           ;	unspecified, using default values
  1637                           ;	Table Read Protection Block 0
  1638                           ;	EBTR0 = 0x1, unprogrammed default
  1639                           ;	Table Read Protection Block 1
  1640                           ;	EBTR1 = 0x1, unprogrammed default
  1641                           ;	Table Read Protection Block 2
  1642                           ;	EBTR2 = 0x1, unprogrammed default
  1643                           ;	Table Read Protection Block 3
  1644                           ;	EBTR3 = 0x1, unprogrammed default
  1645                           ;	Table Read Protection Block 4
  1646                           ;	EBTR4 = 0x1, unprogrammed default
  1647                           ;	Table Read Protection Block 5
  1648                           ;	EBTR5 = 0x1, unprogrammed default
  1649                           ;	Table Read Protection Block 6
  1650                           ;	EBTR6 = 0x1, unprogrammed default
  1651                           ;	Table Read Protection Block 7
  1652                           ;	EBTR7 = 0x1, unprogrammed default
  1653   30000A                     	org	3145738
  1654   30000A  FF                 	db	255
  1655                           
  1656                           ;Config register CONFIG6H @ 0x30000B
  1657                           ;	unspecified, using default values
  1658                           ;	Boot Block Table Read Protection bit
  1659                           ;	EBTRB = 0x1, unprogrammed default
  1660   30000B                     	org	3145739
  1661   30000B  FF                 	db	255
  1662                           tosu	equ	0xFFF
  1663                           tosh	equ	0xFFE
  1664                           tosl	equ	0xFFD
  1665                           stkptr	equ	0xFFC
  1666                           pclatu	equ	0xFFB
  1667                           pclath	equ	0xFFA
  1668                           pcl	equ	0xFF9
  1669                           tblptru	equ	0xFF8
  1670                           tblptrh	equ	0xFF7
  1671                           tblptrl	equ	0xFF6
  1672                           tablat	equ	0xFF5
  1673                           prodh	equ	0xFF4
  1674                           prodl	equ	0xFF3
  1675                           indf0	equ	0xFEF
  1676                           postinc0	equ	0xFEE
  1677                           postdec0	equ	0xFED
  1678                           preinc0	equ	0xFEC
  1679                           plusw0	equ	0xFEB
  1680                           fsr0h	equ	0xFEA
  1681                           fsr0l	equ	0xFE9
  1682                           wreg	equ	0xFE8
  1683                           indf1	equ	0xFE7
  1684                           postinc1	equ	0xFE6
  1685                           postdec1	equ	0xFE5
  1686                           preinc1	equ	0xFE4
  1687                           plusw1	equ	0xFE3
  1688                           fsr1h	equ	0xFE2
  1689                           fsr1l	equ	0xFE1
  1690                           bsr	equ	0xFE0
  1691                           indf2	equ	0xFDF
  1692                           postinc2	equ	0xFDE
  1693                           postdec2	equ	0xFDD
  1694                           preinc2	equ	0xFDC
  1695                           plusw2	equ	0xFDB
  1696                           fsr2h	equ	0xFDA
  1697                           fsr2l	equ	0xFD9
  1698                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         125
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      5      72
    BANK0           160      0      60
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    motor_init@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(COMRAM[9]), 

    motor_init@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(COMRAM[9]), 

    space@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlhllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    space@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlhllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    space@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlhllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    space@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlhllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    right_45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlhllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    right_45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlhllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    right_45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlhllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    right_45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlhllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    left_45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlhllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    left_45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlhllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    left_45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlhllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    left_45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlhllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlhllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlhllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlhllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlhllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    reverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlhllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    reverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlhllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    reverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlhllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    reverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlhllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    forward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlhllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    forward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlhllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    forward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlhllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    forward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlhllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlhllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlhllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlhllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlhllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    S236DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlhllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlhllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    S236DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlhllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlhllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 


Critical Paths under _main in COMRAM

    _main->_color_click_init
    _colorclick_interrupts_init->_color_writetoaddr
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1736
                     _buggyLEDs_init
                   _color_click_init
                    _initDCmotorsPWM
                         _initUSART4
                    _interrupts_init
                         _motor_init
 ---------------------------------------------------------------------------------
 (1) _motor_init                                           4     0      4     152
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _interrupts_init                                      0     0      0     743
         _colorclick_interrupts_init
 ---------------------------------------------------------------------------------
 (2) _colorclick_interrupts_init                           0     0      0     743
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     743
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (3) _color_writetoaddr                                    2     1      1     743
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      15
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggyLEDs_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _buggyLEDs_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _initDCmotorsPWM
   _initUSART4
   _interrupts_init
     _colorclick_interrupts_init
       _color_writetoaddr
   _motor_init

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      3C       5       37.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      5      48       1       76.6%
BITBIGSFRhlhllh     52      0       0      39        0.0%
BITBIGSFRhlhlll     37      0       0      41        0.0%
BITBIGSFRhhhhl      32      0       0      33        0.0%
BITBIGSFRlllhll     2A      0       0      53        0.0%
BITBIGSFRlllll      26      0       0      60        0.0%
BITBIGSFRllhh       20      0       0      44        0.0%
BITBIGSFRhhhlll     1D      0       0      37        0.0%
BITBIGSFRlllhhh     11      0       0      47        0.0%
BITBIGSFRlllhhh     11      0       0      48        0.0%
BITBIGSFRhhhlhh      E      0       0      34        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      46        0.0%
BITBIGSFRllhl        C      0       0      45        0.0%
BITBIGSFRlllhll      9      0       0      57        0.0%
BITBIGSFRhllll       8      0       0      42        0.0%
BITBIGSFRllllh       6      0       0      59        0.0%
BITBIGSFRlllhlh      6      0       0      52        0.0%
BITBIGSFRlllhlh      5      0       0      51        0.0%
BITBIGSFRlllhll      5      0       0      55        0.0%
BITBIGSFRlllhll      3      0       0      54        0.0%
BITBIGSFRlllhll      3      0       0      56        0.0%
BITBIGSFRlllhhl      3      0       0      50        0.0%
BITBIGSFRhlhlll      2      0       0      40        0.0%
BITBIGSFRhhhllh      2      0       0      36        0.0%
BITBIGSFRhlhllh      1      0       0      38        0.0%
BITBIGSFRhhhlhl      1      0       0      35        0.0%
BITBIGSFRlllhhh      1      0       0      49        0.0%
BITBIGSFRlllhll      1      0       0      58        0.0%
BITBIGSFRlh          1      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      84      61        0.0%
DATA                 0      0      84       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Mar 11 20:45:31 2023

                                l30 021E                                  l33 0244  
                                l42 02C8                                  l27 021C  
                                l36 02D2                                  l45 02BE  
                                l90 0284                                  l87 01F2  
                                u10 022E                                  u11 022A  
                                u20 0244                                  u21 0240  
                               l160 0264                                 l408 0144  
                               l451 029C                                 l292 02B2  
                               l454 0184                                 l279 00B6  
                               l289 0100                                 u617 01D4  
                               wreg 000FE8                                l1140 02CA  
                              l1142 02CE                                l1150 02BA  
                              l1320 029E                                l1136 021E  
                              l1144 02C0                                l1138 022E  
                              l1146 02C4                                l1148 02B6  
                              l1260 0252                                l1190 0204  
                              l1262 0254                                l1192 0206  
                              l1264 025E                                l1256 0246  
                              l1194 0208                                l1186 01F4  
                              l1266 0260                                l1258 0250  
                              l1196 020A                                l1188 01FE  
                              l1268 0262                                l1640 01C4  
                              l1720 012A                                l1712 0102  
                              l1634 0268                                l1642 01CE  
                              l1730 0138                                l1722 012E  
                              l1714 010E                                l1644 01DE  
                              l1660 005E                                l1636 0148  
                              l1732 013A                                l1724 0132  
                              l1716 0122                                l1646 01E8  
                              l1638 01C0                                l1670 009C  
                              l1662 0062                                l1734 013C  
                              l1726 0134                                l1718 0126  
                              l1672 009E                                l1664 0086  
                              l1656 0028                                l1680 00B8  
                              l1736 013E                                l1728 0136  
                              l1674 00A8                                l1666 0090  
                              l1658 0038                                l1690 0286  
                              l1682 00C4                                l1738 0140  
                              l1676 00AA                                l1668 0092  
                              l1692 0298                                l1684 00CC  
                              l1678 00B4                                l1686 00E8  
                              l1688 00F0                        _BAUD4CONbits 000EE9  
                              _T2PR 000FBC             __end_of_interrupts_init 029E  
                              _main 0102                                btemp 0049  
      ??_colorclick_interrupts_init 0046                                start 0024  
                   __end_of_HighISR 0024                        ___param_bank 000000  
                  _color_lowerbound 0015                               ?_main 0042  
                             i2l460 0020          __end_of_I2C_2_Master_Start 02D4  
        __end_of_I2C_2_Master_Write 02C0                               _color 001C  
                             tablat 000FF5                               ttemp5 004A  
                             ttemp6 004D                               ttemp7 0051  
                             status 000FD8                               wtemp8 004A  
                   __initialization 0186                        __end_of_main 0148  
                  _color_upperbound 0047                              ??_main 0047  
                     __activetblptr 000000                              _CCPR1H 000FAA  
                            _CCPR2H 000FA6                              _CCPR3H 000F25  
                            _CCPR4H 000F21                              _RC0PPS 000E62  
                            _RC4REG 000EE3                              _RE2PPS 000E74  
                            _RC7PPS 000E69                              _RD5PPS 000E6F  
                            _RE4PPS 000E76                              _RD6PPS 000E70  
                            i2l1630 001A                              i2l1632 001E  
                            i2l1628 000A                              _RG6PPS 000E88  
                  ?_interrupts_init 0042                           ??_HighISR 0042  
          __end_of_color_click_init 01F4                              _RX4PPS 000E15  
                            _TX4REG 000EE4                        _CCPTMRS0bits 000FAD  
                  ??_buggyLEDs_init 0042                              clear_0 01A4  
                            clear_1 01B0                              _motorL 0039  
                            _motorR 0030                              isa$std 000001  
                      __pdataCOMRAM 0047                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
                 ??_initDCmotorsPWM 0044                          __accesstop 0060  
           __end_of__initialization 01B6  __end_of_colorclick_interrupts_init 0186  
        _colorclick_interrupts_init 0148                       ___rparam_used 000001  
                    __pcstackCOMRAM 0042                          __pbssBANK0 0060  
                 _color_writetoaddr 0266                        _T2CLKCONbits 000FBF  
                ?_color_writetoaddr 0044                     _read_color_flag 001B  
               ??_color_writetoaddr 0045                             _SP4BRGH 000EE6  
                           _SP4BRGL 000EE5                             i2u57_40 001A  
                           i2u57_41 0016                             _SSP2ADD 000ED6  
                           _SSP2BUF 000ED5              color_writetoaddr@value 0044  
                           _HighISR 0008           __end_of_color_writetoaddr 0286  
                _I2C_2_Master_Start 02CA                          _initUSART4 0246  
                _I2C_2_Master_Write 02B4                             __Hparam 0000  
                           __Lparam 0000                 ?_I2C_2_Master_Start 0042  
               ?_I2C_2_Master_Write 0042                             __pcinit 0186  
                           __ramtop 0E00                             __ptext0 0102  
                           __ptext1 00B8                             __ptext2 0286  
                           __ptext3 0148                             __ptext4 0246  
                           __ptext5 0028                             __ptext6 01C0  
                           __ptext7 0266                             __ptext8 02B4  
                           __ptext9 02C0                           _T2CONbits 000FBD  
                         _T2HLTbits 000FBE                       _RxBufWriteCnt 001A  
              ??_I2C_2_Master_Start 0043                ??_I2C_2_Master_Write 0043  
              end_of_initialization 01B6                   ?_color_click_init 0042  
                ??_color_click_init 0046                             postinc0 000FEE  
                        _motor_init 00B8                     _initDCmotorsPWM 0028  
                         _TRISAbits 000F81                           _TRISBbits 000F82  
                         _TRISCbits 000F83                           _TRISDbits 000F84  
                         _TRISEbits 000F85                           _TRISFbits 000F86  
                         _TRISGbits 000F87                           _TRISHbits 000F88  
          color_writetoaddr@address 0045                         _CCP1CONbits 000FAB  
                      _EUSART4RXbuf 0001         ?_colorclick_interrupts_init 0042  
                      _EUSART4TXbuf 0060                         _CCP2CONbits 000FA7  
                       _CCP3CONbits 000F26                         ?_initUSART4 0042  
                       _CCP4CONbits 000F22                       __pidataCOMRAM 02D4  
               start_initialization 0186                       _TxBufWriteCnt 0018  
           __end_of_initDCmotorsPWM 00B8                         ?_motor_init 0042  
                       __pbssCOMRAM 0001                            ?_HighISR 0042  
                         __pintcode 0008                   ??_interrupts_init 0046  
                 _I2C_2_Master_Idle 021E                   _I2C_2_Master_Init 01F4  
                 _I2C_2_Master_Stop 02C0                        _RxBufReadCnt 0019  
                ?_I2C_2_Master_Idle 0042                  ?_I2C_2_Master_Init 0042  
                ?_I2C_2_Master_Stop 0042            initDCmotorsPWM@PWMperiod 0042  
               ??_I2C_2_Master_Idle 0042                 ??_I2C_2_Master_Init 0042  
                          _LATAbits 000F79                 ??_I2C_2_Master_Stop 0043  
                          _LATCbits 000F7B                            _LATDbits 000F7C  
                          _LATEbits 000F7D                            _LATFbits 000F7E  
                          _LATGbits 000F7F                            _LATHbits 000F80  
                          _IPR0bits 000E1F                            _PIE0bits 000E29  
                          _PIE4bits 000E2D                            _PIR0bits 000E33  
                          _PIR4bits 000E37                    ?_initDCmotorsPWM 0042  
                          _SSP2CON2 000EDA                            _SSP2STAT 000ED8  
         __end_of_I2C_2_Master_Idle 0246           __end_of_I2C_2_Master_Init 021E  
         __end_of_I2C_2_Master_Stop 02CA         I2C_2_Master_Write@data_byte 0043  
                      _TxBufReadCnt 0017                        ??_initUSART4 0042  
                          __Hrparam 0000                            __Lrparam 0000  
                        _ANSELBbits 000E9A                          _ANSELDbits 000EA7  
                        _ANSELFbits 000EB4                      _buggyLEDs_init 029E  
                __end_of_initUSART4 0266                            __ptext10 02CA  
                          __ptext11 021E                            __ptext12 01F4  
                          __ptext13 029E                        _SSP2CON1bits 000ED9  
                      _SSP2CON2bits 000EDA                            isa$xinst 000000  
                        _RC4STAbits 000EE7                            int$flags 0049  
                      ??_motor_init 0046              __end_of_buggyLEDs_init 02B4  
                        _INTCONbits 000FF2                            intlevel2 0000  
                __end_of_motor_init 0102                     _interrupts_init 0286  
                      motor_init@mL 0042                        motor_init@mR 0044  
                  _color_click_init 01C0                     ?_buggyLEDs_init 0042  
                        _SSP2DATPPS 000E1D                          _SSP2CLKPPS 000E1C  
                        _TX4STAbits 000EE8  
