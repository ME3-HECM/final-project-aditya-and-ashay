

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Mar 07 13:41:59 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51   000000                     
    52                           ; Generated 06/04/2022 GMT
    53                           ; 
    54                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F67K40 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86   000000                     _RC4STAbits	set	3815
    87   000000                     _SP4BRGH	set	3814
    88   000000                     _SP4BRGL	set	3813
    89   000000                     _TX4STAbits	set	3816
    90   000000                     _BAUD4CONbits	set	3817
    91   000000                     _TX4REG	set	3812
    92   000000                     _LATFbits	set	3966
    93   000000                     _TRISFbits	set	3974
    94   000000                     _LATGbits	set	3967
    95   000000                     _TRISGbits	set	3975
    96   000000                     _TRISEbits	set	3973
    97   000000                     _SSP2CON2bits	set	3802
    98   000000                     _RX4PPS	set	3605
    99   000000                     _SSP2CLKPPS	set	3612
   100   000000                     _SSP2DATPPS	set	3613
   101   000000                     _ANSELDbits	set	3751
   102   000000                     _SSP2ADD	set	3798
   103   000000                     _SSP2CON1bits	set	3801
   104   000000                     _RC4REG	set	3811
   105   000000                     _LATCbits	set	3963
   106   000000                     _LATEbits	set	3965
   107   000000                     _TRISCbits	set	3971
   108   000000                     _SSP2CON2	set	3802
   109   000000                     _TRISDbits	set	3972
   110   000000                     _CCPR4H	set	3873
   111   000000                     _CCPR3H	set	3877
   112   000000                     _SSP2STAT	set	3800
   113   000000                     _SSP2BUF	set	3797
   114   000000                     _PIE4bits	set	3629
   115   000000                     _RC7PPS	set	3689
   116   000000                     _RD5PPS	set	3695
   117   000000                     _RE2PPS	set	3700
   118   000000                     _RD6PPS	set	3696
   119   000000                     _T2PR	set	4028
   120   000000                     _T2CONbits	set	4029
   121   000000                     _CCPR2H	set	4006
   122   000000                     _CCPR1H	set	4010
   123   000000                     _TRISAbits	set	3969
   124   000000                     _RE4PPS	set	3702
   125   000000                     _RG6PPS	set	3720
   126   000000                     _INTCONbits	set	4082
   127   000000                     _T2CLKCONbits	set	4031
   128   000000                     _T2HLTbits	set	4030
   129   000000                     _CCP1CONbits	set	4011
   130   000000                     _CCPTMRS0bits	set	4013
   131   000000                     _CCP2CONbits	set	4007
   132   000000                     _LATAbits	set	3961
   133   000000                     _CCP3CONbits	set	3878
   134   000000                     _CCP4CONbits	set	3874
   135   000000                     _PIR4bits	set	3639
   136   000000                     _RC0PPS	set	3682
   137                           
   138                           	psect	smallconst
   139   000E00                     __psmallconst:
   140                           	callstack 0
   141   000E00  00                 	db	0
   142   000E01                     STR_1:
   143   000E01  25                 	db	37
   144   000E02  64                 	db	100	;'d'
   145   000E03  2F                 	db	47
   146   000E04  2F                 	db	47
   147   000E05  25                 	db	37
   148   000E06  64                 	db	100	;'d'
   149   000E07  2F                 	db	47
   150   000E08  2F                 	db	47
   151   000E09  25                 	db	37
   152   000E0A  64                 	db	100	;'d'
   153   000E0B  2F                 	db	47
   154   000E0C  2F                 	db	47
   155   000E0D  25                 	db	37
   156   000E0E  64                 	db	100	;'d'
   157   000E0F  00                 	db	0
   158   000E10  00                 	db	0	; dummy byte at the end
   159   000000                     
   160                           ; #config settings
   161                           
   162                           	psect	cinit
   163   001A60                     __pcinit:
   164                           	callstack 0
   165   001A60                     start_initialization:
   166                           	callstack 0
   167   001A60                     __initialization:
   168                           	callstack 0
   169                           
   170                           ; Clear objects allocated to BANK1 (60 bytes)
   171   001A60  EE01  F000         	lfsr	0,__pbssBANK1
   172   001A64  0E3C               	movlw	60
   173   001A66                     clear_0:
   174   001A66  6AEE               	clrf	postinc0,c
   175   001A68  06E8               	decf	wreg,f,c
   176   001A6A  E1FD               	bnz	clear_0
   177                           
   178                           ; Clear objects allocated to BANK0 (57 bytes)
   179   001A6C  EE00  F0C1         	lfsr	0,__pbssBANK0
   180   001A70  0E39               	movlw	57
   181   001A72                     clear_1:
   182   001A72  6AEE               	clrf	postinc0,c
   183   001A74  06E8               	decf	wreg,f,c
   184   001A76  E1FD               	bnz	clear_1
   185                           
   186                           ; Clear objects allocated to COMRAM (4 bytes)
   187   001A78  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   188   001A7A  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   189   001A7C  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   190   001A7E  6A57               	clrf	__pbssCOMRAM& (0+255),c
   191   001A80                     end_of_initialization:
   192                           	callstack 0
   193   001A80                     __end_of__initialization:
   194                           	callstack 0
   195   001A80  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   196   001A82  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   197   001A84  0E00               	movlw	low (__Lsmallconst shr (0+16))
   198   001A86  6EF8               	movwf	tblptru,c
   199   001A88  0E0E               	movlw	high __Lsmallconst
   200   001A8A  6EF7               	movwf	tblptrh,c
   201   001A8C  0100               	movlb	0
   202   001A8E  EF64  F00A         	goto	_main	;jump to C main() function
   203                           
   204                           	psect	bssCOMRAM
   205   000057                     __pbssCOMRAM:
   206                           	callstack 0
   207   000057                     _TxBufReadCnt:
   208                           	callstack 0
   209   000057                     	ds	1
   210   000058                     _TxBufWriteCnt:
   211                           	callstack 0
   212   000058                     	ds	1
   213   000059                     _RxBufReadCnt:
   214                           	callstack 0
   215   000059                     	ds	1
   216   00005A                     _RxBufWriteCnt:
   217                           	callstack 0
   218   00005A                     	ds	1
   219                           
   220                           	psect	bssBANK0
   221   0000C1                     __pbssBANK0:
   222                           	callstack 0
   223   0000C1                     _EUSART4RXbuf:
   224                           	callstack 0
   225   0000C1                     	ds	20
   226   0000D5                     _width:
   227                           	callstack 0
   228   0000D5                     	ds	2
   229   0000D7                     _prec:
   230                           	callstack 0
   231   0000D7                     	ds	2
   232   0000D9                     _flags:
   233                           	callstack 0
   234   0000D9                     	ds	1
   235   0000DA                     _dbuf:
   236                           	callstack 0
   237   0000DA                     	ds	32
   238                           
   239                           	psect	bssBANK1
   240   000100                     __pbssBANK1:
   241                           	callstack 0
   242   000100                     _EUSART4TXbuf:
   243                           	callstack 0
   244   000100                     	ds	60
   245                           
   246                           	psect	cstackBANK0
   247   000060                     __pcstackBANK0:
   248                           	callstack 0
   249   000060                     ?_vfprintf:
   250                           	callstack 0
   251   000060                     vfprintf@fp:
   252                           	callstack 0
   253                           
   254                           ; 2 bytes @ 0x0
   255   000060                     	ds	2
   256   000062                     vfprintf@fmt:
   257                           	callstack 0
   258                           
   259                           ; 2 bytes @ 0x2
   260   000062                     	ds	2
   261   000064                     vfprintf@ap:
   262                           	callstack 0
   263                           
   264                           ; 2 bytes @ 0x4
   265   000064                     	ds	2
   266   000066                     ?_sprintf:
   267                           	callstack 0
   268   000066                     sprintf@s:
   269                           	callstack 0
   270                           
   271                           ; 2 bytes @ 0x6
   272   000066                     	ds	2
   273   000068                     sprintf@fmt:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0x8
   277   000068                     	ds	10
   278   000072                     sprintf@ap:
   279                           	callstack 0
   280                           
   281                           ; 2 bytes @ 0x12
   282   000072                     	ds	2
   283   000074                     sprintf@f:
   284                           	callstack 0
   285                           
   286                           ; 11 bytes @ 0x14
   287   000074                     	ds	11
   288   00007F                     main@buf:
   289                           	callstack 0
   290                           
   291                           ; 40 bytes @ 0x1F
   292   00007F                     	ds	40
   293   0000A7                     main@R:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0x47
   297   0000A7                     	ds	2
   298   0000A9                     main@B:
   299                           	callstack 0
   300                           
   301                           ; 2 bytes @ 0x49
   302   0000A9                     	ds	2
   303   0000AB                     main@G:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0x4B
   307   0000AB                     	ds	2
   308   0000AD                     main@C:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0x4D
   312   0000AD                     	ds	2
   313   0000AF                     main@motorL:
   314                           	callstack 0
   315                           
   316                           ; 9 bytes @ 0x4F
   317   0000AF                     	ds	9
   318   0000B8                     main@motorR:
   319                           	callstack 0
   320                           
   321                           ; 9 bytes @ 0x58
   322   0000B8                     	ds	9
   323                           
   324                           	psect	cstackCOMRAM
   325   000001                     __pcstackCOMRAM:
   326                           	callstack 0
   327   000001                     ??_getCharFromTxBuf:
   328   000001                     putCharToRxBuf@byte:
   329                           	callstack 0
   330   000001                     
   331                           ; 1 bytes @ 0x0
   332   000001                     	ds	2
   333   000003                     ??_HighISR:
   334                           
   335                           ; 1 bytes @ 0x2
   336   000003                     	ds	2
   337   000005                     ??_I2C_2_Master_Idle:
   338   000005                     ?___aodiv:
   339                           	callstack 0
   340   000005                     ?___aomod:
   341                           	callstack 0
   342   000005                     sendCharSerial4@charToSend:
   343                           	callstack 0
   344   000005                     initDCmotorsPWM@PWMperiod:
   345                           	callstack 0
   346   000005                     fputc@c:
   347                           	callstack 0
   348   000005                     ___aodiv@dividend:
   349                           	callstack 0
   350   000005                     ___aomod@dividend:
   351                           	callstack 0
   352                           
   353                           ; 8 bytes @ 0x4
   354   000005                     	ds	1
   355   000006                     ??_I2C_2_Master_Read:
   356   000006                     I2C_2_Master_Write@data_byte:
   357                           	callstack 0
   358   000006                     sendStringSerial4@string:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x5
   362   000006                     	ds	1
   363   000007                     color_writetoaddr@value:
   364                           	callstack 0
   365   000007                     I2C_2_Master_Read@ack:
   366                           	callstack 0
   367   000007                     fputc@fp:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x6
   371   000007                     	ds	1
   372   000008                     color_writetoaddr@address:
   373                           	callstack 0
   374   000008                     I2C_2_Master_Read@tmp:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0x7
   378   000008                     	ds	1
   379   000009                     ??_fputc:
   380   000009                     ??_color_click_init:
   381   000009                     ?_color_read_Red:
   382                           	callstack 0
   383   000009                     ?_color_read_Blue:
   384                           	callstack 0
   385   000009                     ?_color_read_Green:
   386                           	callstack 0
   387   000009                     ?_color_read_Clear:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x8
   391   000009                     	ds	2
   392   00000B                     ??_color_read_Red:
   393   00000B                     ??_color_read_Blue:
   394   00000B                     ??_color_read_Green:
   395   00000B                     ??_color_read_Clear:
   396                           
   397                           ; 1 bytes @ 0xA
   398   00000B                     	ds	2
   399   00000D                     ___aodiv@divisor:
   400                           	callstack 0
   401   00000D                     ___aomod@divisor:
   402                           	callstack 0
   403                           
   404                           ; 8 bytes @ 0xC
   405   00000D                     	ds	1
   406   00000E                     color_read_Red@tmp:
   407                           	callstack 0
   408   00000E                     color_read_Blue@tmp:
   409                           	callstack 0
   410   00000E                     color_read_Green@tmp:
   411                           	callstack 0
   412   00000E                     color_read_Clear@tmp:
   413                           	callstack 0
   414   00000E                     fputs@s:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0xD
   418   00000E                     	ds	2
   419   000010                     fputs@fp:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0xF
   423   000010                     	ds	2
   424   000012                     fputs@c:
   425                           	callstack 0
   426                           
   427                           ; 1 bytes @ 0x11
   428   000012                     	ds	1
   429   000013                     fputs@i:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x12
   433   000013                     	ds	2
   434   000015                     ___aodiv@counter:
   435                           	callstack 0
   436   000015                     ___aomod@counter:
   437                           	callstack 0
   438   000015                     pad@fp:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x14
   442   000015                     	ds	1
   443   000016                     ___aodiv@sign:
   444                           	callstack 0
   445   000016                     ___aomod@sign:
   446                           	callstack 0
   447                           
   448                           ; 1 bytes @ 0x15
   449   000016                     	ds	1
   450   000017                     ?_abs:
   451                           	callstack 0
   452   000017                     pad@buf:
   453                           	callstack 0
   454   000017                     abs@a:
   455                           	callstack 0
   456   000017                     ___aodiv@quotient:
   457                           	callstack 0
   458                           
   459                           ; 8 bytes @ 0x16
   460   000017                     	ds	2
   461   000019                     ??_abs:
   462   000019                     pad@p:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x18
   466   000019                     	ds	2
   467   00001B                     ??_pad:
   468                           
   469                           ; 1 bytes @ 0x1A
   470   00001B                     	ds	1
   471   00001C                     pad@i:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x1B
   475   00001C                     	ds	2
   476   00001E                     pad@w:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x1D
   480   00001E                     	ds	2
   481   000020                     dtoa@fp:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x1F
   485   000020                     	ds	2
   486   000022                     dtoa@d:
   487                           	callstack 0
   488                           
   489                           ; 8 bytes @ 0x21
   490   000022                     	ds	8
   491   00002A                     ??_dtoa:
   492                           
   493                           ; 1 bytes @ 0x29
   494   00002A                     	ds	8
   495   000032                     _dtoa$2080:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x31
   499   000032                     	ds	2
   500   000034                     dtoa@p:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x33
   504   000034                     	ds	2
   505   000036                     dtoa@w:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x35
   509   000036                     	ds	2
   510   000038                     dtoa@n:
   511                           	callstack 0
   512                           
   513                           ; 8 bytes @ 0x37
   514   000038                     	ds	8
   515   000040                     dtoa@s:
   516                           	callstack 0
   517                           
   518                           ; 1 bytes @ 0x3F
   519   000040                     	ds	1
   520   000041                     dtoa@i:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x40
   524   000041                     	ds	2
   525   000043                     vfpfcnvrt@fp:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x42
   529   000043                     	ds	2
   530   000045                     vfpfcnvrt@fmt:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x44
   534   000045                     	ds	2
   535   000047                     vfpfcnvrt@ap:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x46
   539   000047                     	ds	2
   540   000049                     ??_vfpfcnvrt:
   541                           
   542                           ; 1 bytes @ 0x48
   543   000049                     	ds	2
   544   00004B                     vfpfcnvrt@convarg:
   545                           	callstack 0
   546                           
   547                           ; 8 bytes @ 0x4A
   548   00004B                     	ds	8
   549   000053                     vfpfcnvrt@cp:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x52
   553   000053                     	ds	2
   554   000055                     vfprintf@cfmt:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x54
   558   000055                     	ds	2
   559   000057                     
   560                           ; 1 bytes @ 0x56
   561 ;;
   562 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   563 ;;
   564 ;; *************** function _main *****************
   565 ;; Defined at:
   566 ;;		line 21 in file "main.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;		None
   569 ;; Auto vars:     Size  Location     Type
   570 ;;  buf            40   31[BANK0 ] unsigned char [40]
   571 ;;  motorR          9   88[BANK0 ] struct DC_motor
   572 ;;  motorL          9   79[BANK0 ] struct DC_motor
   573 ;;  C               2   77[BANK0 ] unsigned int 
   574 ;;  G               2   75[BANK0 ] unsigned int 
   575 ;;  B               2   73[BANK0 ] unsigned int 
   576 ;;  R               2   71[BANK0 ] unsigned int 
   577 ;; Return value:  Size  Location     Type
   578 ;;                  1    wreg      void 
   579 ;; Registers used:
   580 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   587 ;;      Locals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   589 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   590 ;;Total ram usage:       66 bytes
   591 ;; Hardware stack levels required when called: 10
   592 ;; This function calls:
   593 ;;		_I2C_2_Master_Init
   594 ;;		_Interrupts_init
   595 ;;		_color_click_init
   596 ;;		_color_read_Blue
   597 ;;		_color_read_Clear
   598 ;;		_color_read_Green
   599 ;;		_color_read_Red
   600 ;;		_initDCmotorsPWM
   601 ;;		_initUSART4
   602 ;;		_sendStringSerial4
   603 ;;		_sprintf
   604 ;; This function is called by:
   605 ;;		Startup code after reset
   606 ;; This function uses a non-reentrant model
   607 ;;
   608                           
   609                           	psect	text0
   610   0014C8                     __ptext0:
   611                           	callstack 0
   612   0014C8                     _main:
   613                           	callstack 21
   614   0014C8                     
   615                           ;main.c: 23:     initDCmotorsPWM(99);
   616   0014C8  0E00               	movlw	0
   617   0014CA  6E06               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   618   0014CC  0E63               	movlw	99
   619   0014CE  6E05               	movwf	initDCmotorsPWM@PWMperiod^0,c
   620   0014D0  EC3D  F00B         	call	_initDCmotorsPWM	;wreg free
   621   0014D4                     
   622                           ;main.c: 25:     struct DC_motor motorL, motorR;;main.c: 27:     motorL.power=0;
   623   0014D4  0E00               	movlw	0
   624   0014D6  0100               	movlb	0	; () banked
   625   0014D8  6FAF               	movwf	main@motorL& (0+255),b
   626   0014DA                     
   627                           ; BSR set to: 0
   628                           ;main.c: 28:     motorL.direction=1;
   629   0014DA  0E01               	movlw	1
   630   0014DC  6FB0               	movwf	(main@motorL+1)& (0+255),b
   631   0014DE                     
   632                           ; BSR set to: 0
   633                           ;main.c: 29:     motorL.brakemode=1;
   634   0014DE  0E01               	movlw	1
   635   0014E0  6FB1               	movwf	(main@motorL+2)& (0+255),b
   636   0014E2                     
   637                           ; BSR set to: 0
   638                           ;main.c: 30:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   639   0014E2  0EAA               	movlw	170
   640   0014E4  6FB4               	movwf	(main@motorL+5)& (0+255),b
   641   0014E6  0E0F               	movlw	15
   642   0014E8  6FB5               	movwf	(main@motorL+6)& (0+255),b
   643   0014EA                     
   644                           ; BSR set to: 0
   645                           ;main.c: 31:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   646   0014EA  0EA6               	movlw	166
   647   0014EC  6FB6               	movwf	(main@motorL+7)& (0+255),b
   648   0014EE  0E0F               	movlw	15
   649   0014F0  6FB7               	movwf	(main@motorL+8)& (0+255),b
   650   0014F2                     
   651                           ; BSR set to: 0
   652                           ;main.c: 32:     motorL.PWMperiod=99;
   653   0014F2  0E00               	movlw	0
   654   0014F4  6FB3               	movwf	(main@motorL+4)& (0+255),b
   655   0014F6  0E63               	movlw	99
   656   0014F8  6FB2               	movwf	(main@motorL+3)& (0+255),b
   657   0014FA                     
   658                           ; BSR set to: 0
   659                           ;main.c: 34:     motorR.power=0;
   660   0014FA  0E00               	movlw	0
   661   0014FC  6FB8               	movwf	main@motorR& (0+255),b
   662   0014FE                     
   663                           ; BSR set to: 0
   664                           ;main.c: 35:     motorR.direction=1;
   665   0014FE  0E01               	movlw	1
   666   001500  6FB9               	movwf	(main@motorR+1)& (0+255),b
   667   001502                     
   668                           ; BSR set to: 0
   669                           ;main.c: 36:     motorR.brakemode=1;
   670   001502  0E01               	movlw	1
   671   001504  6FBA               	movwf	(main@motorR+2)& (0+255),b
   672   001506                     
   673                           ; BSR set to: 0
   674                           ;main.c: 37:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   675   001506  0E25               	movlw	37
   676   001508  6FBD               	movwf	(main@motorR+5)& (0+255),b
   677   00150A  0E0F               	movlw	15
   678   00150C  6FBE               	movwf	(main@motorR+6)& (0+255),b
   679   00150E                     
   680                           ; BSR set to: 0
   681                           ;main.c: 38:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   682   00150E  0E21               	movlw	33
   683   001510  6FBF               	movwf	(main@motorR+7)& (0+255),b
   684   001512  0E0F               	movlw	15
   685   001514  6FC0               	movwf	(main@motorR+8)& (0+255),b
   686   001516                     
   687                           ; BSR set to: 0
   688                           ;main.c: 39:     motorR.PWMperiod=99;
   689   001516  0E00               	movlw	0
   690   001518  6FBC               	movwf	(main@motorR+4)& (0+255),b
   691   00151A  0E63               	movlw	99
   692   00151C  6FBB               	movwf	(main@motorR+3)& (0+255),b
   693   00151E                     
   694                           ; BSR set to: 0
   695                           ;main.c: 44:     color_click_init();
   696   00151E  EC16  F00D         	call	_color_click_init	;wreg free
   697   001522                     
   698                           ;main.c: 45:     I2C_2_Master_Init();
   699   001522  EC77  F00D         	call	_I2C_2_Master_Init	;wreg free
   700   001526                     
   701                           ;main.c: 47:     initUSART4();
   702   001526  ECB5  F00D         	call	_initUSART4	;wreg free
   703   00152A                     
   704                           ;main.c: 48:     Interrupts_init();
   705   00152A  ECF3  F00D         	call	_Interrupts_init	;wreg free
   706   00152E                     
   707                           ;main.c: 51:     TRISGbits.TRISG1 = 0;
   708   00152E  9287               	bcf	135,1,c	;volatile
   709   001530                     
   710                           ;main.c: 52:     TRISAbits.TRISA4 = 0;
   711   001530  9881               	bcf	129,4,c	;volatile
   712   001532                     
   713                           ;main.c: 53:     TRISFbits.TRISF7 = 0;
   714   001532  9E86               	bcf	134,7,c	;volatile
   715   001534                     
   716                           ;main.c: 55:     LATGbits.LATG1 = 0;
   717   001534  927F               	bcf	127,1,c	;volatile
   718   001536                     
   719                           ;main.c: 56:     LATAbits.LATA4 = 0;
   720   001536  9879               	bcf	121,4,c	;volatile
   721   001538                     
   722                           ;main.c: 57:     LATFbits.LATF7 = 0;
   723   001538  9E7E               	bcf	126,7,c	;volatile
   724   00153A                     
   725                           ;main.c: 61:     unsigned int R = color_read_Red();
   726   00153A  EC13  F00C         	call	_color_read_Red	;wreg free
   727   00153E  C009  F0A7         	movff	?_color_read_Red,main@R
   728   001542  C00A  F0A8         	movff	?_color_read_Red+1,main@R+1
   729   001546                     
   730                           ;main.c: 62:     unsigned int B = color_read_Blue();
   731   001546  EC8B  F00C         	call	_color_read_Blue	;wreg free
   732   00154A  C009  F0A9         	movff	?_color_read_Blue,main@B
   733   00154E  C00A  F0AA         	movff	?_color_read_Blue+1,main@B+1
   734   001552                     
   735                           ;main.c: 63:     unsigned int G = color_read_Green();
   736   001552  EC3B  F00C         	call	_color_read_Green	;wreg free
   737   001556  C009  F0AB         	movff	?_color_read_Green,main@G
   738   00155A  C00A  F0AC         	movff	?_color_read_Green+1,main@G+1
   739   00155E                     
   740                           ;main.c: 64:     unsigned int C = color_read_Clear();
   741   00155E  EC63  F00C         	call	_color_read_Clear	;wreg free
   742   001562  C009  F0AD         	movff	?_color_read_Clear,main@C
   743   001566  C00A  F0AE         	movff	?_color_read_Clear+1,main@C+1
   744   00156A                     
   745                           ;main.c: 66:     char buf[40];;main.c: 67:     sprintf(buf,"%d//%d//%d//%d",R,B,G,C);
   746   00156A  0E7F               	movlw	low main@buf
   747   00156C  0100               	movlb	0	; () banked
   748   00156E  6F66               	movwf	sprintf@s& (0+255),b
   749   001570  0E00               	movlw	high main@buf
   750   001572  6F67               	movwf	(sprintf@s+1)& (0+255),b
   751   001574  0E01               	movlw	low STR_1
   752   001576  6F68               	movwf	sprintf@fmt& (0+255),b
   753   001578  0E0E               	movlw	high STR_1
   754   00157A  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
   755   00157C  C0A7  F06A         	movff	main@R,?_sprintf+4
   756   001580  C0A8  F06B         	movff	main@R+1,?_sprintf+5
   757   001584  C0A9  F06C         	movff	main@B,?_sprintf+6
   758   001588  C0AA  F06D         	movff	main@B+1,?_sprintf+7
   759   00158C  C0AB  F06E         	movff	main@G,?_sprintf+8
   760   001590  C0AC  F06F         	movff	main@G+1,?_sprintf+9
   761   001594  C0AD  F070         	movff	main@C,?_sprintf+10
   762   001598  C0AE  F071         	movff	main@C+1,?_sprintf+11
   763   00159C  ECC2  F00B         	call	_sprintf	;wreg free
   764   0015A0                     
   765                           ;main.c: 69:     sendStringSerial4(buf);
   766   0015A0  0E7F               	movlw	low main@buf
   767   0015A2  6E06               	movwf	sendStringSerial4@string^0,c
   768   0015A4  0E00               	movlw	high main@buf
   769   0015A6  6E07               	movwf	(sendStringSerial4@string+1)^0,c
   770   0015A8  EC49  F00D         	call	_sendStringSerial4	;wreg free
   771   0015AC  EF3B  F000         	goto	start
   772   0015B0                     __end_of_main:
   773                           	callstack 0
   774                           
   775 ;; *************** function _sprintf *****************
   776 ;; Defined at:
   777 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   778 ;; Parameters:    Size  Location     Type
   779 ;;  s               2    6[BANK0 ] PTR unsigned char 
   780 ;;		 -> main@buf(40), 
   781 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
   782 ;;		 -> STR_1(15), 
   783 ;; Auto vars:     Size  Location     Type
   784 ;;  f              11   20[BANK0 ] struct _IO_FILE
   785 ;;  ap              2   18[BANK0 ] PTR void [1]
   786 ;;		 -> ?_sprintf(2), 
   787 ;;  ret             2    0        int 
   788 ;; Return value:  Size  Location     Type
   789 ;;                  2    6[BANK0 ] int 
   790 ;; Registers used:
   791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   797 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   798 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   800 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   801 ;;Total ram usage:       25 bytes
   802 ;; Hardware stack levels used: 1
   803 ;; Hardware stack levels required when called: 9
   804 ;; This function calls:
   805 ;;		_vfprintf
   806 ;; This function is called by:
   807 ;;		_main
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           	psect	text1
   812   001784                     __ptext1:
   813                           	callstack 0
   814   001784                     _sprintf:
   815                           	callstack 21
   816   001784  0E6A               	movlw	low (?_sprintf+4)
   817   001786  0100               	movlb	0	; () banked
   818   001788  6F72               	movwf	sprintf@ap& (0+255),b
   819   00178A  0E00               	movlw	high (?_sprintf+4)
   820   00178C  6F73               	movwf	(sprintf@ap+1)& (0+255),b
   821   00178E  C066  F074         	movff	sprintf@s,sprintf@f
   822   001792  C067  F075         	movff	sprintf@s+1,sprintf@f+1
   823   001796                     
   824                           ; BSR set to: 0
   825   001796  0E00               	movlw	0
   826   001798  6F78               	movwf	(sprintf@f+4)& (0+255),b
   827   00179A  0E00               	movlw	0
   828   00179C  6F77               	movwf	(sprintf@f+3)& (0+255),b
   829   00179E                     
   830                           ; BSR set to: 0
   831   00179E  0E00               	movlw	0
   832   0017A0  6F7E               	movwf	(sprintf@f+10)& (0+255),b
   833   0017A2  0E00               	movlw	0
   834   0017A4  6F7D               	movwf	(sprintf@f+9)& (0+255),b
   835   0017A6                     
   836                           ; BSR set to: 0
   837   0017A6  0E74               	movlw	low sprintf@f
   838   0017A8  6F60               	movwf	vfprintf@fp& (0+255),b
   839   0017AA  0E00               	movlw	high sprintf@f
   840   0017AC  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
   841   0017AE  C068  F062         	movff	sprintf@fmt,vfprintf@fmt
   842   0017B2  C069  F063         	movff	sprintf@fmt+1,vfprintf@fmt+1
   843   0017B6  0E72               	movlw	low sprintf@ap
   844   0017B8  6F64               	movwf	vfprintf@ap& (0+255),b
   845   0017BA  0E00               	movlw	high sprintf@ap
   846   0017BC  6F65               	movwf	(vfprintf@ap+1)& (0+255),b
   847   0017BE  ECEB  F00B         	call	_vfprintf	;wreg free
   848   0017C2  0100               	movlb	0	; () banked
   849   0017C4  5177               	movf	(sprintf@f+3)& (0+255),w,b
   850   0017C6  2566               	addwf	sprintf@s& (0+255),w,b
   851   0017C8  6ED9               	movwf	fsr2l,c
   852   0017CA  5178               	movf	(sprintf@f+4)& (0+255),w,b
   853   0017CC  2167               	addwfc	(sprintf@s+1)& (0+255),w,b
   854   0017CE  6EDA               	movwf	fsr2h,c
   855   0017D0  0E00               	movlw	0
   856   0017D2  6EDF               	movwf	indf2,c
   857   0017D4                     
   858                           ; BSR set to: 0
   859   0017D4  0012               	return		;funcret
   860   0017D6                     __end_of_sprintf:
   861                           	callstack 0
   862                           
   863 ;; *************** function _vfprintf *****************
   864 ;; Defined at:
   865 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
   868 ;;		 -> sprintf@f(11), 
   869 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   870 ;;		 -> STR_1(15), 
   871 ;;  ap              2    4[BANK0 ] PTR PTR void 
   872 ;;		 -> sprintf@ap(2), 
   873 ;; Auto vars:     Size  Location     Type
   874 ;;  cfmt            2   84[COMRAM] PTR unsigned char 
   875 ;;		 -> STR_1(15), 
   876 ;; Return value:  Size  Location     Type
   877 ;;                  2    0[BANK0 ] int 
   878 ;; Registers used:
   879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   885 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   886 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   888 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   889 ;;Total ram usage:        8 bytes
   890 ;; Hardware stack levels used: 1
   891 ;; Hardware stack levels required when called: 8
   892 ;; This function calls:
   893 ;;		_vfpfcnvrt
   894 ;; This function is called by:
   895 ;;		_sprintf
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           	psect	text2
   900   0017D6                     __ptext2:
   901                           	callstack 0
   902   0017D6                     _vfprintf:
   903                           	callstack 21
   904   0017D6                     
   905                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
   906   0017D6  C062  F055         	movff	vfprintf@fmt,vfprintf@cfmt
   907   0017DA  C063  F056         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   908                           
   909                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   910   0017DE  EFFF  F00B         	goto	l2379
   911   0017E2                     l2377:
   912                           
   913                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   914   0017E2  C060  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
   915   0017E6  C061  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   916   0017EA  0E55               	movlw	low vfprintf@cfmt
   917   0017EC  6E45               	movwf	vfpfcnvrt@fmt^0,c
   918   0017EE  0E00               	movlw	high vfprintf@cfmt
   919   0017F0  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
   920   0017F2  C064  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
   921   0017F6  C065  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   922   0017FA  ECBD  F009         	call	_vfpfcnvrt	;wreg free
   923   0017FE                     l2379:
   924                           
   925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   926   0017FE  C055  FFF6         	movff	vfprintf@cfmt,tblptrl
   927   001802  C056  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   928   001806                     	if	0	;tblptru may be non-zero
   929   001806                     	endif
   930   001806                     	if	0	;tblptru may be non-zero
   931   001806                     	endif
   932   001806  0008               	tblrd		*
   933   001808  50F5               	movf	tablat,w,c
   934   00180A  0900               	iorlw	0
   935   00180C  A4D8               	btfss	status,2,c
   936   00180E  EF0B  F00C         	goto	u1481
   937   001812  EF0D  F00C         	goto	u1480
   938   001816                     u1481:
   939   001816  EFF1  F00B         	goto	l2377
   940   00181A                     u1480:
   941   00181A                     
   942                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
   943   00181A  0E00               	movlw	0
   944   00181C  0100               	movlb	0	; () banked
   945   00181E  6F61               	movwf	(?_vfprintf+1)& (0+255),b
   946   001820  0E00               	movlw	0
   947   001822  6F60               	movwf	?_vfprintf& (0+255),b
   948   001824                     
   949                           ; BSR set to: 0
   950   001824  0012               	return		;funcret
   951   001826                     __end_of_vfprintf:
   952                           	callstack 0
   953                           
   954 ;; *************** function _vfpfcnvrt *****************
   955 ;; Defined at:
   956 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
   959 ;;		 -> sprintf@f(11), 
   960 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
   961 ;;		 -> vfprintf@cfmt(2), 
   962 ;;  ap              2   70[COMRAM] PTR PTR void 
   963 ;;		 -> sprintf@ap(2), 
   964 ;; Auto vars:     Size  Location     Type
   965 ;;  convarg         8   74[COMRAM] struct .
   966 ;;  cp              2   82[COMRAM] PTR unsigned char 
   967 ;;		 -> STR_1(15), 
   968 ;;  i               2    0        int 
   969 ;;  done            2    0        int 
   970 ;;  c               1    0        unsigned char 
   971 ;; Return value:  Size  Location     Type
   972 ;;                  1    wreg      void 
   973 ;; Registers used:
   974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   980 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   981 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   982 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   983 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   984 ;;Total ram usage:       18 bytes
   985 ;; Hardware stack levels used: 1
   986 ;; Hardware stack levels required when called: 7
   987 ;; This function calls:
   988 ;;		_dtoa
   989 ;;		_fputc
   990 ;; This function is called by:
   991 ;;		_vfprintf
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995                           	psect	text3
   996   00137A                     __ptext3:
   997                           	callstack 0
   998   00137A                     _vfpfcnvrt:
   999                           	callstack 21
  1000   00137A                     
  1001                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1002   00137A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1003   00137E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1004   001382  CFDE FFF6          	movff	postinc2,tblptrl
  1005   001386  CFDD FFF7          	movff	postdec2,tblptrh
  1006   00138A                     	if	0	;tblptru may be non-zero
  1007   00138A                     	endif
  1008   00138A                     	if	0	;tblptru may be non-zero
  1009   00138A                     	endif
  1010   00138A  0008               	tblrd		*
  1011   00138C  50F5               	movf	tablat,w,c
  1012   00138E  0A25               	xorlw	37
  1013   001390  A4D8               	btfss	status,2,c
  1014   001392  EFCD  F009         	goto	u1451
  1015   001396  EFCF  F009         	goto	u1450
  1016   00139A                     u1451:
  1017   00139A  EF4F  F00A         	goto	l2369
  1018   00139E                     u1450:
  1019   00139E                     
  1020                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1021   00139E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1022   0013A2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1023   0013A6  2ADE               	incf	postinc2,f,c
  1024   0013A8  0E00               	movlw	0
  1025   0013AA  22DD               	addwfc	postdec2,f,c
  1026   0013AC                     
  1027                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1028   0013AC  0E00               	movlw	0
  1029   0013AE  0100               	movlb	0	; () banked
  1030   0013B0  6FD6               	movwf	(_width+1)& (0+255),b
  1031   0013B2  0E00               	movlw	0
  1032   0013B4  6FD5               	movwf	_width& (0+255),b
  1033   0013B6  C0D5  F0D9         	movff	_width,_flags
  1034   0013BA                     
  1035                           ; BSR set to: 0
  1036                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1037   0013BA  69D7               	setf	_prec& (0+255),b
  1038   0013BC  69D8               	setf	(_prec+1)& (0+255),b
  1039   0013BE                     
  1040                           ; BSR set to: 0
  1041                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1042   0013BE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1043   0013C2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1044   0013C6  CFDE F053          	movff	postinc2,vfpfcnvrt@cp
  1045   0013CA  CFDD F054          	movff	postdec2,vfpfcnvrt@cp+1
  1046   0013CE                     
  1047                           ; BSR set to: 0
  1048                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1049   0013CE  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1050   0013D2  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1051   0013D6                     	if	0	;tblptru may be non-zero
  1052   0013D6                     	endif
  1053   0013D6                     	if	0	;tblptru may be non-zero
  1054   0013D6                     	endif
  1055   0013D6  0008               	tblrd		*
  1056   0013D8  50F5               	movf	tablat,w,c
  1057   0013DA  0A64               	xorlw	100
  1058   0013DC  B4D8               	btfsc	status,2,c
  1059   0013DE  EFF3  F009         	goto	u1461
  1060   0013E2  EFF5  F009         	goto	u1460
  1061   0013E6                     u1461:
  1062   0013E6  EF03  F00A         	goto	l2359
  1063   0013EA                     u1460:
  1064   0013EA                     
  1065                           ; BSR set to: 0
  1066   0013EA  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1067   0013EE  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1068   0013F2                     	if	0	;tblptru may be non-zero
  1069   0013F2                     	endif
  1070   0013F2                     	if	0	;tblptru may be non-zero
  1071   0013F2                     	endif
  1072   0013F2  0008               	tblrd		*
  1073   0013F4  50F5               	movf	tablat,w,c
  1074   0013F6  0A69               	xorlw	105
  1075   0013F8  A4D8               	btfss	status,2,c
  1076   0013FA  EF01  F00A         	goto	u1471
  1077   0013FE  EF03  F00A         	goto	u1470
  1078   001402                     u1471:
  1079   001402  EF46  F00A         	goto	l2365
  1080   001406                     u1470:
  1081   001406                     l2359:
  1082                           
  1083                           ; BSR set to: 0
  1084                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1085   001406  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1086   00140A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1087   00140E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1088   001412  0E02               	movlw	2
  1089   001414  26DE               	addwf	postinc2,f,c
  1090   001416  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1091   00141A  0E00               	movlw	0
  1092   00141C  22DD               	addwfc	postdec2,f,c
  1093   00141E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1094   001422  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1095   001426  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg
  1096   00142A  CFDD F04C          	movff	postdec2,vfpfcnvrt@convarg+1
  1097   00142E  0E00               	movlw	0
  1098   001430  BE4C               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1099   001432  0EFF               	movlw	-1
  1100   001434  6E4D               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1101   001436  6E4E               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1102   001438  6E4F               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1103   00143A  6E50               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1104   00143C  6E51               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1105   00143E  6E52               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1106                           
  1107                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1108   001440  0E01               	movlw	1
  1109   001442  2453               	addwf	vfpfcnvrt@cp^0,w,c
  1110   001444  6E49               	movwf	??_vfpfcnvrt^0,c
  1111   001446  0E00               	movlw	0
  1112   001448  2054               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1113   00144A  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1114   00144C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1115   001450  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1116   001454  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  1117   001458  C04A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1118   00145C                     
  1119                           ; BSR set to: 0
  1120                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1121   00145C  C043  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  1122   001460  C044  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1123   001464  C04B  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  1124   001468  C04C  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1125   00146C  C04D  F024         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1126   001470  C04E  F025         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1127   001474  C04F  F026         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1128   001478  C050  F027         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1129   00147C  C051  F028         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1130   001480  C052  F029         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1131   001484  EC09  F007         	call	_dtoa	;wreg free
  1132   001488  EF63  F00A         	goto	l1093
  1133   00148C                     l2365:
  1134                           
  1135                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1136   00148C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1137   001490  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1138   001494  2ADE               	incf	postinc2,f,c
  1139   001496  0E00               	movlw	0
  1140   001498  22DD               	addwfc	postdec2,f,c
  1141   00149A  EF63  F00A         	goto	l1093
  1142   00149E                     l2369:
  1143                           
  1144                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1145   00149E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1146   0014A2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1147   0014A6  CFDE FFF6          	movff	postinc2,tblptrl
  1148   0014AA  CFDD FFF7          	movff	postdec2,tblptrh
  1149   0014AE                     	if	0	;tblptru may be non-zero
  1150   0014AE                     	endif
  1151   0014AE                     	if	0	;tblptru may be non-zero
  1152   0014AE                     	endif
  1153   0014AE  0008               	tblrd		*
  1154   0014B0  50F5               	movf	tablat,w,c
  1155   0014B2  6E05               	movwf	fputc@c^0,c
  1156   0014B4  6A06               	clrf	(fputc@c+1)^0,c
  1157   0014B6  C043  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1158   0014BA  C044  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1159   0014BE  ECD8  F00A         	call	_fputc	;wreg free
  1160   0014C2  EF46  F00A         	goto	l2365
  1161   0014C6                     l1093:
  1162   0014C6  0012               	return		;funcret
  1163   0014C8                     __end_of_vfpfcnvrt:
  1164                           	callstack 0
  1165                           
  1166 ;; *************** function _dtoa *****************
  1167 ;; Defined at:
  1168 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  1171 ;;		 -> sprintf@f(11), 
  1172 ;;  d               8   33[COMRAM] long long 
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;  n               8   55[COMRAM] long long 
  1175 ;;  i               2   64[COMRAM] int 
  1176 ;;  w               2   53[COMRAM] int 
  1177 ;;  p               2   51[COMRAM] int 
  1178 ;;  s               1   63[COMRAM] unsigned char 
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  1    wreg      void 
  1181 ;; Registers used:
  1182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1188 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1189 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1190 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1191 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1192 ;;Total ram usage:       35 bytes
  1193 ;; Hardware stack levels used: 1
  1194 ;; Hardware stack levels required when called: 6
  1195 ;; This function calls:
  1196 ;;		___aodiv
  1197 ;;		___aomod
  1198 ;;		_abs
  1199 ;;		_pad
  1200 ;; This function is called by:
  1201 ;;		_vfpfcnvrt
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205                           	psect	text4
  1206   000E12                     __ptext4:
  1207                           	callstack 0
  1208   000E12                     _dtoa:
  1209                           	callstack 21
  1210   000E12                     
  1211                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1212   000E12  C022  F038         	movff	dtoa@d,dtoa@n
  1213   000E16  C023  F039         	movff	dtoa@d+1,dtoa@n+1
  1214   000E1A  C024  F03A         	movff	dtoa@d+2,dtoa@n+2
  1215   000E1E  C025  F03B         	movff	dtoa@d+3,dtoa@n+3
  1216   000E22  C026  F03C         	movff	dtoa@d+4,dtoa@n+4
  1217   000E26  C027  F03D         	movff	dtoa@d+5,dtoa@n+5
  1218   000E2A  C028  F03E         	movff	dtoa@d+6,dtoa@n+6
  1219   000E2E  C029  F03F         	movff	dtoa@d+7,dtoa@n+7
  1220   000E32                     
  1221                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1222   000E32  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  1223   000E34  EF1E  F007         	goto	u1351
  1224   000E38  EF21  F007         	goto	u1350
  1225   000E3C                     u1351:
  1226   000E3C  0E01               	movlw	1
  1227   000E3E  EF22  F007         	goto	u1360
  1228   000E42                     u1350:
  1229   000E42  0E00               	movlw	0
  1230   000E44                     u1360:
  1231   000E44  6E40               	movwf	dtoa@s^0,c
  1232   000E46                     
  1233                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1234   000E46  5040               	movf	dtoa@s^0,w,c
  1235   000E48  B4D8               	btfsc	status,2,c
  1236   000E4A  EF29  F007         	goto	u1371
  1237   000E4E  EF2B  F007         	goto	u1370
  1238   000E52                     u1371:
  1239   000E52  EF3B  F007         	goto	l2301
  1240   000E56                     u1370:
  1241   000E56                     
  1242                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1243   000E56  1E3F               	comf	(dtoa@n+7)^0,f,c
  1244   000E58  1E3E               	comf	(dtoa@n+6)^0,f,c
  1245   000E5A  1E3D               	comf	(dtoa@n+5)^0,f,c
  1246   000E5C  1E3C               	comf	(dtoa@n+4)^0,f,c
  1247   000E5E  1E3B               	comf	(dtoa@n+3)^0,f,c
  1248   000E60  1E3A               	comf	(dtoa@n+2)^0,f,c
  1249   000E62  1E39               	comf	(dtoa@n+1)^0,f,c
  1250   000E64  6C38               	negf	dtoa@n^0,c
  1251   000E66  0E00               	movlw	0
  1252   000E68  2239               	addwfc	(dtoa@n+1)^0,f,c
  1253   000E6A  223A               	addwfc	(dtoa@n+2)^0,f,c
  1254   000E6C  223B               	addwfc	(dtoa@n+3)^0,f,c
  1255   000E6E  223C               	addwfc	(dtoa@n+4)^0,f,c
  1256   000E70  223D               	addwfc	(dtoa@n+5)^0,f,c
  1257   000E72  223E               	addwfc	(dtoa@n+6)^0,f,c
  1258   000E74  223F               	addwfc	(dtoa@n+7)^0,f,c
  1259   000E76                     l2301:
  1260                           
  1261                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1262   000E76  0100               	movlb	0	; () banked
  1263   000E78  BFD8               	btfsc	(_prec+1)& (0+255),7,b
  1264   000E7A  EF49  F007         	goto	u1380
  1265   000E7E  51D8               	movf	(_prec+1)& (0+255),w,b
  1266   000E80  E106               	bnz	u1381
  1267   000E82  05D7               	decf	_prec& (0+255),w,b
  1268   000E84  B0D8               	btfsc	status,0,c
  1269   000E86  EF47  F007         	goto	u1381
  1270   000E8A  EF49  F007         	goto	u1380
  1271   000E8E                     u1381:
  1272   000E8E  EF4F  F007         	goto	l1072
  1273   000E92                     u1380:
  1274   000E92                     
  1275                           ; BSR set to: 0
  1276   000E92  0E00               	movlw	0
  1277   000E94  6E35               	movwf	(dtoa@p+1)^0,c
  1278   000E96  0E01               	movlw	1
  1279   000E98  6E34               	movwf	dtoa@p^0,c
  1280   000E9A  EF53  F007         	goto	l1074
  1281   000E9E                     l1072:
  1282                           
  1283                           ; BSR set to: 0
  1284   000E9E  C0D7  F034         	movff	_prec,dtoa@p
  1285   000EA2  C0D8  F035         	movff	_prec+1,dtoa@p+1
  1286   000EA6                     l1074:
  1287                           
  1288                           ; BSR set to: 0
  1289                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1290   000EA6  C0D5  F036         	movff	_width,dtoa@w
  1291   000EAA  C0D6  F037         	movff	_width+1,dtoa@w+1
  1292   000EAE                     
  1293                           ; BSR set to: 0
  1294                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1295   000EAE  5040               	movf	dtoa@s^0,w,c
  1296   000EB0  B4D8               	btfsc	status,2,c
  1297   000EB2  EF5D  F007         	goto	u1391
  1298   000EB6  EF5F  F007         	goto	u1390
  1299   000EBA                     u1391:
  1300   000EBA  EF76  F007         	goto	l1075
  1301   000EBE                     u1390:
  1302   000EBE                     
  1303                           ; BSR set to: 0
  1304                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1305   000EBE  0636               	decf	dtoa@w^0,f,c
  1306   000EC0  A0D8               	btfss	status,0,c
  1307   000EC2  0637               	decf	(dtoa@w+1)^0,f,c
  1308   000EC4                     
  1309                           ; BSR set to: 0
  1310                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1311   000EC4  5040               	movf	dtoa@s^0,w,c
  1312   000EC6  A4D8               	btfss	status,2,c
  1313   000EC8  EF68  F007         	goto	u1401
  1314   000ECC  EF6A  F007         	goto	u1400
  1315   000ED0                     u1401:
  1316   000ED0  EF70  F007         	goto	l2313
  1317   000ED4                     u1400:
  1318   000ED4                     
  1319                           ; BSR set to: 0
  1320   000ED4  0E00               	movlw	0
  1321   000ED6  6E33               	movwf	(_dtoa$2080+1)^0,c
  1322   000ED8  0E2B               	movlw	43
  1323   000EDA  6E32               	movwf	_dtoa$2080^0,c
  1324   000EDC  EF74  F007         	goto	l2315
  1325   000EE0                     l2313:
  1326                           
  1327                           ; BSR set to: 0
  1328   000EE0  0E00               	movlw	0
  1329   000EE2  6E33               	movwf	(_dtoa$2080+1)^0,c
  1330   000EE4  0E2D               	movlw	45
  1331   000EE6  6E32               	movwf	_dtoa$2080^0,c
  1332   000EE8                     l2315:
  1333                           
  1334                           ; BSR set to: 0
  1335   000EE8  C032  F040         	movff	_dtoa$2080,dtoa@s
  1336   000EEC                     l1075:
  1337                           
  1338                           ; BSR set to: 0
  1339                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1340   000EEC  0E00               	movlw	0
  1341   000EEE  6E42               	movwf	(dtoa@i+1)^0,c
  1342   000EF0  0E1F               	movlw	31
  1343   000EF2  6E41               	movwf	dtoa@i^0,c
  1344   000EF4                     
  1345                           ; BSR set to: 0
  1346                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1347   000EF4  0E00               	movlw	0
  1348   000EF6  6FF9               	movwf	(_dbuf+31)& (0+255),b
  1349                           
  1350                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1351   000EF8  EFFA  F007         	goto	l2329
  1352   000EFC                     l2319:
  1353                           
  1354                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1355   000EFC  0641               	decf	dtoa@i^0,f,c
  1356   000EFE  A0D8               	btfss	status,0,c
  1357   000F00  0642               	decf	(dtoa@i+1)^0,f,c
  1358   000F02                     
  1359                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1360   000F02  0EDA               	movlw	low _dbuf
  1361   000F04  2441               	addwf	dtoa@i^0,w,c
  1362   000F06  6ED9               	movwf	fsr2l,c
  1363   000F08  0E00               	movlw	high _dbuf
  1364   000F0A  2042               	addwfc	(dtoa@i+1)^0,w,c
  1365   000F0C  6EDA               	movwf	fsr2h,c
  1366   000F0E  C038  F005         	movff	dtoa@n,___aomod@dividend
  1367   000F12  C039  F006         	movff	dtoa@n+1,___aomod@dividend+1
  1368   000F16  C03A  F007         	movff	dtoa@n+2,___aomod@dividend+2
  1369   000F1A  C03B  F008         	movff	dtoa@n+3,___aomod@dividend+3
  1370   000F1E  C03C  F009         	movff	dtoa@n+4,___aomod@dividend+4
  1371   000F22  C03D  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  1372   000F26  C03E  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  1373   000F2A  C03F  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  1374   000F2E  0E0A               	movlw	10
  1375   000F30  6E0D               	movwf	___aomod@divisor^0,c
  1376   000F32  0E00               	movlw	0
  1377   000F34  6E0E               	movwf	(___aomod@divisor+1)^0,c
  1378   000F36  0E00               	movlw	0
  1379   000F38  6E0F               	movwf	(___aomod@divisor+2)^0,c
  1380   000F3A  0E00               	movlw	0
  1381   000F3C  6E10               	movwf	(___aomod@divisor+3)^0,c
  1382   000F3E  0E00               	movlw	0
  1383   000F40  6E11               	movwf	(___aomod@divisor+4)^0,c
  1384   000F42  0E00               	movlw	0
  1385   000F44  6E12               	movwf	(___aomod@divisor+5)^0,c
  1386   000F46  0E00               	movlw	0
  1387   000F48  6E13               	movwf	(___aomod@divisor+6)^0,c
  1388   000F4A  0E00               	movlw	0
  1389   000F4C  6E14               	movwf	(___aomod@divisor+7)^0,c
  1390   000F4E  EC0B  F009         	call	___aomod	;wreg free
  1391   000F52  C005  F02A         	movff	?___aomod,??_dtoa
  1392   000F56  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  1393   000F5A  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  1394   000F5E  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  1395   000F62  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  1396   000F66  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  1397   000F6A  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  1398   000F6E  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  1399   000F72  C02A  F017         	movff	??_dtoa,abs@a
  1400   000F76  C02B  F018         	movff	??_dtoa+1,abs@a+1
  1401   000F7A  ECF6  F00C         	call	_abs	;wreg free
  1402   000F7E  5017               	movf	?_abs^0,w,c
  1403   000F80  0F30               	addlw	48
  1404   000F82  6EDF               	movwf	indf2,c
  1405   000F84                     
  1406                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1407   000F84  0634               	decf	dtoa@p^0,f,c
  1408   000F86  A0D8               	btfss	status,0,c
  1409   000F88  0635               	decf	(dtoa@p+1)^0,f,c
  1410   000F8A                     
  1411                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1412   000F8A  0636               	decf	dtoa@w^0,f,c
  1413   000F8C  A0D8               	btfss	status,0,c
  1414   000F8E  0637               	decf	(dtoa@w+1)^0,f,c
  1415   000F90                     
  1416                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1417   000F90  C038  F005         	movff	dtoa@n,___aodiv@dividend
  1418   000F94  C039  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  1419   000F98  C03A  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  1420   000F9C  C03B  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  1421   000FA0  C03C  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  1422   000FA4  C03D  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  1423   000FA8  C03E  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  1424   000FAC  C03F  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  1425   000FB0  0E0A               	movlw	10
  1426   000FB2  6E0D               	movwf	___aodiv@divisor^0,c
  1427   000FB4  0E00               	movlw	0
  1428   000FB6  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  1429   000FB8  0E00               	movlw	0
  1430   000FBA  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  1431   000FBC  0E00               	movlw	0
  1432   000FBE  6E10               	movwf	(___aodiv@divisor+3)^0,c
  1433   000FC0  0E00               	movlw	0
  1434   000FC2  6E11               	movwf	(___aodiv@divisor+4)^0,c
  1435   000FC4  0E00               	movlw	0
  1436   000FC6  6E12               	movwf	(___aodiv@divisor+5)^0,c
  1437   000FC8  0E00               	movlw	0
  1438   000FCA  6E13               	movwf	(___aodiv@divisor+6)^0,c
  1439   000FCC  0E00               	movlw	0
  1440   000FCE  6E14               	movwf	(___aodiv@divisor+7)^0,c
  1441   000FD0  EC47  F008         	call	___aodiv	;wreg free
  1442   000FD4  C005  F038         	movff	?___aodiv,dtoa@n
  1443   000FD8  C006  F039         	movff	?___aodiv+1,dtoa@n+1
  1444   000FDC  C007  F03A         	movff	?___aodiv+2,dtoa@n+2
  1445   000FE0  C008  F03B         	movff	?___aodiv+3,dtoa@n+3
  1446   000FE4  C009  F03C         	movff	?___aodiv+4,dtoa@n+4
  1447   000FE8  C00A  F03D         	movff	?___aodiv+5,dtoa@n+5
  1448   000FEC  C00B  F03E         	movff	?___aodiv+6,dtoa@n+6
  1449   000FF0  C00C  F03F         	movff	?___aodiv+7,dtoa@n+7
  1450   000FF4                     l2329:
  1451                           
  1452                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1453   000FF4  BE42               	btfsc	(dtoa@i+1)^0,7,c
  1454   000FF6  EF05  F008         	goto	u1411
  1455   000FFA  5042               	movf	(dtoa@i+1)^0,w,c
  1456   000FFC  E108               	bnz	u1410
  1457   000FFE  0441               	decf	dtoa@i^0,w,c
  1458   001000  A0D8               	btfss	status,0,c
  1459   001002  EF05  F008         	goto	u1411
  1460   001006  EF07  F008         	goto	u1410
  1461   00100A                     u1411:
  1462   00100A  EF23  F008         	goto	l2335
  1463   00100E                     u1410:
  1464   00100E  5038               	movf	dtoa@n^0,w,c
  1465   001010  1039               	iorwf	(dtoa@n+1)^0,w,c
  1466   001012  103A               	iorwf	(dtoa@n+2)^0,w,c
  1467   001014  103B               	iorwf	(dtoa@n+3)^0,w,c
  1468   001016  103C               	iorwf	(dtoa@n+4)^0,w,c
  1469   001018  103D               	iorwf	(dtoa@n+5)^0,w,c
  1470   00101A  103E               	iorwf	(dtoa@n+6)^0,w,c
  1471   00101C  103F               	iorwf	(dtoa@n+7)^0,w,c
  1472   00101E  A4D8               	btfss	status,2,c
  1473   001020  EF14  F008         	goto	u1421
  1474   001024  EF16  F008         	goto	u1420
  1475   001028                     u1421:
  1476   001028  EF7E  F007         	goto	l2319
  1477   00102C                     u1420:
  1478   00102C  BE35               	btfsc	(dtoa@p+1)^0,7,c
  1479   00102E  EF23  F008         	goto	u1430
  1480   001032  5035               	movf	(dtoa@p+1)^0,w,c
  1481   001034  E106               	bnz	u1431
  1482   001036  0434               	decf	dtoa@p^0,w,c
  1483   001038  B0D8               	btfsc	status,0,c
  1484   00103A  EF21  F008         	goto	u1431
  1485   00103E  EF23  F008         	goto	u1430
  1486   001042                     u1431:
  1487   001042  EF7E  F007         	goto	l2319
  1488   001046                     u1430:
  1489   001046                     l2335:
  1490                           
  1491                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1492   001046  5040               	movf	dtoa@s^0,w,c
  1493   001048  B4D8               	btfsc	status,2,c
  1494   00104A  EF29  F008         	goto	u1441
  1495   00104E  EF2B  F008         	goto	u1440
  1496   001052                     u1441:
  1497   001052  EF36  F008         	goto	l2341
  1498   001056                     u1440:
  1499   001056                     
  1500                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1501   001056  0641               	decf	dtoa@i^0,f,c
  1502   001058  A0D8               	btfss	status,0,c
  1503   00105A  0642               	decf	(dtoa@i+1)^0,f,c
  1504   00105C                     
  1505                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1506   00105C  0EDA               	movlw	low _dbuf
  1507   00105E  2441               	addwf	dtoa@i^0,w,c
  1508   001060  6ED9               	movwf	fsr2l,c
  1509   001062  0E00               	movlw	high _dbuf
  1510   001064  2042               	addwfc	(dtoa@i+1)^0,w,c
  1511   001066  6EDA               	movwf	fsr2h,c
  1512   001068  C040  FFDF         	movff	dtoa@s,indf2
  1513   00106C                     l2341:
  1514                           
  1515                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1516   00106C  C020  F015         	movff	dtoa@fp,pad@fp
  1517   001070  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  1518   001074  0EDA               	movlw	low _dbuf
  1519   001076  2441               	addwf	dtoa@i^0,w,c
  1520   001078  6E17               	movwf	pad@buf^0,c
  1521   00107A  0E00               	movlw	high _dbuf
  1522   00107C  2042               	addwfc	(dtoa@i+1)^0,w,c
  1523   00107E  6E18               	movwf	(pad@buf+1)^0,c
  1524   001080  C036  F019         	movff	dtoa@w,pad@p
  1525   001084  C037  F01A         	movff	dtoa@w+1,pad@p+1
  1526   001088  EC85  F00B         	call	_pad	;wreg free
  1527   00108C  0012               	return		;funcret
  1528   00108E                     __end_of_dtoa:
  1529                           	callstack 0
  1530                           
  1531 ;; *************** function _pad *****************
  1532 ;; Defined at:
  1533 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  1536 ;;		 -> sprintf@f(11), 
  1537 ;;  buf             2   22[COMRAM] PTR unsigned char 
  1538 ;;		 -> dbuf(32), 
  1539 ;;  p               2   24[COMRAM] int 
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;  w               2   29[COMRAM] int 
  1542 ;;  i               2   27[COMRAM] int 
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1552 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1553 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1554 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1555 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1556 ;;Total ram usage:       11 bytes
  1557 ;; Hardware stack levels used: 1
  1558 ;; Hardware stack levels required when called: 5
  1559 ;; This function calls:
  1560 ;;		_fputc
  1561 ;;		_fputs
  1562 ;; This function is called by:
  1563 ;;		_dtoa
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           	psect	text5
  1568   00170A                     __ptext5:
  1569                           	callstack 0
  1570   00170A                     _pad:
  1571                           	callstack 21
  1572   00170A                     
  1573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1574   00170A  BE1A               	btfsc	(pad@p+1)^0,7,c
  1575   00170C  EF8A  F00B         	goto	u1321
  1576   001710  EF8C  F00B         	goto	u1320
  1577   001714                     u1321:
  1578   001714  EF92  F00B         	goto	l2279
  1579   001718                     u1320:
  1580   001718  C019  F01E         	movff	pad@p,pad@w
  1581   00171C  C01A  F01F         	movff	pad@p+1,pad@w+1
  1582   001720  EF96  F00B         	goto	l1063
  1583   001724                     l2279:
  1584   001724  0E00               	movlw	0
  1585   001726  6E1F               	movwf	(pad@w+1)^0,c
  1586   001728  0E00               	movlw	0
  1587   00172A  6E1E               	movwf	pad@w^0,c
  1588   00172C                     l1063:
  1589                           
  1590                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1591   00172C  0E00               	movlw	0
  1592   00172E  6E1D               	movwf	(pad@i+1)^0,c
  1593   001730  0E00               	movlw	0
  1594   001732  6E1C               	movwf	pad@i^0,c
  1595                           
  1596                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1597   001734  EFA8  F00B         	goto	l2285
  1598   001738                     l2281:
  1599                           
  1600                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1601   001738  0E00               	movlw	0
  1602   00173A  6E06               	movwf	(fputc@c+1)^0,c
  1603   00173C  0E20               	movlw	32
  1604   00173E  6E05               	movwf	fputc@c^0,c
  1605   001740  C015  F007         	movff	pad@fp,fputc@fp
  1606   001744  C016  F008         	movff	pad@fp+1,fputc@fp+1
  1607   001748  ECD8  F00A         	call	_fputc	;wreg free
  1608   00174C                     
  1609                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1610   00174C  4A1C               	infsnz	pad@i^0,f,c
  1611   00174E  2A1D               	incf	(pad@i+1)^0,f,c
  1612   001750                     l2285:
  1613                           
  1614                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1615   001750  501E               	movf	pad@w^0,w,c
  1616   001752  5C1C               	subwf	pad@i^0,w,c
  1617   001754  501D               	movf	(pad@i+1)^0,w,c
  1618   001756  0A80               	xorlw	128
  1619   001758  6E1B               	movwf	??_pad^0,c
  1620   00175A  501F               	movf	(pad@w+1)^0,w,c
  1621   00175C  0A80               	xorlw	128
  1622   00175E  581B               	subwfb	??_pad^0,w,c
  1623   001760  A0D8               	btfss	status,0,c
  1624   001762  EFB5  F00B         	goto	u1331
  1625   001766  EFB7  F00B         	goto	u1330
  1626   00176A                     u1331:
  1627   00176A  EF9C  F00B         	goto	l2281
  1628   00176E                     u1330:
  1629   00176E                     
  1630                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1631   00176E  C017  F00E         	movff	pad@buf,fputs@s
  1632   001772  C018  F00F         	movff	pad@buf+1,fputs@s+1
  1633   001776  C015  F010         	movff	pad@fp,fputs@fp
  1634   00177A  C016  F011         	movff	pad@fp+1,fputs@fp+1
  1635   00177E  ECB3  F00C         	call	_fputs	;wreg free
  1636   001782  0012               	return		;funcret
  1637   001784                     __end_of_pad:
  1638                           	callstack 0
  1639                           
  1640 ;; *************** function _fputs *****************
  1641 ;; Defined at:
  1642 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;  s               2   13[COMRAM] PTR const unsigned char 
  1645 ;;		 -> dbuf(32), 
  1646 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1647 ;;		 -> sprintf@f(11), 
  1648 ;; Auto vars:     Size  Location     Type
  1649 ;;  i               2   18[COMRAM] int 
  1650 ;;  c               1   17[COMRAM] unsigned char 
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  2   13[COMRAM] int 
  1653 ;; Registers used:
  1654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1660 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1661 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1663 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1664 ;;Total ram usage:        7 bytes
  1665 ;; Hardware stack levels used: 1
  1666 ;; Hardware stack levels required when called: 4
  1667 ;; This function calls:
  1668 ;;		_fputc
  1669 ;; This function is called by:
  1670 ;;		_pad
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           	psect	text6
  1675   001966                     __ptext6:
  1676                           	callstack 0
  1677   001966                     _fputs:
  1678                           	callstack 21
  1679   001966  0E00               	movlw	0
  1680   001968  6E14               	movwf	(fputs@i+1)^0,c
  1681   00196A  0E00               	movlw	0
  1682   00196C  6E13               	movwf	fputs@i^0,c
  1683   00196E  EFC4  F00C         	goto	l2193
  1684   001972                     l2189:
  1685   001972  C012  F005         	movff	fputs@c,fputc@c
  1686   001976  6A06               	clrf	(fputc@c+1)^0,c
  1687   001978  C010  F007         	movff	fputs@fp,fputc@fp
  1688   00197C  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  1689   001980  ECD8  F00A         	call	_fputc	;wreg free
  1690   001984  4A13               	infsnz	fputs@i^0,f,c
  1691   001986  2A14               	incf	(fputs@i+1)^0,f,c
  1692   001988                     l2193:
  1693   001988  5013               	movf	fputs@i^0,w,c
  1694   00198A  240E               	addwf	fputs@s^0,w,c
  1695   00198C  6ED9               	movwf	fsr2l,c
  1696   00198E  5014               	movf	(fputs@i+1)^0,w,c
  1697   001990  200F               	addwfc	(fputs@s+1)^0,w,c
  1698   001992  6EDA               	movwf	fsr2h,c
  1699   001994  50DF               	movf	indf2,w,c
  1700   001996  6E12               	movwf	fputs@c^0,c
  1701   001998  5012               	movf	fputs@c^0,w,c
  1702   00199A  A4D8               	btfss	status,2,c
  1703   00199C  EFD2  F00C         	goto	u1181
  1704   0019A0  EFD4  F00C         	goto	u1180
  1705   0019A4                     u1181:
  1706   0019A4  EFB9  F00C         	goto	l2189
  1707   0019A8                     u1180:
  1708   0019A8  0012               	return		;funcret
  1709   0019AA                     __end_of_fputs:
  1710                           	callstack 0
  1711                           
  1712 ;; *************** function _fputc *****************
  1713 ;; Defined at:
  1714 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;  c               2    4[COMRAM] int 
  1717 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  1718 ;;		 -> sprintf@f(11), 
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;		None
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  2    4[COMRAM] int 
  1723 ;; Registers used:
  1724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1730 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1732 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1733 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1734 ;;Total ram usage:        9 bytes
  1735 ;; Hardware stack levels used: 1
  1736 ;; Hardware stack levels required when called: 3
  1737 ;; This function calls:
  1738 ;;		_putch
  1739 ;; This function is called by:
  1740 ;;		_pad
  1741 ;;		_vfpfcnvrt
  1742 ;;		_fputs
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746                           	psect	text7
  1747   0015B0                     __ptext7:
  1748                           	callstack 0
  1749   0015B0                     _fputc:
  1750                           	callstack 24
  1751   0015B0  5007               	movf	fputc@fp^0,w,c
  1752   0015B2  1008               	iorwf	(fputc@fp+1)^0,w,c
  1753   0015B4  B4D8               	btfsc	status,2,c
  1754   0015B6  EFDF  F00A         	goto	u1141
  1755   0015BA  EFE1  F00A         	goto	u1140
  1756   0015BE                     u1141:
  1757   0015BE  EFEA  F00A         	goto	l2177
  1758   0015C2                     u1140:
  1759   0015C2  5007               	movf	fputc@fp^0,w,c
  1760   0015C4  1008               	iorwf	(fputc@fp+1)^0,w,c
  1761   0015C6  A4D8               	btfss	status,2,c
  1762   0015C8  EFE8  F00A         	goto	u1151
  1763   0015CC  EFEA  F00A         	goto	u1150
  1764   0015D0                     u1151:
  1765   0015D0  EFEF  F00A         	goto	l2179
  1766   0015D4                     u1150:
  1767   0015D4                     l2177:
  1768   0015D4  5005               	movf	fputc@c^0,w,c
  1769   0015D6  EC08  F00E         	call	_putch
  1770   0015DA  EF3C  F00B         	goto	l1118
  1771   0015DE                     l2179:
  1772   0015DE  EE20 F009          	lfsr	2,9
  1773   0015E2  5007               	movf	fputc@fp^0,w,c
  1774   0015E4  26D9               	addwf	fsr2l,f,c
  1775   0015E6  5008               	movf	(fputc@fp+1)^0,w,c
  1776   0015E8  22DA               	addwfc	fsr2h,f,c
  1777   0015EA  50DE               	movf	postinc2,w,c
  1778   0015EC  10DE               	iorwf	postinc2,w,c
  1779   0015EE  B4D8               	btfsc	status,2,c
  1780   0015F0  EFFC  F00A         	goto	u1161
  1781   0015F4  EFFE  F00A         	goto	u1160
  1782   0015F8                     u1161:
  1783   0015F8  EF19  F00B         	goto	l2183
  1784   0015FC                     u1160:
  1785   0015FC  EE20 F009          	lfsr	2,9
  1786   001600  5007               	movf	fputc@fp^0,w,c
  1787   001602  26D9               	addwf	fsr2l,f,c
  1788   001604  5008               	movf	(fputc@fp+1)^0,w,c
  1789   001606  22DA               	addwfc	fsr2h,f,c
  1790   001608  EE10 F003          	lfsr	1,3
  1791   00160C  5007               	movf	fputc@fp^0,w,c
  1792   00160E  26E1               	addwf	fsr1l,f,c
  1793   001610  5008               	movf	(fputc@fp+1)^0,w,c
  1794   001612  22E2               	addwfc	fsr1h,f,c
  1795   001614  50DE               	movf	postinc2,w,c
  1796   001616  5CE6               	subwf	postinc1,w,c
  1797   001618  50E6               	movf	postinc1,w,c
  1798   00161A  0A80               	xorlw	128
  1799   00161C  6E0D               	movwf	(??_fputc+4)^0,c
  1800   00161E  50DE               	movf	postinc2,w,c
  1801   001620  0A80               	xorlw	128
  1802   001622  580D               	subwfb	(??_fputc+4)^0,w,c
  1803   001624  B0D8               	btfsc	status,0,c
  1804   001626  EF17  F00B         	goto	u1171
  1805   00162A  EF19  F00B         	goto	u1170
  1806   00162E                     u1171:
  1807   00162E  EF3C  F00B         	goto	l1118
  1808   001632                     u1170:
  1809   001632                     l2183:
  1810   001632  EE20 F003          	lfsr	2,3
  1811   001636  5007               	movf	fputc@fp^0,w,c
  1812   001638  26D9               	addwf	fsr2l,f,c
  1813   00163A  5008               	movf	(fputc@fp+1)^0,w,c
  1814   00163C  22DA               	addwfc	fsr2h,f,c
  1815   00163E  CFDE F009          	movff	postinc2,??_fputc
  1816   001642  CFDD F00A          	movff	postdec2,??_fputc+1
  1817   001646  C007  FFD9         	movff	fputc@fp,fsr2l
  1818   00164A  C008  FFDA         	movff	fputc@fp+1,fsr2h
  1819   00164E  CFDE F00B          	movff	postinc2,??_fputc+2
  1820   001652  CFDD F00C          	movff	postdec2,??_fputc+3
  1821   001656  5009               	movf	??_fputc^0,w,c
  1822   001658  240B               	addwf	(??_fputc+2)^0,w,c
  1823   00165A  6ED9               	movwf	fsr2l,c
  1824   00165C  500A               	movf	(??_fputc+1)^0,w,c
  1825   00165E  200C               	addwfc	(??_fputc+3)^0,w,c
  1826   001660  6EDA               	movwf	fsr2h,c
  1827   001662  C005  FFDF         	movff	fputc@c,indf2
  1828   001666  EE20 F003          	lfsr	2,3
  1829   00166A  5007               	movf	fputc@fp^0,w,c
  1830   00166C  26D9               	addwf	fsr2l,f,c
  1831   00166E  5008               	movf	(fputc@fp+1)^0,w,c
  1832   001670  22DA               	addwfc	fsr2h,f,c
  1833   001672  2ADE               	incf	postinc2,f,c
  1834   001674  0E00               	movlw	0
  1835   001676  22DD               	addwfc	postdec2,f,c
  1836   001678                     l1118:
  1837   001678  0012               	return		;funcret
  1838   00167A                     __end_of_fputc:
  1839                           	callstack 0
  1840                           
  1841 ;; *************** function _putch *****************
  1842 ;; Defined at:
  1843 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;  c               1    wreg     unsigned char 
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;  c               1    0[COMRAM] unsigned char 
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      void 
  1850 ;; Registers used:
  1851 ;;		wreg
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1861 ;;Total ram usage:        0 bytes
  1862 ;; Hardware stack levels used: 1
  1863 ;; Hardware stack levels required when called: 2
  1864 ;; This function calls:
  1865 ;;		Nothing
  1866 ;; This function is called by:
  1867 ;;		_fputc
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           	psect	text8
  1872   001C10                     __ptext8:
  1873                           	callstack 0
  1874   001C10                     _putch:
  1875                           	callstack 24
  1876   001C10  0012               	return		;funcret
  1877   001C12                     __end_of_putch:
  1878                           	callstack 0
  1879                           
  1880 ;; *************** function _abs *****************
  1881 ;; Defined at:
  1882 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;  a               2   22[COMRAM] int 
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;		None
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  2   22[COMRAM] int 
  1889 ;; Registers used:
  1890 ;;		wreg, status,2, status,0
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1896 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1898 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1899 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1900 ;;Total ram usage:        4 bytes
  1901 ;; Hardware stack levels used: 1
  1902 ;; Hardware stack levels required when called: 2
  1903 ;; This function calls:
  1904 ;;		Nothing
  1905 ;; This function is called by:
  1906 ;;		_dtoa
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           	psect	text9
  1911   0019EC                     __ptext9:
  1912                           	callstack 0
  1913   0019EC                     _abs:
  1914                           	callstack 24
  1915   0019EC  BE18               	btfsc	(abs@a+1)^0,7,c
  1916   0019EE  EF03  F00D         	goto	u1340
  1917   0019F2  5018               	movf	(abs@a+1)^0,w,c
  1918   0019F4  E106               	bnz	u1341
  1919   0019F6  0417               	decf	abs@a^0,w,c
  1920   0019F8  B0D8               	btfsc	status,0,c
  1921   0019FA  EF01  F00D         	goto	u1341
  1922   0019FE  EF03  F00D         	goto	u1340
  1923   001A02                     u1341:
  1924   001A02  EF11  F00D         	goto	l1103
  1925   001A06                     u1340:
  1926   001A06  C017  F019         	movff	abs@a,??_abs
  1927   001A0A  C018  F01A         	movff	abs@a+1,??_abs+1
  1928   001A0E  1E19               	comf	??_abs^0,f,c
  1929   001A10  1E1A               	comf	(??_abs+1)^0,f,c
  1930   001A12  4A19               	infsnz	??_abs^0,f,c
  1931   001A14  2A1A               	incf	(??_abs+1)^0,f,c
  1932   001A16  C019  F017         	movff	??_abs,?_abs
  1933   001A1A  C01A  F018         	movff	??_abs+1,?_abs+1
  1934   001A1E  EF15  F00D         	goto	l1106
  1935   001A22                     l1103:
  1936   001A22  C017  F017         	movff	abs@a,?_abs
  1937   001A26  C018  F018         	movff	abs@a+1,?_abs+1
  1938   001A2A                     l1106:
  1939   001A2A  0012               	return		;funcret
  1940   001A2C                     __end_of_abs:
  1941                           	callstack 0
  1942                           
  1943 ;; *************** function ___aomod *****************
  1944 ;; Defined at:
  1945 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;  dividend        8    4[COMRAM] long long 
  1948 ;;  divisor         8   12[COMRAM] long long 
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;  sign            1   21[COMRAM] unsigned char 
  1951 ;;  counter         1   20[COMRAM] unsigned char 
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  8    4[COMRAM] long long 
  1954 ;; Registers used:
  1955 ;;		wreg, status,2, status,0
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1961 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1962 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1964 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1965 ;;Total ram usage:       18 bytes
  1966 ;; Hardware stack levels used: 1
  1967 ;; Hardware stack levels required when called: 2
  1968 ;; This function calls:
  1969 ;;		Nothing
  1970 ;; This function is called by:
  1971 ;;		_dtoa
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           	psect	text10
  1976   001216                     __ptext10:
  1977                           	callstack 0
  1978   001216                     ___aomod:
  1979                           	callstack 24
  1980   001216  0E00               	movlw	0
  1981   001218  6E16               	movwf	___aomod@sign^0,c
  1982   00121A  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  1983   00121C  EF14  F009         	goto	u1260
  1984   001220  EF12  F009         	goto	u1261
  1985   001224                     u1261:
  1986   001224  EF26  F009         	goto	l2247
  1987   001228                     u1260:
  1988   001228  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  1989   00122A  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  1990   00122C  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  1991   00122E  1E09               	comf	(___aomod@dividend+4)^0,f,c
  1992   001230  1E08               	comf	(___aomod@dividend+3)^0,f,c
  1993   001232  1E07               	comf	(___aomod@dividend+2)^0,f,c
  1994   001234  1E06               	comf	(___aomod@dividend+1)^0,f,c
  1995   001236  6C05               	negf	___aomod@dividend^0,c
  1996   001238  0E00               	movlw	0
  1997   00123A  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  1998   00123C  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  1999   00123E  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2000   001240  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2001   001242  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2002   001244  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2003   001246  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2004   001248  0E01               	movlw	1
  2005   00124A  6E16               	movwf	___aomod@sign^0,c
  2006   00124C                     l2247:
  2007   00124C  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  2008   00124E  EF2D  F009         	goto	u1270
  2009   001252  EF2B  F009         	goto	u1271
  2010   001256                     u1271:
  2011   001256  EF3D  F009         	goto	l2251
  2012   00125A                     u1270:
  2013   00125A  1E14               	comf	(___aomod@divisor+7)^0,f,c
  2014   00125C  1E13               	comf	(___aomod@divisor+6)^0,f,c
  2015   00125E  1E12               	comf	(___aomod@divisor+5)^0,f,c
  2016   001260  1E11               	comf	(___aomod@divisor+4)^0,f,c
  2017   001262  1E10               	comf	(___aomod@divisor+3)^0,f,c
  2018   001264  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  2019   001266  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  2020   001268  6C0D               	negf	___aomod@divisor^0,c
  2021   00126A  0E00               	movlw	0
  2022   00126C  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  2023   00126E  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  2024   001270  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  2025   001272  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  2026   001274  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  2027   001276  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  2028   001278  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  2029   00127A                     l2251:
  2030   00127A  500D               	movf	___aomod@divisor^0,w,c
  2031   00127C  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  2032   00127E  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  2033   001280  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  2034   001282  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  2035   001284  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  2036   001286  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  2037   001288  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  2038   00128A  B4D8               	btfsc	status,2,c
  2039   00128C  EF4A  F009         	goto	u1281
  2040   001290  EF4C  F009         	goto	u1280
  2041   001294                     u1281:
  2042   001294  EF94  F009         	goto	l2267
  2043   001298                     u1280:
  2044   001298  0E01               	movlw	1
  2045   00129A  6E15               	movwf	___aomod@counter^0,c
  2046   00129C  EF5A  F009         	goto	l2257
  2047   0012A0                     l2255:
  2048   0012A0  90D8               	bcf	status,0,c
  2049   0012A2  360D               	rlcf	___aomod@divisor^0,f,c
  2050   0012A4  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  2051   0012A6  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  2052   0012A8  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  2053   0012AA  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  2054   0012AC  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  2055   0012AE  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  2056   0012B0  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  2057   0012B2  2A15               	incf	___aomod@counter^0,f,c
  2058   0012B4                     l2257:
  2059   0012B4  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  2060   0012B6  EF5F  F009         	goto	u1291
  2061   0012BA  EF61  F009         	goto	u1290
  2062   0012BE                     u1291:
  2063   0012BE  EF50  F009         	goto	l2255
  2064   0012C2                     u1290:
  2065   0012C2                     l2259:
  2066   0012C2  500D               	movf	___aomod@divisor^0,w,c
  2067   0012C4  5C05               	subwf	___aomod@dividend^0,w,c
  2068   0012C6  500E               	movf	(___aomod@divisor+1)^0,w,c
  2069   0012C8  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  2070   0012CA  500F               	movf	(___aomod@divisor+2)^0,w,c
  2071   0012CC  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  2072   0012CE  5010               	movf	(___aomod@divisor+3)^0,w,c
  2073   0012D0  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  2074   0012D2  5011               	movf	(___aomod@divisor+4)^0,w,c
  2075   0012D4  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  2076   0012D6  5012               	movf	(___aomod@divisor+5)^0,w,c
  2077   0012D8  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  2078   0012DA  5013               	movf	(___aomod@divisor+6)^0,w,c
  2079   0012DC  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  2080   0012DE  5014               	movf	(___aomod@divisor+7)^0,w,c
  2081   0012E0  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  2082   0012E2  A0D8               	btfss	status,0,c
  2083   0012E4  EF76  F009         	goto	u1301
  2084   0012E8  EF78  F009         	goto	u1300
  2085   0012EC                     u1301:
  2086   0012EC  EF88  F009         	goto	l2263
  2087   0012F0                     u1300:
  2088   0012F0  500D               	movf	___aomod@divisor^0,w,c
  2089   0012F2  5E05               	subwf	___aomod@dividend^0,f,c
  2090   0012F4  500E               	movf	(___aomod@divisor+1)^0,w,c
  2091   0012F6  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  2092   0012F8  500F               	movf	(___aomod@divisor+2)^0,w,c
  2093   0012FA  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  2094   0012FC  5010               	movf	(___aomod@divisor+3)^0,w,c
  2095   0012FE  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  2096   001300  5011               	movf	(___aomod@divisor+4)^0,w,c
  2097   001302  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  2098   001304  5012               	movf	(___aomod@divisor+5)^0,w,c
  2099   001306  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  2100   001308  5013               	movf	(___aomod@divisor+6)^0,w,c
  2101   00130A  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  2102   00130C  5014               	movf	(___aomod@divisor+7)^0,w,c
  2103   00130E  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  2104   001310                     l2263:
  2105   001310  90D8               	bcf	status,0,c
  2106   001312  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  2107   001314  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  2108   001316  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  2109   001318  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  2110   00131A  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  2111   00131C  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  2112   00131E  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  2113   001320  320D               	rrcf	___aomod@divisor^0,f,c
  2114   001322  2E15               	decfsz	___aomod@counter^0,f,c
  2115   001324  EF61  F009         	goto	l2259
  2116   001328                     l2267:
  2117   001328  5016               	movf	___aomod@sign^0,w,c
  2118   00132A  B4D8               	btfsc	status,2,c
  2119   00132C  EF9A  F009         	goto	u1311
  2120   001330  EF9C  F009         	goto	u1310
  2121   001334                     u1311:
  2122   001334  EFAC  F009         	goto	l2271
  2123   001338                     u1310:
  2124   001338  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2125   00133A  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2126   00133C  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2127   00133E  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2128   001340  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2129   001342  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2130   001344  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2131   001346  6C05               	negf	___aomod@dividend^0,c
  2132   001348  0E00               	movlw	0
  2133   00134A  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2134   00134C  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2135   00134E  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2136   001350  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2137   001352  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2138   001354  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2139   001356  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2140   001358                     l2271:
  2141   001358  C005  F005         	movff	___aomod@dividend,?___aomod
  2142   00135C  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  2143   001360  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  2144   001364  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  2145   001368  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  2146   00136C  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  2147   001370  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  2148   001374  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  2149   001378  0012               	return		;funcret
  2150   00137A                     __end_of___aomod:
  2151                           	callstack 0
  2152                           
  2153 ;; *************** function ___aodiv *****************
  2154 ;; Defined at:
  2155 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;  dividend        8    4[COMRAM] long long 
  2158 ;;  divisor         8   12[COMRAM] long long 
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;  quotient        8   22[COMRAM] long long 
  2161 ;;  sign            1   21[COMRAM] unsigned char 
  2162 ;;  counter         1   20[COMRAM] unsigned char 
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  8    4[COMRAM] long long 
  2165 ;; Registers used:
  2166 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2172 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2173 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2175 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2176 ;;Total ram usage:       26 bytes
  2177 ;; Hardware stack levels used: 1
  2178 ;; Hardware stack levels required when called: 2
  2179 ;; This function calls:
  2180 ;;		Nothing
  2181 ;; This function is called by:
  2182 ;;		_dtoa
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           	psect	text11
  2187   00108E                     __ptext11:
  2188                           	callstack 0
  2189   00108E                     ___aodiv:
  2190                           	callstack 24
  2191   00108E  0E00               	movlw	0
  2192   001090  6E16               	movwf	___aodiv@sign^0,c
  2193   001092  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  2194   001094  EF50  F008         	goto	u1190
  2195   001098  EF4E  F008         	goto	u1191
  2196   00109C                     u1191:
  2197   00109C  EF62  F008         	goto	l2203
  2198   0010A0                     u1190:
  2199   0010A0  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  2200   0010A2  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  2201   0010A4  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  2202   0010A6  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  2203   0010A8  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  2204   0010AA  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  2205   0010AC  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  2206   0010AE  6C0D               	negf	___aodiv@divisor^0,c
  2207   0010B0  0E00               	movlw	0
  2208   0010B2  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  2209   0010B4  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  2210   0010B6  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  2211   0010B8  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  2212   0010BA  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  2213   0010BC  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  2214   0010BE  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  2215   0010C0  0E01               	movlw	1
  2216   0010C2  6E16               	movwf	___aodiv@sign^0,c
  2217   0010C4                     l2203:
  2218   0010C4  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  2219   0010C6  EF69  F008         	goto	u1200
  2220   0010CA  EF67  F008         	goto	u1201
  2221   0010CE                     u1201:
  2222   0010CE  EF7B  F008         	goto	l2209
  2223   0010D2                     u1200:
  2224   0010D2  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  2225   0010D4  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  2226   0010D6  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  2227   0010D8  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  2228   0010DA  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  2229   0010DC  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  2230   0010DE  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  2231   0010E0  6C05               	negf	___aodiv@dividend^0,c
  2232   0010E2  0E00               	movlw	0
  2233   0010E4  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  2234   0010E6  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  2235   0010E8  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  2236   0010EA  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  2237   0010EC  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  2238   0010EE  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  2239   0010F0  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  2240   0010F2  0E01               	movlw	1
  2241   0010F4  1A16               	xorwf	___aodiv@sign^0,f,c
  2242   0010F6                     l2209:
  2243   0010F6  EE20  F017         	lfsr	2,___aodiv@quotient
  2244   0010FA  0E07               	movlw	7
  2245   0010FC                     u1211:
  2246   0010FC  6ADE               	clrf	postinc2,c
  2247   0010FE  06E8               	decf	wreg,f,c
  2248   001100  E2FD               	bc	u1211
  2249   001102  500D               	movf	___aodiv@divisor^0,w,c
  2250   001104  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  2251   001106  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  2252   001108  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  2253   00110A  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  2254   00110C  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  2255   00110E  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  2256   001110  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  2257   001112  B4D8               	btfsc	status,2,c
  2258   001114  EF8E  F008         	goto	u1221
  2259   001118  EF90  F008         	goto	u1220
  2260   00111C                     u1221:
  2261   00111C  EFE2  F008         	goto	l2231
  2262   001120                     u1220:
  2263   001120  0E01               	movlw	1
  2264   001122  6E15               	movwf	___aodiv@counter^0,c
  2265   001124  EF9E  F008         	goto	l2217
  2266   001128                     l2215:
  2267   001128  90D8               	bcf	status,0,c
  2268   00112A  360D               	rlcf	___aodiv@divisor^0,f,c
  2269   00112C  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  2270   00112E  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  2271   001130  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  2272   001132  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  2273   001134  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  2274   001136  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  2275   001138  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  2276   00113A  2A15               	incf	___aodiv@counter^0,f,c
  2277   00113C                     l2217:
  2278   00113C  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  2279   00113E  EFA3  F008         	goto	u1231
  2280   001142  EFA5  F008         	goto	u1230
  2281   001146                     u1231:
  2282   001146  EF94  F008         	goto	l2215
  2283   00114A                     u1230:
  2284   00114A                     l2219:
  2285   00114A  90D8               	bcf	status,0,c
  2286   00114C  3617               	rlcf	___aodiv@quotient^0,f,c
  2287   00114E  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  2288   001150  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  2289   001152  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  2290   001154  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  2291   001156  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  2292   001158  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  2293   00115A  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  2294   00115C  500D               	movf	___aodiv@divisor^0,w,c
  2295   00115E  5C05               	subwf	___aodiv@dividend^0,w,c
  2296   001160  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2297   001162  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  2298   001164  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2299   001166  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  2300   001168  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2301   00116A  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  2302   00116C  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2303   00116E  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  2304   001170  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2305   001172  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  2306   001174  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2307   001176  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  2308   001178  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2309   00117A  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  2310   00117C  A0D8               	btfss	status,0,c
  2311   00117E  EFC3  F008         	goto	u1241
  2312   001182  EFC5  F008         	goto	u1240
  2313   001186                     u1241:
  2314   001186  EFD6  F008         	goto	l2227
  2315   00118A                     u1240:
  2316   00118A  500D               	movf	___aodiv@divisor^0,w,c
  2317   00118C  5E05               	subwf	___aodiv@dividend^0,f,c
  2318   00118E  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2319   001190  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  2320   001192  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2321   001194  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  2322   001196  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2323   001198  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  2324   00119A  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2325   00119C  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  2326   00119E  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2327   0011A0  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  2328   0011A2  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2329   0011A4  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  2330   0011A6  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2331   0011A8  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  2332   0011AA  8017               	bsf	___aodiv@quotient^0,0,c
  2333   0011AC                     l2227:
  2334   0011AC  90D8               	bcf	status,0,c
  2335   0011AE  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  2336   0011B0  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  2337   0011B2  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  2338   0011B4  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  2339   0011B6  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  2340   0011B8  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  2341   0011BA  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  2342   0011BC  320D               	rrcf	___aodiv@divisor^0,f,c
  2343   0011BE  2E15               	decfsz	___aodiv@counter^0,f,c
  2344   0011C0  EFA5  F008         	goto	l2219
  2345   0011C4                     l2231:
  2346   0011C4  5016               	movf	___aodiv@sign^0,w,c
  2347   0011C6  B4D8               	btfsc	status,2,c
  2348   0011C8  EFE8  F008         	goto	u1251
  2349   0011CC  EFEA  F008         	goto	u1250
  2350   0011D0                     u1251:
  2351   0011D0  EFFA  F008         	goto	l2235
  2352   0011D4                     u1250:
  2353   0011D4  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  2354   0011D6  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  2355   0011D8  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  2356   0011DA  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  2357   0011DC  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  2358   0011DE  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  2359   0011E0  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  2360   0011E2  6C17               	negf	___aodiv@quotient^0,c
  2361   0011E4  0E00               	movlw	0
  2362   0011E6  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  2363   0011E8  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  2364   0011EA  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  2365   0011EC  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  2366   0011EE  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  2367   0011F0  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  2368   0011F2  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  2369   0011F4                     l2235:
  2370   0011F4  C017  F005         	movff	___aodiv@quotient,?___aodiv
  2371   0011F8  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  2372   0011FC  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  2373   001200  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  2374   001204  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  2375   001208  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  2376   00120C  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  2377   001210  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  2378   001214  0012               	return		;funcret
  2379   001216                     __end_of___aodiv:
  2380                           	callstack 0
  2381                           
  2382 ;; *************** function _sendStringSerial4 *****************
  2383 ;; Defined at:
  2384 ;;		line 38 in file "serial.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;  string          2    5[COMRAM] PTR unsigned char 
  2387 ;;		 -> main@buf(40), 
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;		None
  2390 ;; Return value:  Size  Location     Type
  2391 ;;                  1    wreg      void 
  2392 ;; Registers used:
  2393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2394 ;; Tracked objects:
  2395 ;;		On entry : 0/0
  2396 ;;		On exit  : 0/0
  2397 ;;		Unchanged: 0/0
  2398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2399 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2402 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2403 ;;Total ram usage:        2 bytes
  2404 ;; Hardware stack levels used: 1
  2405 ;; Hardware stack levels required when called: 3
  2406 ;; This function calls:
  2407 ;;		_sendCharSerial4
  2408 ;; This function is called by:
  2409 ;;		_main
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           	psect	text12
  2414   001A92                     __ptext12:
  2415                           	callstack 0
  2416   001A92                     _sendStringSerial4:
  2417                           	callstack 27
  2418   001A92                     
  2419                           ;serial.c: 40:     while (*string != 0) {
  2420   001A92  EF54  F00D         	goto	l2059
  2421   001A96                     l2055:
  2422                           
  2423                           ;serial.c: 41:         sendCharSerial4(*string++);
  2424   001A96  C006  FFD9         	movff	sendStringSerial4@string,fsr2l
  2425   001A9A  C007  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2426   001A9E  50DF               	movf	indf2,w,c
  2427   001AA0  ECD5  F00D         	call	_sendCharSerial4
  2428   001AA4  4A06               	infsnz	sendStringSerial4@string^0,f,c
  2429   001AA6  2A07               	incf	(sendStringSerial4@string+1)^0,f,c
  2430   001AA8                     l2059:
  2431                           
  2432                           ;serial.c: 40:     while (*string != 0) {
  2433   001AA8  C006  FFD9         	movff	sendStringSerial4@string,fsr2l
  2434   001AAC  C007  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2435   001AB0  50DF               	movf	indf2,w,c
  2436   001AB2  A4D8               	btfss	status,2,c
  2437   001AB4  EF5E  F00D         	goto	u1041
  2438   001AB8  EF60  F00D         	goto	u1040
  2439   001ABC                     u1041:
  2440   001ABC  EF4B  F00D         	goto	l2055
  2441   001AC0                     u1040:
  2442   001AC0  0012               	return		;funcret
  2443   001AC2                     __end_of_sendStringSerial4:
  2444                           	callstack 0
  2445                           
  2446 ;; *************** function _sendCharSerial4 *****************
  2447 ;; Defined at:
  2448 ;;		line 32 in file "serial.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;  charToSend      1    wreg     unsigned char 
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;  charToSend      1    4[COMRAM] unsigned char 
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  1    wreg      void 
  2455 ;; Registers used:
  2456 ;;		wreg
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2463 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2465 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2466 ;;Total ram usage:        1 bytes
  2467 ;; Hardware stack levels used: 1
  2468 ;; Hardware stack levels required when called: 2
  2469 ;; This function calls:
  2470 ;;		Nothing
  2471 ;; This function is called by:
  2472 ;;		_sendStringSerial4
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           	psect	text13
  2477   001BAA                     __ptext13:
  2478                           	callstack 0
  2479   001BAA                     _sendCharSerial4:
  2480                           	callstack 27
  2481                           
  2482                           ;incstack = 0
  2483                           ;sendCharSerial4@charToSend stored from wreg
  2484   001BAA  6E05               	movwf	sendCharSerial4@charToSend^0,c
  2485   001BAC                     l319:
  2486   001BAC  010E               	movlb	14	; () banked
  2487   001BAE  A537               	btfss	55,2,b	;volatile
  2488   001BB0  EFDC  F00D         	goto	u1021
  2489   001BB4  EFDE  F00D         	goto	u1020
  2490   001BB8                     u1021:
  2491   001BB8  EFD6  F00D         	goto	l319
  2492   001BBC                     u1020:
  2493   001BBC                     
  2494                           ; BSR set to: 14
  2495                           ;serial.c: 34:     TX4REG = charToSend;
  2496   001BBC  C005  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2497   001BC0                     
  2498                           ; BSR set to: 14
  2499   001BC0  0012               	return		;funcret
  2500   001BC2                     __end_of_sendCharSerial4:
  2501                           	callstack 0
  2502                           
  2503 ;; *************** function _initUSART4 *****************
  2504 ;; Defined at:
  2505 ;;		line 5 in file "serial.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;		None
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;		None
  2510 ;; Return value:  Size  Location     Type
  2511 ;;                  1    wreg      void 
  2512 ;; Registers used:
  2513 ;;		wreg, status,2
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2523 ;;Total ram usage:        0 bytes
  2524 ;; Hardware stack levels used: 1
  2525 ;; Hardware stack levels required when called: 2
  2526 ;; This function calls:
  2527 ;;		Nothing
  2528 ;; This function is called by:
  2529 ;;		_main
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533                           	psect	text14
  2534   001B6A                     __ptext14:
  2535                           	callstack 0
  2536   001B6A                     _initUSART4:
  2537                           	callstack 28
  2538   001B6A                     
  2539                           ;serial.c: 7:     RC0PPS = 0x12;
  2540   001B6A  0E12               	movlw	18
  2541   001B6C  010E               	movlb	14	; () banked
  2542   001B6E  6F62               	movwf	98,b	;volatile
  2543                           
  2544                           ;serial.c: 8:     RX4PPS = 0x11;
  2545   001B70  0E11               	movlw	17
  2546   001B72  6F15               	movwf	21,b	;volatile
  2547   001B74                     
  2548                           ; BSR set to: 14
  2549                           ;serial.c: 9:     TRISCbits.TRISC1 = 1;
  2550   001B74  8283               	bsf	131,1,c	;volatile
  2551   001B76                     
  2552                           ; BSR set to: 14
  2553                           ;serial.c: 13:     BAUD4CONbits.BRG16 = 0;
  2554   001B76  97E9               	bcf	233,3,b	;volatile
  2555   001B78                     
  2556                           ; BSR set to: 14
  2557                           ;serial.c: 14:     TX4STAbits.BRGH = 0;
  2558   001B78  95E8               	bcf	232,2,b	;volatile
  2559                           
  2560                           ;serial.c: 15:     SP4BRGL = 51;
  2561   001B7A  0E33               	movlw	51
  2562   001B7C  6FE5               	movwf	229,b	;volatile
  2563                           
  2564                           ;serial.c: 16:     SP4BRGH = 0;
  2565   001B7E  0E00               	movlw	0
  2566   001B80  6FE6               	movwf	230,b	;volatile
  2567   001B82                     
  2568                           ; BSR set to: 14
  2569                           ;serial.c: 18:     RC4STAbits.CREN = 1;
  2570   001B82  89E7               	bsf	231,4,b	;volatile
  2571   001B84                     
  2572                           ; BSR set to: 14
  2573                           ;serial.c: 19:     TX4STAbits.TXEN = 1;
  2574   001B84  8BE8               	bsf	232,5,b	;volatile
  2575   001B86                     
  2576                           ; BSR set to: 14
  2577                           ;serial.c: 20:     RC4STAbits.SPEN = 1;
  2578   001B86  8FE7               	bsf	231,7,b	;volatile
  2579   001B88                     
  2580                           ; BSR set to: 14
  2581   001B88  0012               	return		;funcret
  2582   001B8A                     __end_of_initUSART4:
  2583                           	callstack 0
  2584                           
  2585 ;; *************** function _initDCmotorsPWM *****************
  2586 ;; Defined at:
  2587 ;;		line 5 in file "dc_motor.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;  PWMperiod       2    4[COMRAM] unsigned int 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;		None
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      void 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2601 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2604 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2605 ;;Total ram usage:        2 bytes
  2606 ;; Hardware stack levels used: 1
  2607 ;; Hardware stack levels required when called: 2
  2608 ;; This function calls:
  2609 ;;		Nothing
  2610 ;; This function is called by:
  2611 ;;		_main
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text15
  2616   00167A                     __ptext15:
  2617                           	callstack 0
  2618   00167A                     _initDCmotorsPWM:
  2619                           	callstack 28
  2620   00167A                     
  2621                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2622   00167A  9485               	bcf	133,2,c	;volatile
  2623                           
  2624                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2625   00167C  9885               	bcf	133,4,c	;volatile
  2626                           
  2627                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2628   00167E  9E83               	bcf	131,7,c	;volatile
  2629                           
  2630                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2631   001680  9C87               	bcf	135,6,c	;volatile
  2632                           
  2633                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2634   001682  947D               	bcf	125,2,c	;volatile
  2635                           
  2636                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2637   001684  987D               	bcf	125,4,c	;volatile
  2638                           
  2639                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2640   001686  9E7B               	bcf	123,7,c	;volatile
  2641                           
  2642                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2643   001688  9C7F               	bcf	127,6,c	;volatile
  2644   00168A                     
  2645                           ;dc_motor.c: 18:     RE2PPS=0x05;
  2646   00168A  0E05               	movlw	5
  2647   00168C  010E               	movlb	14	; () banked
  2648   00168E  6F74               	movwf	116,b	;volatile
  2649                           
  2650                           ;dc_motor.c: 19:     RE4PPS=0x06;
  2651   001690  0E06               	movlw	6
  2652   001692  6F76               	movwf	118,b	;volatile
  2653                           
  2654                           ;dc_motor.c: 20:     RC7PPS=0x07;
  2655   001694  0E07               	movlw	7
  2656   001696  6F69               	movwf	105,b	;volatile
  2657                           
  2658                           ;dc_motor.c: 21:     RG6PPS=0x08;
  2659   001698  0E08               	movlw	8
  2660   00169A  6F88               	movwf	136,b	;volatile
  2661                           
  2662                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  2663   00169C  50BD               	movf	189,w,c	;volatile
  2664   00169E  0B8F               	andlw	-113
  2665   0016A0  0940               	iorlw	64
  2666   0016A2  6EBD               	movwf	189,c	;volatile
  2667                           
  2668                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  2669   0016A4  0EE0               	movlw	-32
  2670   0016A6  16BE               	andwf	190,f,c	;volatile
  2671                           
  2672                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  2673   0016A8  50BF               	movf	191,w,c	;volatile
  2674   0016AA  0BF0               	andlw	-16
  2675   0016AC  0901               	iorlw	1
  2676   0016AE  6EBF               	movwf	191,c	;volatile
  2677   0016B0                     
  2678                           ; BSR set to: 14
  2679                           ;dc_motor.c: 30:     T2PR=PWMperiod;
  2680   0016B0  C005  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  2681   0016B4                     
  2682                           ; BSR set to: 14
  2683                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  2684   0016B4  8EBD               	bsf	189,7,c	;volatile
  2685                           
  2686                           ;dc_motor.c: 35:     CCPR1H=0;
  2687   0016B6  0E00               	movlw	0
  2688   0016B8  6EAA               	movwf	170,c	;volatile
  2689                           
  2690                           ;dc_motor.c: 36:     CCPR2H=0;
  2691   0016BA  0E00               	movlw	0
  2692   0016BC  6EA6               	movwf	166,c	;volatile
  2693                           
  2694                           ;dc_motor.c: 37:     CCPR3H=0;
  2695   0016BE  0E00               	movlw	0
  2696   0016C0  010F               	movlb	15	; () banked
  2697   0016C2  6F25               	movwf	37,b	;volatile
  2698                           
  2699                           ;dc_motor.c: 38:     CCPR4H=0;
  2700   0016C4  0E00               	movlw	0
  2701   0016C6  6F21               	movwf	33,b	;volatile
  2702                           
  2703                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  2704   0016C8  0EFC               	movlw	-4
  2705   0016CA  16AD               	andwf	173,f,c	;volatile
  2706                           
  2707                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  2708   0016CC  0EF3               	movlw	-13
  2709   0016CE  16AD               	andwf	173,f,c	;volatile
  2710                           
  2711                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  2712   0016D0  0ECF               	movlw	-49
  2713   0016D2  16AD               	andwf	173,f,c	;volatile
  2714                           
  2715                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  2716   0016D4  0E3F               	movlw	-193
  2717   0016D6  16AD               	andwf	173,f,c	;volatile
  2718   0016D8                     
  2719                           ; BSR set to: 15
  2720                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  2721   0016D8  88AB               	bsf	171,4,c	;volatile
  2722                           
  2723                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  2724   0016DA  50AB               	movf	171,w,c	;volatile
  2725   0016DC  0BF0               	andlw	-16
  2726   0016DE  090C               	iorlw	12
  2727   0016E0  6EAB               	movwf	171,c	;volatile
  2728   0016E2                     
  2729                           ; BSR set to: 15
  2730                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  2731   0016E2  8EAB               	bsf	171,7,c	;volatile
  2732   0016E4                     
  2733                           ; BSR set to: 15
  2734                           ;dc_motor.c: 52:     CCP2CONbits.FMT=1;
  2735   0016E4  88A7               	bsf	167,4,c	;volatile
  2736                           
  2737                           ;dc_motor.c: 53:     CCP2CONbits.CCP2MODE=0b1100;
  2738   0016E6  50A7               	movf	167,w,c	;volatile
  2739   0016E8  0BF0               	andlw	-16
  2740   0016EA  090C               	iorlw	12
  2741   0016EC  6EA7               	movwf	167,c	;volatile
  2742   0016EE                     
  2743                           ; BSR set to: 15
  2744                           ;dc_motor.c: 54:     CCP2CONbits.EN=1;
  2745   0016EE  8EA7               	bsf	167,7,c	;volatile
  2746   0016F0                     
  2747                           ; BSR set to: 15
  2748                           ;dc_motor.c: 58:     CCP3CONbits.FMT=1;
  2749   0016F0  8926               	bsf	38,4,b	;volatile
  2750                           
  2751                           ;dc_motor.c: 59:     CCP3CONbits.CCP3MODE=0b1100;
  2752   0016F2  5126               	movf	38,w,b	;volatile
  2753   0016F4  0BF0               	andlw	-16
  2754   0016F6  090C               	iorlw	12
  2755   0016F8  6F26               	movwf	38,b	;volatile
  2756   0016FA                     
  2757                           ; BSR set to: 15
  2758                           ;dc_motor.c: 60:     CCP3CONbits.EN=1;
  2759   0016FA  8F26               	bsf	38,7,b	;volatile
  2760   0016FC                     
  2761                           ; BSR set to: 15
  2762                           ;dc_motor.c: 63:     CCP4CONbits.FMT=1;
  2763   0016FC  8922               	bsf	34,4,b	;volatile
  2764                           
  2765                           ;dc_motor.c: 64:     CCP4CONbits.CCP4MODE=0b1100;
  2766   0016FE  5122               	movf	34,w,b	;volatile
  2767   001700  0BF0               	andlw	-16
  2768   001702  090C               	iorlw	12
  2769   001704  6F22               	movwf	34,b	;volatile
  2770   001706                     
  2771                           ; BSR set to: 15
  2772                           ;dc_motor.c: 65:     CCP4CONbits.EN=1;
  2773   001706  8F22               	bsf	34,7,b	;volatile
  2774   001708                     
  2775                           ; BSR set to: 15
  2776   001708  0012               	return		;funcret
  2777   00170A                     __end_of_initDCmotorsPWM:
  2778                           	callstack 0
  2779                           
  2780 ;; *************** function _color_read_Red *****************
  2781 ;; Defined at:
  2782 ;;		line 26 in file "color.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;		None
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;  tmp             2   13[COMRAM] unsigned int 
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  2    8[COMRAM] unsigned int 
  2789 ;; Registers used:
  2790 ;;		wreg, status,2, status,0, cstack
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2796 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2797 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2798 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2799 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2800 ;;Total ram usage:        7 bytes
  2801 ;; Hardware stack levels used: 1
  2802 ;; Hardware stack levels required when called: 4
  2803 ;; This function calls:
  2804 ;;		_I2C_2_Master_Read
  2805 ;;		_I2C_2_Master_RepStart
  2806 ;;		_I2C_2_Master_Start
  2807 ;;		_I2C_2_Master_Stop
  2808 ;;		_I2C_2_Master_Write
  2809 ;; This function is called by:
  2810 ;;		_main
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           	psect	text16
  2815   001826                     __ptext16:
  2816                           	callstack 0
  2817   001826                     _color_read_Red:
  2818                           	callstack 26
  2819   001826                     
  2820                           ;color.c: 28:  unsigned int tmp;;color.c: 29:  I2C_2_Master_Start();
  2821   001826  EC03  F00E         	call	_I2C_2_Master_Start	;wreg free
  2822                           
  2823                           ;color.c: 30:  I2C_2_Master_Write(0x52 | 0x00);
  2824   00182A  0E52               	movlw	82
  2825   00182C  ECED  F00D         	call	_I2C_2_Master_Write
  2826                           
  2827                           ;color.c: 32:  I2C_2_Master_Write(0xA0 | 0x16);
  2828   001830  0EB6               	movlw	182
  2829   001832  ECED  F00D         	call	_I2C_2_Master_Write
  2830                           
  2831                           ;color.c: 33:  I2C_2_Master_RepStart();
  2832   001836  ECF9  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2833                           
  2834                           ;color.c: 34:  I2C_2_Master_Write(0x52 | 0x01);
  2835   00183A  0E53               	movlw	83
  2836   00183C  ECED  F00D         	call	_I2C_2_Master_Write
  2837                           
  2838                           ;color.c: 35:  tmp=I2C_2_Master_Read(1);
  2839   001840  0E01               	movlw	1
  2840   001842  ECD5  F00C         	call	_I2C_2_Master_Read
  2841   001846  6E0B               	movwf	??_color_read_Red^0,c
  2842   001848  500B               	movf	??_color_read_Red^0,w,c
  2843   00184A  6E0E               	movwf	color_read_Red@tmp^0,c
  2844   00184C  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
  2845                           
  2846                           ;color.c: 36:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2847   00184E  0E00               	movlw	0
  2848   001850  ECD5  F00C         	call	_I2C_2_Master_Read
  2849   001854  6E0B               	movwf	??_color_read_Red^0,c
  2850   001856  500B               	movf	??_color_read_Red^0,w,c
  2851   001858  6E0D               	movwf	(??_color_read_Red+2)^0,c
  2852   00185A  6A0C               	clrf	(??_color_read_Red+1)^0,c
  2853   00185C  500E               	movf	color_read_Red@tmp^0,w,c
  2854   00185E  100C               	iorwf	(??_color_read_Red+1)^0,w,c
  2855   001860  6E0E               	movwf	color_read_Red@tmp^0,c
  2856   001862  500F               	movf	(color_read_Red@tmp+1)^0,w,c
  2857   001864  100D               	iorwf	(??_color_read_Red+2)^0,w,c
  2858   001866  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
  2859                           
  2860                           ;color.c: 37:  I2C_2_Master_Stop();
  2861   001868  ECFE  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2862   00186C                     
  2863                           ;color.c: 38:  return tmp;
  2864   00186C  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
  2865   001870  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2866   001874  0012               	return		;funcret
  2867   001876                     __end_of_color_read_Red:
  2868                           	callstack 0
  2869                           
  2870 ;; *************** function _color_read_Green *****************
  2871 ;; Defined at:
  2872 ;;		line 56 in file "color.c"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;		None
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;  tmp             2   13[COMRAM] unsigned int 
  2877 ;; Return value:  Size  Location     Type
  2878 ;;                  2    8[COMRAM] unsigned int 
  2879 ;; Registers used:
  2880 ;;		wreg, status,2, status,0, cstack
  2881 ;; Tracked objects:
  2882 ;;		On entry : 0/0
  2883 ;;		On exit  : 0/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2886 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2887 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2888 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2889 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2890 ;;Total ram usage:        7 bytes
  2891 ;; Hardware stack levels used: 1
  2892 ;; Hardware stack levels required when called: 4
  2893 ;; This function calls:
  2894 ;;		_I2C_2_Master_Read
  2895 ;;		_I2C_2_Master_RepStart
  2896 ;;		_I2C_2_Master_Start
  2897 ;;		_I2C_2_Master_Stop
  2898 ;;		_I2C_2_Master_Write
  2899 ;; This function is called by:
  2900 ;;		_main
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           	psect	text17
  2905   001876                     __ptext17:
  2906                           	callstack 0
  2907   001876                     _color_read_Green:
  2908                           	callstack 26
  2909   001876                     
  2910                           ;color.c: 58:  unsigned int tmp;;color.c: 59:  I2C_2_Master_Start();
  2911   001876  EC03  F00E         	call	_I2C_2_Master_Start	;wreg free
  2912                           
  2913                           ;color.c: 60:  I2C_2_Master_Write(0x52 | 0x00);
  2914   00187A  0E52               	movlw	82
  2915   00187C  ECED  F00D         	call	_I2C_2_Master_Write
  2916                           
  2917                           ;color.c: 62:  I2C_2_Master_Write(0xA0 | 0x18);
  2918   001880  0EB8               	movlw	184
  2919   001882  ECED  F00D         	call	_I2C_2_Master_Write
  2920                           
  2921                           ;color.c: 63:  I2C_2_Master_RepStart();
  2922   001886  ECF9  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2923                           
  2924                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x01);
  2925   00188A  0E53               	movlw	83
  2926   00188C  ECED  F00D         	call	_I2C_2_Master_Write
  2927                           
  2928                           ;color.c: 65:  tmp=I2C_2_Master_Read(1);
  2929   001890  0E01               	movlw	1
  2930   001892  ECD5  F00C         	call	_I2C_2_Master_Read
  2931   001896  6E0B               	movwf	??_color_read_Green^0,c
  2932   001898  500B               	movf	??_color_read_Green^0,w,c
  2933   00189A  6E0E               	movwf	color_read_Green@tmp^0,c
  2934   00189C  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
  2935                           
  2936                           ;color.c: 66:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2937   00189E  0E00               	movlw	0
  2938   0018A0  ECD5  F00C         	call	_I2C_2_Master_Read
  2939   0018A4  6E0B               	movwf	??_color_read_Green^0,c
  2940   0018A6  500B               	movf	??_color_read_Green^0,w,c
  2941   0018A8  6E0D               	movwf	(??_color_read_Green+2)^0,c
  2942   0018AA  6A0C               	clrf	(??_color_read_Green+1)^0,c
  2943   0018AC  500E               	movf	color_read_Green@tmp^0,w,c
  2944   0018AE  100C               	iorwf	(??_color_read_Green+1)^0,w,c
  2945   0018B0  6E0E               	movwf	color_read_Green@tmp^0,c
  2946   0018B2  500F               	movf	(color_read_Green@tmp+1)^0,w,c
  2947   0018B4  100D               	iorwf	(??_color_read_Green+2)^0,w,c
  2948   0018B6  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
  2949                           
  2950                           ;color.c: 67:  I2C_2_Master_Stop();
  2951   0018B8  ECFE  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2952   0018BC                     
  2953                           ;color.c: 68:  return tmp;
  2954   0018BC  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
  2955   0018C0  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2956   0018C4  0012               	return		;funcret
  2957   0018C6                     __end_of_color_read_Green:
  2958                           	callstack 0
  2959                           
  2960 ;; *************** function _color_read_Clear *****************
  2961 ;; Defined at:
  2962 ;;		line 71 in file "color.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;		None
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;  tmp             2   13[COMRAM] unsigned int 
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  2    8[COMRAM] unsigned int 
  2969 ;; Registers used:
  2970 ;;		wreg, status,2, status,0, cstack
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2976 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2977 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2978 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2979 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2980 ;;Total ram usage:        7 bytes
  2981 ;; Hardware stack levels used: 1
  2982 ;; Hardware stack levels required when called: 4
  2983 ;; This function calls:
  2984 ;;		_I2C_2_Master_Read
  2985 ;;		_I2C_2_Master_RepStart
  2986 ;;		_I2C_2_Master_Start
  2987 ;;		_I2C_2_Master_Stop
  2988 ;;		_I2C_2_Master_Write
  2989 ;; This function is called by:
  2990 ;;		_main
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           	psect	text18
  2995   0018C6                     __ptext18:
  2996                           	callstack 0
  2997   0018C6                     _color_read_Clear:
  2998                           	callstack 26
  2999   0018C6                     
  3000                           ;color.c: 73:  unsigned int tmp;;color.c: 74:  I2C_2_Master_Start();
  3001   0018C6  EC03  F00E         	call	_I2C_2_Master_Start	;wreg free
  3002                           
  3003                           ;color.c: 75:  I2C_2_Master_Write(0x52 | 0x00);
  3004   0018CA  0E52               	movlw	82
  3005   0018CC  ECED  F00D         	call	_I2C_2_Master_Write
  3006                           
  3007                           ;color.c: 77:  I2C_2_Master_Write(0xA0 | 0x14);
  3008   0018D0  0EB4               	movlw	180
  3009   0018D2  ECED  F00D         	call	_I2C_2_Master_Write
  3010                           
  3011                           ;color.c: 78:  I2C_2_Master_RepStart();
  3012   0018D6  ECF9  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  3013                           
  3014                           ;color.c: 79:  I2C_2_Master_Write(0x52 | 0x01);
  3015   0018DA  0E53               	movlw	83
  3016   0018DC  ECED  F00D         	call	_I2C_2_Master_Write
  3017                           
  3018                           ;color.c: 80:  tmp=I2C_2_Master_Read(1);
  3019   0018E0  0E01               	movlw	1
  3020   0018E2  ECD5  F00C         	call	_I2C_2_Master_Read
  3021   0018E6  6E0B               	movwf	??_color_read_Clear^0,c
  3022   0018E8  500B               	movf	??_color_read_Clear^0,w,c
  3023   0018EA  6E0E               	movwf	color_read_Clear@tmp^0,c
  3024   0018EC  6A0F               	clrf	(color_read_Clear@tmp+1)^0,c
  3025                           
  3026                           ;color.c: 81:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3027   0018EE  0E00               	movlw	0
  3028   0018F0  ECD5  F00C         	call	_I2C_2_Master_Read
  3029   0018F4  6E0B               	movwf	??_color_read_Clear^0,c
  3030   0018F6  500B               	movf	??_color_read_Clear^0,w,c
  3031   0018F8  6E0D               	movwf	(??_color_read_Clear+2)^0,c
  3032   0018FA  6A0C               	clrf	(??_color_read_Clear+1)^0,c
  3033   0018FC  500E               	movf	color_read_Clear@tmp^0,w,c
  3034   0018FE  100C               	iorwf	(??_color_read_Clear+1)^0,w,c
  3035   001900  6E0E               	movwf	color_read_Clear@tmp^0,c
  3036   001902  500F               	movf	(color_read_Clear@tmp+1)^0,w,c
  3037   001904  100D               	iorwf	(??_color_read_Clear+2)^0,w,c
  3038   001906  6E0F               	movwf	(color_read_Clear@tmp+1)^0,c
  3039                           
  3040                           ;color.c: 82:  I2C_2_Master_Stop();
  3041   001908  ECFE  F00D         	call	_I2C_2_Master_Stop	;wreg free
  3042   00190C                     
  3043                           ;color.c: 83:  return tmp;
  3044   00190C  C00E  F009         	movff	color_read_Clear@tmp,?_color_read_Clear
  3045   001910  C00F  F00A         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  3046   001914  0012               	return		;funcret
  3047   001916                     __end_of_color_read_Clear:
  3048                           	callstack 0
  3049                           
  3050 ;; *************** function _color_read_Blue *****************
  3051 ;; Defined at:
  3052 ;;		line 41 in file "color.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;		None
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;  tmp             2   13[COMRAM] unsigned int 
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  2    8[COMRAM] unsigned int 
  3059 ;; Registers used:
  3060 ;;		wreg, status,2, status,0, cstack
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3066 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3067 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3068 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3069 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3070 ;;Total ram usage:        7 bytes
  3071 ;; Hardware stack levels used: 1
  3072 ;; Hardware stack levels required when called: 4
  3073 ;; This function calls:
  3074 ;;		_I2C_2_Master_Read
  3075 ;;		_I2C_2_Master_RepStart
  3076 ;;		_I2C_2_Master_Start
  3077 ;;		_I2C_2_Master_Stop
  3078 ;;		_I2C_2_Master_Write
  3079 ;; This function is called by:
  3080 ;;		_main
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           	psect	text19
  3085   001916                     __ptext19:
  3086                           	callstack 0
  3087   001916                     _color_read_Blue:
  3088                           	callstack 26
  3089   001916                     
  3090                           ;color.c: 43:  unsigned int tmp;;color.c: 44:  I2C_2_Master_Start();
  3091   001916  EC03  F00E         	call	_I2C_2_Master_Start	;wreg free
  3092                           
  3093                           ;color.c: 45:  I2C_2_Master_Write(0x52 | 0x00);
  3094   00191A  0E52               	movlw	82
  3095   00191C  ECED  F00D         	call	_I2C_2_Master_Write
  3096                           
  3097                           ;color.c: 47:  I2C_2_Master_Write(0xA0 | 0x1A);
  3098   001920  0EBA               	movlw	186
  3099   001922  ECED  F00D         	call	_I2C_2_Master_Write
  3100                           
  3101                           ;color.c: 48:  I2C_2_Master_RepStart();
  3102   001926  ECF9  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  3103                           
  3104                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x01);
  3105   00192A  0E53               	movlw	83
  3106   00192C  ECED  F00D         	call	_I2C_2_Master_Write
  3107                           
  3108                           ;color.c: 50:  tmp=I2C_2_Master_Read(1);
  3109   001930  0E01               	movlw	1
  3110   001932  ECD5  F00C         	call	_I2C_2_Master_Read
  3111   001936  6E0B               	movwf	??_color_read_Blue^0,c
  3112   001938  500B               	movf	??_color_read_Blue^0,w,c
  3113   00193A  6E0E               	movwf	color_read_Blue@tmp^0,c
  3114   00193C  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
  3115                           
  3116                           ;color.c: 51:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3117   00193E  0E00               	movlw	0
  3118   001940  ECD5  F00C         	call	_I2C_2_Master_Read
  3119   001944  6E0B               	movwf	??_color_read_Blue^0,c
  3120   001946  500B               	movf	??_color_read_Blue^0,w,c
  3121   001948  6E0D               	movwf	(??_color_read_Blue+2)^0,c
  3122   00194A  6A0C               	clrf	(??_color_read_Blue+1)^0,c
  3123   00194C  500E               	movf	color_read_Blue@tmp^0,w,c
  3124   00194E  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
  3125   001950  6E0E               	movwf	color_read_Blue@tmp^0,c
  3126   001952  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
  3127   001954  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
  3128   001956  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
  3129                           
  3130                           ;color.c: 52:  I2C_2_Master_Stop();
  3131   001958  ECFE  F00D         	call	_I2C_2_Master_Stop	;wreg free
  3132   00195C                     
  3133                           ;color.c: 53:  return tmp;
  3134   00195C  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
  3135   001960  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3136   001964  0012               	return		;funcret
  3137   001966                     __end_of_color_read_Blue:
  3138                           	callstack 0
  3139                           
  3140 ;; *************** function _I2C_2_Master_RepStart *****************
  3141 ;; Defined at:
  3142 ;;		line 33 in file "i2c.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;		None
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;		None
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  1    wreg      void 
  3149 ;; Registers used:
  3150 ;;		wreg, status,2, status,0, cstack
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3160 ;;Total ram usage:        0 bytes
  3161 ;; Hardware stack levels used: 1
  3162 ;; Hardware stack levels required when called: 3
  3163 ;; This function calls:
  3164 ;;		_I2C_2_Master_Idle
  3165 ;; This function is called by:
  3166 ;;		_color_read_Red
  3167 ;;		_color_read_Blue
  3168 ;;		_color_read_Green
  3169 ;;		_color_read_Clear
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           	psect	text20
  3174   001BF2                     __ptext20:
  3175                           	callstack 0
  3176   001BF2                     _I2C_2_Master_RepStart:
  3177                           	callstack 26
  3178   001BF2                     
  3179                           ;i2c.c: 35:   I2C_2_Master_Idle();
  3180   001BF2  ECA1  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3181   001BF6                     
  3182                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3183   001BF6  010E               	movlb	14	; () banked
  3184   001BF8  83DA               	bsf	218,1,b	;volatile
  3185   001BFA                     
  3186                           ; BSR set to: 14
  3187   001BFA  0012               	return		;funcret
  3188   001BFC                     __end_of_I2C_2_Master_RepStart:
  3189                           	callstack 0
  3190                           
  3191 ;; *************** function _I2C_2_Master_Read *****************
  3192 ;; Defined at:
  3193 ;;		line 51 in file "i2c.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;  ack             1    wreg     unsigned char 
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;  ack             1    6[COMRAM] unsigned char 
  3198 ;;  tmp             1    7[COMRAM] unsigned char 
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  1    wreg      unsigned char 
  3201 ;; Registers used:
  3202 ;;		wreg, status,2, status,0, cstack
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/0
  3205 ;;		On exit  : 0/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3209 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3210 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3211 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3212 ;;Total ram usage:        3 bytes
  3213 ;; Hardware stack levels used: 1
  3214 ;; Hardware stack levels required when called: 3
  3215 ;; This function calls:
  3216 ;;		_I2C_2_Master_Idle
  3217 ;; This function is called by:
  3218 ;;		_color_read_Red
  3219 ;;		_color_read_Blue
  3220 ;;		_color_read_Green
  3221 ;;		_color_read_Clear
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224                           
  3225                           	psect	text21
  3226   0019AA                     __ptext21:
  3227                           	callstack 0
  3228   0019AA                     _I2C_2_Master_Read:
  3229                           	callstack 26
  3230                           
  3231                           ; BSR set to: 14
  3232                           ;incstack = 0
  3233                           ;I2C_2_Master_Read@ack stored from wreg
  3234   0019AA  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  3235   0019AC                     
  3236                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  3237   0019AC  ECA1  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3238   0019B0                     
  3239                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3240   0019B0  010E               	movlb	14	; () banked
  3241   0019B2  87DA               	bsf	218,3,b	;volatile
  3242                           
  3243                           ;i2c.c: 56:   I2C_2_Master_Idle();
  3244   0019B4  ECA1  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3245   0019B8                     
  3246                           ;i2c.c: 57:   tmp = SSP2BUF;
  3247   0019B8  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3248                           
  3249                           ;i2c.c: 58:   I2C_2_Master_Idle();
  3250   0019BC  ECA1  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3251   0019C0                     
  3252                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3253   0019C0  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  3254   0019C2  B4D8               	btfsc	status,2,c
  3255   0019C4  EFE6  F00C         	goto	u1001
  3256   0019C8  EFEA  F00C         	goto	u1000
  3257   0019CC                     u1001:
  3258   0019CC  6A06               	clrf	??_I2C_2_Master_Read^0,c
  3259   0019CE  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  3260   0019D0  EFEB  F00C         	goto	u1018
  3261   0019D4                     u1000:
  3262   0019D4  6A06               	clrf	??_I2C_2_Master_Read^0,c
  3263   0019D6                     u1018:
  3264   0019D6  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  3265   0019D8  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  3266   0019DA  010E               	movlb	14	; () banked
  3267   0019DC  51DA               	movf	218,w,b	;volatile
  3268   0019DE  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  3269   0019E0  0BDF               	andlw	-33
  3270   0019E2  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  3271   0019E4  6FDA               	movwf	218,b	;volatile
  3272   0019E6                     
  3273                           ; BSR set to: 14
  3274                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3275   0019E6  89DA               	bsf	218,4,b	;volatile
  3276   0019E8                     
  3277                           ; BSR set to: 14
  3278                           ;i2c.c: 61:   return tmp;
  3279   0019E8  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  3280   0019EA                     
  3281                           ; BSR set to: 14
  3282   0019EA  0012               	return		;funcret
  3283   0019EC                     __end_of_I2C_2_Master_Read:
  3284                           	callstack 0
  3285                           
  3286 ;; *************** function _color_click_init *****************
  3287 ;; Defined at:
  3288 ;;		line 5 in file "color.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;		None
  3291 ;; Auto vars:     Size  Location     Type
  3292 ;;		None
  3293 ;; Return value:  Size  Location     Type
  3294 ;;                  1    wreg      void 
  3295 ;; Registers used:
  3296 ;;		wreg, status,2, status,0, cstack
  3297 ;; Tracked objects:
  3298 ;;		On entry : 0/0
  3299 ;;		On exit  : 0/0
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3304 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3305 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3306 ;;Total ram usage:        1 bytes
  3307 ;; Hardware stack levels used: 1
  3308 ;; Hardware stack levels required when called: 5
  3309 ;; This function calls:
  3310 ;;		_I2C_2_Master_Init
  3311 ;;		_color_writetoaddr
  3312 ;; This function is called by:
  3313 ;;		_main
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317                           	psect	text22
  3318   001A2C                     __ptext22:
  3319                           	callstack 0
  3320   001A2C                     _color_click_init:
  3321                           	callstack 25
  3322   001A2C                     
  3323                           ;color.c: 8:     I2C_2_Master_Init();
  3324   001A2C  EC77  F00D         	call	_I2C_2_Master_Init	;wreg free
  3325   001A30                     
  3326                           ;color.c: 10:   color_writetoaddr(0x00, 0x01);
  3327   001A30  0E01               	movlw	1
  3328   001A32  6E07               	movwf	color_writetoaddr@value^0,c
  3329   001A34  0E00               	movlw	0
  3330   001A36  ECC5  F00D         	call	_color_writetoaddr
  3331   001A3A                     
  3332                           ;color.c: 11:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3333   001A3A  0E3F               	movlw	63
  3334   001A3C  6E09               	movwf	??_color_click_init^0,c
  3335   001A3E  0E55               	movlw	85
  3336   001A40                     u1497:
  3337   001A40  2EE8               	decfsz	wreg,f,c
  3338   001A42  D7FE               	bra	u1497
  3339   001A44  2E09               	decfsz	??_color_click_init^0,f,c
  3340   001A46  D7FC               	bra	u1497
  3341   001A48  F000               	nop	
  3342   001A4A                     
  3343                           ;color.c: 13:  color_writetoaddr(0x00, 0x03);
  3344   001A4A  0E03               	movlw	3
  3345   001A4C  6E07               	movwf	color_writetoaddr@value^0,c
  3346   001A4E  0E00               	movlw	0
  3347   001A50  ECC5  F00D         	call	_color_writetoaddr
  3348   001A54                     
  3349                           ;color.c: 15:  color_writetoaddr(0x01, 0xD5);
  3350   001A54  0ED5               	movlw	213
  3351   001A56  6E07               	movwf	color_writetoaddr@value^0,c
  3352   001A58  0E01               	movlw	1
  3353   001A5A  ECC5  F00D         	call	_color_writetoaddr
  3354   001A5E  0012               	return		;funcret
  3355   001A60                     __end_of_color_click_init:
  3356                           	callstack 0
  3357                           
  3358 ;; *************** function _color_writetoaddr *****************
  3359 ;; Defined at:
  3360 ;;		line 18 in file "color.c"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;  address         1    wreg     unsigned char 
  3363 ;;  value           1    6[COMRAM] unsigned char 
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;  address         1    7[COMRAM] unsigned char 
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  1    wreg      void 
  3368 ;; Registers used:
  3369 ;;		wreg, status,2, status,0, cstack
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3375 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3376 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3378 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3379 ;;Total ram usage:        2 bytes
  3380 ;; Hardware stack levels used: 1
  3381 ;; Hardware stack levels required when called: 4
  3382 ;; This function calls:
  3383 ;;		_I2C_2_Master_Start
  3384 ;;		_I2C_2_Master_Stop
  3385 ;;		_I2C_2_Master_Write
  3386 ;; This function is called by:
  3387 ;;		_color_click_init
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           	psect	text23
  3392   001B8A                     __ptext23:
  3393                           	callstack 0
  3394   001B8A                     _color_writetoaddr:
  3395                           	callstack 25
  3396                           
  3397                           ;incstack = 0
  3398                           ;color_writetoaddr@address stored from wreg
  3399   001B8A  6E08               	movwf	color_writetoaddr@address^0,c
  3400   001B8C                     
  3401                           ;color.c: 19:     I2C_2_Master_Start();
  3402   001B8C  EC03  F00E         	call	_I2C_2_Master_Start	;wreg free
  3403                           
  3404                           ;color.c: 20:     I2C_2_Master_Write(0x52 | 0x00);
  3405   001B90  0E52               	movlw	82
  3406   001B92  ECED  F00D         	call	_I2C_2_Master_Write
  3407                           
  3408                           ;color.c: 21:     I2C_2_Master_Write(0x80 | address);
  3409   001B96  5008               	movf	color_writetoaddr@address^0,w,c
  3410   001B98  0980               	iorlw	128
  3411   001B9A  ECED  F00D         	call	_I2C_2_Master_Write
  3412                           
  3413                           ;color.c: 22:     I2C_2_Master_Write(value);
  3414   001B9E  5007               	movf	color_writetoaddr@value^0,w,c
  3415   001BA0  ECED  F00D         	call	_I2C_2_Master_Write
  3416                           
  3417                           ;color.c: 23:     I2C_2_Master_Stop();
  3418   001BA4  ECFE  F00D         	call	_I2C_2_Master_Stop	;wreg free
  3419   001BA8  0012               	return		;funcret
  3420   001BAA                     __end_of_color_writetoaddr:
  3421                           	callstack 0
  3422                           
  3423 ;; *************** function _I2C_2_Master_Write *****************
  3424 ;; Defined at:
  3425 ;;		line 45 in file "i2c.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;  data_byte       1    wreg     unsigned char 
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;  data_byte       1    5[COMRAM] unsigned char 
  3430 ;; Return value:  Size  Location     Type
  3431 ;;                  1    wreg      void 
  3432 ;; Registers used:
  3433 ;;		wreg, status,2, status,0, cstack
  3434 ;; Tracked objects:
  3435 ;;		On entry : 0/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3440 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3442 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3443 ;;Total ram usage:        1 bytes
  3444 ;; Hardware stack levels used: 1
  3445 ;; Hardware stack levels required when called: 3
  3446 ;; This function calls:
  3447 ;;		_I2C_2_Master_Idle
  3448 ;; This function is called by:
  3449 ;;		_color_writetoaddr
  3450 ;;		_color_read_Red
  3451 ;;		_color_read_Blue
  3452 ;;		_color_read_Green
  3453 ;;		_color_read_Clear
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457                           	psect	text24
  3458   001BDA                     __ptext24:
  3459                           	callstack 0
  3460   001BDA                     _I2C_2_Master_Write:
  3461                           	callstack 26
  3462                           
  3463                           ;incstack = 0
  3464                           ;I2C_2_Master_Write@data_byte stored from wreg
  3465   001BDA  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  3466   001BDC                     
  3467                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3468   001BDC  ECA1  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3469   001BE0                     
  3470                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3471   001BE0  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3472   001BE4  0012               	return		;funcret
  3473   001BE6                     __end_of_I2C_2_Master_Write:
  3474                           	callstack 0
  3475                           
  3476 ;; *************** function _I2C_2_Master_Stop *****************
  3477 ;; Defined at:
  3478 ;;		line 39 in file "i2c.c"
  3479 ;; Parameters:    Size  Location     Type
  3480 ;;		None
  3481 ;; Auto vars:     Size  Location     Type
  3482 ;;		None
  3483 ;; Return value:  Size  Location     Type
  3484 ;;                  1    wreg      void 
  3485 ;; Registers used:
  3486 ;;		wreg, status,2, status,0, cstack
  3487 ;; Tracked objects:
  3488 ;;		On entry : 0/0
  3489 ;;		On exit  : 0/0
  3490 ;;		Unchanged: 0/0
  3491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3496 ;;Total ram usage:        0 bytes
  3497 ;; Hardware stack levels used: 1
  3498 ;; Hardware stack levels required when called: 3
  3499 ;; This function calls:
  3500 ;;		_I2C_2_Master_Idle
  3501 ;; This function is called by:
  3502 ;;		_color_writetoaddr
  3503 ;;		_color_read_Red
  3504 ;;		_color_read_Blue
  3505 ;;		_color_read_Green
  3506 ;;		_color_read_Clear
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           	psect	text25
  3511   001BFC                     __ptext25:
  3512                           	callstack 0
  3513   001BFC                     _I2C_2_Master_Stop:
  3514                           	callstack 26
  3515   001BFC                     
  3516                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3517   001BFC  ECA1  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3518   001C00                     
  3519                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3520   001C00  010E               	movlb	14	; () banked
  3521   001C02  85DA               	bsf	218,2,b	;volatile
  3522   001C04                     
  3523                           ; BSR set to: 14
  3524   001C04  0012               	return		;funcret
  3525   001C06                     __end_of_I2C_2_Master_Stop:
  3526                           	callstack 0
  3527                           
  3528 ;; *************** function _I2C_2_Master_Start *****************
  3529 ;; Defined at:
  3530 ;;		line 27 in file "i2c.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;		None
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;		None
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  1    wreg      void 
  3537 ;; Registers used:
  3538 ;;		wreg, status,2, status,0, cstack
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3548 ;;Total ram usage:        0 bytes
  3549 ;; Hardware stack levels used: 1
  3550 ;; Hardware stack levels required when called: 3
  3551 ;; This function calls:
  3552 ;;		_I2C_2_Master_Idle
  3553 ;; This function is called by:
  3554 ;;		_color_writetoaddr
  3555 ;;		_color_read_Red
  3556 ;;		_color_read_Blue
  3557 ;;		_color_read_Green
  3558 ;;		_color_read_Clear
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562                           	psect	text26
  3563   001C06                     __ptext26:
  3564                           	callstack 0
  3565   001C06                     _I2C_2_Master_Start:
  3566                           	callstack 26
  3567   001C06                     
  3568                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3569   001C06  ECA1  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3570   001C0A                     
  3571                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3572   001C0A  010E               	movlb	14	; () banked
  3573   001C0C  81DA               	bsf	218,0,b	;volatile
  3574   001C0E                     
  3575                           ; BSR set to: 14
  3576   001C0E  0012               	return		;funcret
  3577   001C10                     __end_of_I2C_2_Master_Start:
  3578                           	callstack 0
  3579                           
  3580 ;; *************** function _I2C_2_Master_Idle *****************
  3581 ;; Defined at:
  3582 ;;		line 22 in file "i2c.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;		None
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;		None
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  1    wreg      void 
  3589 ;; Registers used:
  3590 ;;		wreg, status,2, status,0
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3598 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3599 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3600 ;;Total ram usage:        1 bytes
  3601 ;; Hardware stack levels used: 1
  3602 ;; Hardware stack levels required when called: 2
  3603 ;; This function calls:
  3604 ;;		Nothing
  3605 ;; This function is called by:
  3606 ;;		_I2C_2_Master_Start
  3607 ;;		_I2C_2_Master_RepStart
  3608 ;;		_I2C_2_Master_Stop
  3609 ;;		_I2C_2_Master_Write
  3610 ;;		_I2C_2_Master_Read
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614                           	psect	text27
  3615   001B42                     __ptext27:
  3616                           	callstack 0
  3617   001B42                     _I2C_2_Master_Idle:
  3618                           	callstack 26
  3619   001B42                     l64:
  3620   001B42  010E               	movlb	14	; () banked
  3621   001B44  B5D8               	btfsc	216,2,b	;volatile
  3622   001B46  EFA7  F00D         	goto	u851
  3623   001B4A  EFA9  F00D         	goto	u850
  3624   001B4E                     u851:
  3625   001B4E  EFA1  F00D         	goto	l64
  3626   001B52                     u850:
  3627   001B52                     
  3628                           ; BSR set to: 14
  3629   001B52  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3630   001B56  0E1F               	movlw	31
  3631   001B58  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  3632   001B5A  A4D8               	btfss	status,2,c
  3633   001B5C  EFB2  F00D         	goto	u861
  3634   001B60  EFB4  F00D         	goto	u860
  3635   001B64                     u861:
  3636   001B64  EFA1  F00D         	goto	l64
  3637   001B68                     u860:
  3638   001B68                     
  3639                           ; BSR set to: 14
  3640   001B68  0012               	return		;funcret
  3641   001B6A                     __end_of_I2C_2_Master_Idle:
  3642                           	callstack 0
  3643                           
  3644 ;; *************** function _I2C_2_Master_Init *****************
  3645 ;; Defined at:
  3646 ;;		line 4 in file "i2c.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;		None
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;		None
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  1    wreg      void 
  3653 ;; Registers used:
  3654 ;;		wreg, status,2
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3664 ;;Total ram usage:        0 bytes
  3665 ;; Hardware stack levels used: 1
  3666 ;; Hardware stack levels required when called: 2
  3667 ;; This function calls:
  3668 ;;		Nothing
  3669 ;; This function is called by:
  3670 ;;		_color_click_init
  3671 ;;		_main
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           	psect	text28
  3676   001AEE                     __ptext28:
  3677                           	callstack 0
  3678   001AEE                     _I2C_2_Master_Init:
  3679                           	callstack 27
  3680   001AEE                     
  3681                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3682   001AEE  010E               	movlb	14	; () banked
  3683   001AF0  51D9               	movf	217,w,b	;volatile
  3684   001AF2  0BF0               	andlw	-16
  3685   001AF4  0908               	iorlw	8
  3686   001AF6  6FD9               	movwf	217,b	;volatile
  3687   001AF8                     
  3688                           ; BSR set to: 14
  3689                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3690   001AF8  8BD9               	bsf	217,5,b	;volatile
  3691                           
  3692                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3693   001AFA  0E9F               	movlw	159
  3694   001AFC  6FD6               	movwf	214,b	;volatile
  3695   001AFE                     
  3696                           ; BSR set to: 14
  3697                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3698   001AFE  8A84               	bsf	132,5,c	;volatile
  3699   001B00                     
  3700                           ; BSR set to: 14
  3701                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3702   001B00  8C84               	bsf	132,6,c	;volatile
  3703   001B02                     
  3704                           ; BSR set to: 14
  3705                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3706   001B02  9BA7               	bcf	167,5,b	;volatile
  3707   001B04                     
  3708                           ; BSR set to: 14
  3709                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3710   001B04  9DA7               	bcf	167,6,b	;volatile
  3711                           
  3712                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3713   001B06  0E1D               	movlw	29
  3714   001B08  6F1D               	movwf	29,b	;volatile
  3715                           
  3716                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3717   001B0A  0E1E               	movlw	30
  3718   001B0C  6F1C               	movwf	28,b	;volatile
  3719                           
  3720                           ;i2c.c: 18:   RD5PPS=0x1C;
  3721   001B0E  0E1C               	movlw	28
  3722   001B10  6F6F               	movwf	111,b	;volatile
  3723                           
  3724                           ;i2c.c: 19:   RD6PPS=0x1B;
  3725   001B12  0E1B               	movlw	27
  3726   001B14  6F70               	movwf	112,b	;volatile
  3727   001B16                     
  3728                           ; BSR set to: 14
  3729   001B16  0012               	return		;funcret
  3730   001B18                     __end_of_I2C_2_Master_Init:
  3731                           	callstack 0
  3732                           
  3733 ;; *************** function _Interrupts_init *****************
  3734 ;; Defined at:
  3735 ;;		line 9 in file "interrupts.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;		None
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;		None
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  1    wreg      void 
  3742 ;; Registers used:
  3743 ;;		None
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3753 ;;Total ram usage:        0 bytes
  3754 ;; Hardware stack levels used: 1
  3755 ;; Hardware stack levels required when called: 2
  3756 ;; This function calls:
  3757 ;;		Nothing
  3758 ;; This function is called by:
  3759 ;;		_main
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           	psect	text29
  3764   001BE6                     __ptext29:
  3765                           	callstack 0
  3766   001BE6                     _Interrupts_init:
  3767                           	callstack 28
  3768   001BE6                     
  3769                           ;interrupts.c: 15:     INTCONbits.PEIE=1;
  3770   001BE6  8CF2               	bsf	242,6,c	;volatile
  3771                           
  3772                           ;interrupts.c: 16:     PIE4bits.RC4IE=1;
  3773   001BE8  010E               	movlb	14	; () banked
  3774   001BEA  872D               	bsf	45,3,b	;volatile
  3775                           
  3776                           ;interrupts.c: 17:     PIE4bits.TX4IE=0;
  3777   001BEC  952D               	bcf	45,2,b	;volatile
  3778                           
  3779                           ;interrupts.c: 18:     INTCONbits.GIE=1;
  3780   001BEE  8EF2               	bsf	242,7,c	;volatile
  3781   001BF0                     
  3782                           ; BSR set to: 14
  3783   001BF0  0012               	return		;funcret
  3784   001BF2                     __end_of_Interrupts_init:
  3785                           	callstack 0
  3786                           
  3787 ;; *************** function _HighISR *****************
  3788 ;; Defined at:
  3789 ;;		line 37 in file "interrupts.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;		None
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;		None
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  1    wreg      void 
  3796 ;; Registers used:
  3797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3805 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3806 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3807 ;;Total ram usage:        2 bytes
  3808 ;; Hardware stack levels used: 1
  3809 ;; Hardware stack levels required when called: 1
  3810 ;; This function calls:
  3811 ;;		_getCharFromTxBuf
  3812 ;;		_isDataInTxBuf
  3813 ;;		_putCharToRxBuf
  3814 ;; This function is called by:
  3815 ;;		Interrupt level 2
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819                           	psect	intcode
  3820   000008                     __pintcode:
  3821                           	callstack 0
  3822   000008                     _HighISR:
  3823                           	callstack 21
  3824                           
  3825                           ; BSR set to: 14
  3826                           ;incstack = 0
  3827   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3828   00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  3829   00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  3830   000012                     
  3831                           ;interrupts.c: 39:     if (PIR4bits.RC4IF == 1){
  3832   000012  010E               	movlb	14	; () banked
  3833   000014  A737               	btfss	55,3,b	;volatile
  3834   000016  EF0F  F000         	goto	i2u108_41
  3835   00001A  EF11  F000         	goto	i2u108_40
  3836   00001E                     i2u108_41:
  3837   00001E  EF14  F000         	goto	i2l2147
  3838   000022                     i2u108_40:
  3839   000022                     
  3840                           ; BSR set to: 14
  3841                           ;interrupts.c: 40:         putCharToRxBuf(RC4REG);
  3842   000022  51E3               	movf	227,w,b	;volatile
  3843   000024  EC8C  F00D         	call	_putCharToRxBuf
  3844   000028                     i2l2147:
  3845                           
  3846                           ;interrupts.c: 42:     if (PIR4bits.TX4IF == 1 && PIE4bits.TX4IE==1){
  3847   000028  010E               	movlb	14	; () banked
  3848   00002A  A537               	btfss	55,2,b	;volatile
  3849   00002C  EF1A  F000         	goto	i2u109_41
  3850   000030  EF1C  F000         	goto	i2u109_40
  3851   000034                     i2u109_41:
  3852   000034  EF35  F000         	goto	i2l271
  3853   000038                     i2u109_40:
  3854   000038                     
  3855                           ; BSR set to: 14
  3856   000038  A52D               	btfss	45,2,b	;volatile
  3857   00003A  EF21  F000         	goto	i2u110_41
  3858   00003E  EF23  F000         	goto	i2u110_40
  3859   000042                     i2u110_41:
  3860   000042  EF35  F000         	goto	i2l271
  3861   000046                     i2u110_40:
  3862   000046                     
  3863                           ; BSR set to: 14
  3864                           ;interrupts.c: 43:         if (isDataInTxBuf()==1 ) {TX4REG = getCharFromTxBuf();}
  3865   000046  ECE1  F00D         	call	_isDataInTxBuf	;wreg free
  3866   00004A  06E8               	decf	wreg,f,c
  3867   00004C  A4D8               	btfss	status,2,c
  3868   00004E  EF2B  F000         	goto	i2u111_41
  3869   000052  EF2D  F000         	goto	i2u111_40
  3870   000056                     i2u111_41:
  3871   000056  EF33  F000         	goto	i2l269
  3872   00005A                     i2u111_40:
  3873   00005A  EC61  F00D         	call	_getCharFromTxBuf	;wreg free
  3874   00005E  010E               	movlb	14	; () banked
  3875   000060  6FE4               	movwf	228,b	;volatile
  3876   000062  EF35  F000         	goto	i2l271
  3877   000066                     i2l269:
  3878   000066  010E               	movlb	14	; () banked
  3879   000068  952D               	bcf	45,2,b	;volatile
  3880   00006A                     i2l271:
  3881                           
  3882                           ; BSR set to: 14
  3883   00006A  C004  FFDA         	movff	??_HighISR+1,fsr2h
  3884   00006E  C003  FFD9         	movff	??_HighISR,fsr2l
  3885   000072  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3886   000074  0011               	retfie		f
  3887   000076                     __end_of_HighISR:
  3888                           	callstack 0
  3889                           
  3890 ;; *************** function _putCharToRxBuf *****************
  3891 ;; Defined at:
  3892 ;;		line 56 in file "serial.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;  byte            1    wreg     unsigned char 
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;  byte            1    0[COMRAM] unsigned char 
  3897 ;; Return value:  Size  Location     Type
  3898 ;;                  1    wreg      void 
  3899 ;; Registers used:
  3900 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3901 ;; Tracked objects:
  3902 ;;		On entry : 0/0
  3903 ;;		On exit  : 0/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3907 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3909 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3910 ;;Total ram usage:        1 bytes
  3911 ;; Hardware stack levels used: 1
  3912 ;; This function calls:
  3913 ;;		Nothing
  3914 ;; This function is called by:
  3915 ;;		_HighISR
  3916 ;; This function uses a non-reentrant model
  3917 ;;
  3918                           
  3919                           	psect	text31
  3920   001B18                     __ptext31:
  3921                           	callstack 0
  3922   001B18                     _putCharToRxBuf:
  3923                           	callstack 21
  3924                           
  3925                           ; BSR set to: 14
  3926                           ;incstack = 0
  3927                           ;putCharToRxBuf@byte stored from wreg
  3928   001B18  6E01               	movwf	putCharToRxBuf@byte^0,c
  3929   001B1A                     
  3930                           ;serial.c: 57:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  3931   001B1A  0E13               	movlw	19
  3932   001B1C  645A               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  3933   001B1E  EF93  F00D         	goto	i2u105_41
  3934   001B22  EF95  F00D         	goto	i2u105_40
  3935   001B26                     i2u105_41:
  3936   001B26  EF97  F00D         	goto	i2l2065
  3937   001B2A                     i2u105_40:
  3938   001B2A  0E00               	movlw	0
  3939   001B2C  6E5A               	movwf	_RxBufWriteCnt^0,c	;volatile
  3940   001B2E                     i2l2065:
  3941                           
  3942                           ;serial.c: 58:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  3943   001B2E  0EC1               	movlw	low _EUSART4RXbuf
  3944   001B30  245A               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  3945   001B32  6ED9               	movwf	fsr2l,c
  3946   001B34  6ADA               	clrf	fsr2h,c
  3947   001B36  0E00               	movlw	high _EUSART4RXbuf
  3948   001B38  22DA               	addwfc	fsr2h,f,c
  3949   001B3A  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  3950   001B3E  2A5A               	incf	_RxBufWriteCnt^0,f,c	;volatile
  3951   001B40  0012               	return		;funcret
  3952   001B42                     __end_of_putCharToRxBuf:
  3953                           	callstack 0
  3954                           
  3955 ;; *************** function _isDataInTxBuf *****************
  3956 ;; Defined at:
  3957 ;;		line 84 in file "serial.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;		None
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;		None
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  1    wreg      unsigned char 
  3964 ;; Registers used:
  3965 ;;		wreg, status,2, status,0
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3975 ;;Total ram usage:        0 bytes
  3976 ;; Hardware stack levels used: 1
  3977 ;; This function calls:
  3978 ;;		Nothing
  3979 ;; This function is called by:
  3980 ;;		_HighISR
  3981 ;;		_sendTxBuf
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985                           	psect	text32
  3986   001BC2                     __ptext32:
  3987                           	callstack 0
  3988   001BC2                     _isDataInTxBuf:
  3989                           	callstack 21
  3990   001BC2                     
  3991                           ;serial.c: 85:     return (TxBufWriteCnt!=TxBufReadCnt);
  3992   001BC2  5057               	movf	_TxBufReadCnt^0,w,c	;volatile
  3993   001BC4  1858               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  3994   001BC6  A4D8               	btfss	status,2,c
  3995   001BC8  EFE8  F00D         	goto	i2u45_41
  3996   001BCC  EFEB  F00D         	goto	i2u45_40
  3997   001BD0                     i2u45_41:
  3998   001BD0  0E01               	movlw	1
  3999   001BD2  EFEC  F00D         	goto	i2u46_40
  4000   001BD6                     i2u45_40:
  4001   001BD6  0E00               	movlw	0
  4002   001BD8                     i2u46_40:
  4003   001BD8  0012               	return		;funcret
  4004   001BDA                     __end_of_isDataInTxBuf:
  4005                           	callstack 0
  4006                           
  4007 ;; *************** function _getCharFromTxBuf *****************
  4008 ;; Defined at:
  4009 ;;		line 70 in file "serial.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;		None
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;		None
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  1    wreg      unsigned char 
  4016 ;; Registers used:
  4017 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4025 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4026 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4027 ;;Total ram usage:        2 bytes
  4028 ;; Hardware stack levels used: 1
  4029 ;; This function calls:
  4030 ;;		Nothing
  4031 ;; This function is called by:
  4032 ;;		_HighISR
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036                           	psect	text33
  4037   001AC2                     __ptext33:
  4038                           	callstack 0
  4039   001AC2                     _getCharFromTxBuf:
  4040                           	callstack 21
  4041   001AC2                     
  4042                           ;serial.c: 71:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  4043   001AC2  0E3B               	movlw	59
  4044   001AC4  6457               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  4045   001AC6  EF67  F00D         	goto	i2u106_41
  4046   001ACA  EF69  F00D         	goto	i2u106_40
  4047   001ACE                     i2u106_41:
  4048   001ACE  EF6B  F00D         	goto	i2l2073
  4049   001AD2                     i2u106_40:
  4050   001AD2  0E00               	movlw	0
  4051   001AD4  6E57               	movwf	_TxBufReadCnt^0,c	;volatile
  4052   001AD6                     i2l2073:
  4053                           
  4054                           ;serial.c: 72:     return EUSART4TXbuf[TxBufReadCnt++];
  4055   001AD6  2A57               	incf	_TxBufReadCnt^0,f,c	;volatile
  4056   001AD8  0457               	decf	_TxBufReadCnt^0,w,c	;volatile
  4057   001ADA  6E01               	movwf	??_getCharFromTxBuf^0,c
  4058   001ADC  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  4059   001ADE  0E00               	movlw	low _EUSART4TXbuf
  4060   001AE0  2401               	addwf	??_getCharFromTxBuf^0,w,c
  4061   001AE2  6ED9               	movwf	fsr2l,c
  4062   001AE4  0E01               	movlw	high _EUSART4TXbuf
  4063   001AE6  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  4064   001AE8  6EDA               	movwf	fsr2h,c
  4065   001AEA  50DF               	movf	indf2,w,c
  4066   001AEC  0012               	return		;funcret
  4067   001AEE                     __end_of_getCharFromTxBuf:
  4068                           	callstack 0
  4069                           
  4070                           	psect	rparam
  4071   000000                     
  4072                           	psect	temp
  4073   00005B                     btemp:
  4074                           	callstack 0
  4075   00005B                     	ds	1
  4076   000000                     int$flags	set	btemp
  4077   000000                     wtemp8	set	btemp+1
  4078   000000                     ttemp5	set	btemp+1
  4079   000000                     ttemp6	set	btemp+4
  4080   000000                     ttemp7	set	btemp+8
  4081                           
  4082                           	psect	idloc
  4083                           
  4084                           ;Config register IDLOC0 @ 0x200000
  4085                           ;	unspecified, using default values
  4086   200000                     	org	2097152
  4087   200000  0FFF               	dw	4095
  4088                           
  4089                           ;Config register IDLOC1 @ 0x200002
  4090                           ;	unspecified, using default values
  4091   200002                     	org	2097154
  4092   200002  0FFF               	dw	4095
  4093                           
  4094                           ;Config register IDLOC2 @ 0x200004
  4095                           ;	unspecified, using default values
  4096   200004                     	org	2097156
  4097   200004  0FFF               	dw	4095
  4098                           
  4099                           ;Config register IDLOC3 @ 0x200006
  4100                           ;	unspecified, using default values
  4101   200006                     	org	2097158
  4102   200006  0FFF               	dw	4095
  4103                           
  4104                           ;Config register IDLOC4 @ 0x200008
  4105                           ;	unspecified, using default values
  4106   200008                     	org	2097160
  4107   200008  0FFF               	dw	4095
  4108                           
  4109                           ;Config register IDLOC5 @ 0x20000A
  4110                           ;	unspecified, using default values
  4111   20000A                     	org	2097162
  4112   20000A  0FFF               	dw	4095
  4113                           
  4114                           ;Config register IDLOC6 @ 0x20000C
  4115                           ;	unspecified, using default values
  4116   20000C                     	org	2097164
  4117   20000C  0FFF               	dw	4095
  4118                           
  4119                           ;Config register IDLOC7 @ 0x20000E
  4120                           ;	unspecified, using default values
  4121   20000E                     	org	2097166
  4122   20000E  0FFF               	dw	4095
  4123                           
  4124                           	psect	config
  4125                           
  4126                           ;Config register CONFIG1L @ 0x300000
  4127                           ;	External Oscillator mode Selection bits
  4128                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4129                           ;	Power-up default value for COSC bits
  4130                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4131   300000                     	org	3145728
  4132   300000  AA                 	db	170
  4133                           
  4134                           ;Config register CONFIG1H @ 0x300001
  4135                           ;	unspecified, using default values
  4136                           ;	Clock Out Enable bit
  4137                           ;	CLKOUTEN = 0x1, unprogrammed default
  4138                           ;	Clock Switch Enable bit
  4139                           ;	CSWEN = 0x1, unprogrammed default
  4140                           ;	Fail-Safe Clock Monitor Enable bit
  4141                           ;	FCMEN = 0x1, unprogrammed default
  4142   300001                     	org	3145729
  4143   300001  FF                 	db	255
  4144                           
  4145                           ;Config register CONFIG2L @ 0x300002
  4146                           ;	unspecified, using default values
  4147                           ;	Master Clear Enable bit
  4148                           ;	MCLRE = 0x1, unprogrammed default
  4149                           ;	Power-up Timer Enable bit
  4150                           ;	PWRTE = 0x1, unprogrammed default
  4151                           ;	Low-power BOR enable bit
  4152                           ;	LPBOREN = 0x1, unprogrammed default
  4153                           ;	Brown-out Reset Enable bits
  4154                           ;	BOREN = 0x3, unprogrammed default
  4155   300002                     	org	3145730
  4156   300002  FF                 	db	255
  4157                           
  4158                           ;Config register CONFIG2H @ 0x300003
  4159                           ;	unspecified, using default values
  4160                           ;	Brown Out Reset Voltage selection bits
  4161                           ;	BORV = 0x3, unprogrammed default
  4162                           ;	ZCD Disable bit
  4163                           ;	ZCD = 0x1, unprogrammed default
  4164                           ;	PPSLOCK bit One-Way Set Enable bit
  4165                           ;	PPS1WAY = 0x1, unprogrammed default
  4166                           ;	Stack Full/Underflow Reset Enable bit
  4167                           ;	STVREN = 0x1, unprogrammed default
  4168                           ;	Debugger Enable bit
  4169                           ;	DEBUG = 0x1, unprogrammed default
  4170                           ;	Extended Instruction Set Enable bit
  4171                           ;	XINST = 0x1, unprogrammed default
  4172   300003                     	org	3145731
  4173   300003  FF                 	db	255
  4174                           
  4175                           ;Config register CONFIG3L @ 0x300004
  4176                           ;	WDT Period Select bits
  4177                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4178                           ;	WDT operating mode
  4179                           ;	WDTE = OFF, WDT Disabled
  4180   300004                     	org	3145732
  4181   300004  9F                 	db	159
  4182                           
  4183                           ;Config register CONFIG3H @ 0x300005
  4184                           ;	unspecified, using default values
  4185                           ;	WDT Window Select bits
  4186                           ;	WDTCWS = 0x7, unprogrammed default
  4187                           ;	WDT input clock selector
  4188                           ;	WDTCCS = 0x7, unprogrammed default
  4189   300005                     	org	3145733
  4190   300005  FF                 	db	255
  4191                           
  4192                           ;Config register CONFIG4L @ 0x300006
  4193                           ;	unspecified, using default values
  4194                           ;	Write Protection Block 0
  4195                           ;	WRT0 = 0x1, unprogrammed default
  4196                           ;	Write Protection Block 1
  4197                           ;	WRT1 = 0x1, unprogrammed default
  4198                           ;	Write Protection Block 2
  4199                           ;	WRT2 = 0x1, unprogrammed default
  4200                           ;	Write Protection Block 3
  4201                           ;	WRT3 = 0x1, unprogrammed default
  4202                           ;	Write Protection Block 3
  4203                           ;	WRT4 = 0x1, unprogrammed default
  4204                           ;	Write Protection Block 3
  4205                           ;	WRT5 = 0x1, unprogrammed default
  4206                           ;	Write Protection Block 3
  4207                           ;	WRT6 = 0x1, unprogrammed default
  4208                           ;	Write Protection Block 3
  4209                           ;	WRT7 = 0x1, unprogrammed default
  4210   300006                     	org	3145734
  4211   300006  FF                 	db	255
  4212                           
  4213                           ;Config register CONFIG4H @ 0x300007
  4214                           ;	unspecified, using default values
  4215                           ;	Configuration Register Write Protection bit
  4216                           ;	WRTC = 0x1, unprogrammed default
  4217                           ;	Boot Block Write Protection bit
  4218                           ;	WRTB = 0x1, unprogrammed default
  4219                           ;	Data EEPROM Write Protection bit
  4220                           ;	WRTD = 0x1, unprogrammed default
  4221                           ;	Scanner Enable bit
  4222                           ;	SCANE = 0x1, unprogrammed default
  4223                           ;	Low Voltage Programming Enable bit
  4224                           ;	LVP = 0x1, unprogrammed default
  4225   300007                     	org	3145735
  4226   300007  FF                 	db	255
  4227                           
  4228                           ;Config register CONFIG5L @ 0x300008
  4229                           ;	unspecified, using default values
  4230                           ;	UserNVM Program Memory Code Protection bit
  4231                           ;	CP = 0x1, unprogrammed default
  4232                           ;	DataNVM Memory Code Protection bit
  4233                           ;	CPD = 0x1, unprogrammed default
  4234   300008                     	org	3145736
  4235   300008  FF                 	db	255
  4236                           
  4237                           ;Config register CONFIG5H @ 0x300009
  4238                           ;	unspecified, using default values
  4239   300009                     	org	3145737
  4240   300009  FF                 	db	255
  4241                           
  4242                           ;Config register CONFIG6L @ 0x30000A
  4243                           ;	unspecified, using default values
  4244                           ;	Table Read Protection Block 0
  4245                           ;	EBTR0 = 0x1, unprogrammed default
  4246                           ;	Table Read Protection Block 1
  4247                           ;	EBTR1 = 0x1, unprogrammed default
  4248                           ;	Table Read Protection Block 2
  4249                           ;	EBTR2 = 0x1, unprogrammed default
  4250                           ;	Table Read Protection Block 3
  4251                           ;	EBTR3 = 0x1, unprogrammed default
  4252                           ;	Table Read Protection Block 4
  4253                           ;	EBTR4 = 0x1, unprogrammed default
  4254                           ;	Table Read Protection Block 5
  4255                           ;	EBTR5 = 0x1, unprogrammed default
  4256                           ;	Table Read Protection Block 6
  4257                           ;	EBTR6 = 0x1, unprogrammed default
  4258                           ;	Table Read Protection Block 7
  4259                           ;	EBTR7 = 0x1, unprogrammed default
  4260   30000A                     	org	3145738
  4261   30000A  FF                 	db	255
  4262                           
  4263                           ;Config register CONFIG6H @ 0x30000B
  4264                           ;	unspecified, using default values
  4265                           ;	Boot Block Table Read Protection bit
  4266                           ;	EBTRB = 0x1, unprogrammed default
  4267   30000B                     	org	3145739
  4268   30000B  FF                 	db	255
  4269                           tosu	equ	0xFFF
  4270                           tosh	equ	0xFFE
  4271                           tosl	equ	0xFFD
  4272                           stkptr	equ	0xFFC
  4273                           pclatu	equ	0xFFB
  4274                           pclath	equ	0xFFA
  4275                           pcl	equ	0xFF9
  4276                           tblptru	equ	0xFF8
  4277                           tblptrh	equ	0xFF7
  4278                           tblptrl	equ	0xFF6
  4279                           tablat	equ	0xFF5
  4280                           prodh	equ	0xFF4
  4281                           prodl	equ	0xFF3
  4282                           indf0	equ	0xFEF
  4283                           postinc0	equ	0xFEE
  4284                           postdec0	equ	0xFED
  4285                           preinc0	equ	0xFEC
  4286                           plusw0	equ	0xFEB
  4287                           fsr0h	equ	0xFEA
  4288                           fsr0l	equ	0xFE9
  4289                           wreg	equ	0xFE8
  4290                           indf1	equ	0xFE7
  4291                           postinc1	equ	0xFE6
  4292                           postdec1	equ	0xFE5
  4293                           preinc1	equ	0xFE4
  4294                           plusw1	equ	0xFE3
  4295                           fsr1h	equ	0xFE2
  4296                           fsr1l	equ	0xFE1
  4297                           bsr	equ	0xFE0
  4298                           indf2	equ	0xFDF
  4299                           postinc2	equ	0xFDE
  4300                           postdec2	equ	0xFDD
  4301                           preinc2	equ	0xFDC
  4302                           plusw2	equ	0xFDB
  4303                           fsr2h	equ	0xFDA
  4304                           fsr2l	equ	0xFD9
  4305                           status	equ	0xFD8

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     97     154
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2052$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1999$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1999$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    S851DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    S851DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                66    66      0    8895
                                             31 BANK0     66    66      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                   _color_click_init
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                    _initDCmotorsPWM
                         _initUSART4
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    7316
                                              6 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6830
                                             84 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    6369
                                             66 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4802
                                             31 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2533
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1177
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              5 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Green                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Clear                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Blue                                      7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              2     2      0      22
                                              2 COMRAM     2     2      0
                   _getCharFromTxBuf
                      _isDataInTxBuf
                     _putCharToRxBuf
 ---------------------------------------------------------------------------------
 (10) _putCharToRxBuf                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _isDataInTxBuf                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _getCharFromTxBuf                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_read_Blue
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Clear
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Green
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Red
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 _HighISR (ROOT)
   _getCharFromTxBuf
   _isDataInTxBuf
   _putCharToRxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      60        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     61      9A       5       96.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBIGSFRhlllhl     52      0       0      42        0.0%
BITBIGSFRhlllll     37      0       0      44        0.0%
BITBIGSFRhhhhl      32      0       0      33        0.0%
BITBIGSFRllh        2D      0       0      47        0.0%
BITBIGSFRlllhll     2A      0       0      54        0.0%
BITBIGSFRlllll      26      0       0      58        0.0%
BITBIGSFRlllhhh     1E      0       0      48        0.0%
BITBIGSFRhhhlll     1E      0       0      37        0.0%
BITBIGSFRlllhhh     11      0       0      49        0.0%
BITBIGSFRlllhll      F      0       0      56        0.0%
BITBIGSFRhhhlhh      E      0       0      34        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhll      9      0       0      55        0.0%
BITBIGSFRhlllll      8      0       0      45        0.0%
BITBIGSFRllllh       6      0       0      57        0.0%
BITBIGSFRlllhll      6      0       0      53        0.0%
BITBIGSFRlllhlh      5      0       0      52        0.0%
BITBIGSFRlllhhl      3      0       0      51        0.0%
BITBIGSFRhllllh      2      0       0      43        0.0%
BITBIGSFRhhhllh      2      0       0      36        0.0%
BITBIGSFRhlllhh      1      0       0      41        0.0%
BITBIGSFRhlhhh       1      0       0      38        0.0%
BITBIGSFRhhhlhl      1      0       0      35        0.0%
BITBIGSFRlllhhh      1      0       0      50        0.0%
BITBIGSFRhlhhl       1      0       0      39        0.0%
BITBIGSFRhllh        1      0       0      40        0.0%
BITBIGSFRlh          1      0       0      46        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     130      59        0.0%
DATA                 0      0     130       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Mar 07 13:41:59 2023

               _color_read_Red 1826                _color_read_Blue 1916                             l22 1BA8  
                           l31 18C4                             l25 1874                             l34 1914  
                           l19 1A5E                             l28 1964                             l61 1B16  
                           l70 1C0E                             l64 1B42                             l73 1BFA  
                           l82 19EA                             l67 1B68                             l76 1C04  
                           l79 1BE4               _color_read_Clear 18C6               _color_read_Green 1876  
            ??_Interrupts_init 0005                            l133 1708                            l310 1B88  
                          l231 15AC                            l322 1BC0                            l262 1BF0  
                          l319 1BAC                            l328 1AC0                            l490 1378  
                          l477 1214                            u850 1B52                            u851 1B4E  
                          u860 1B68                            u861 1B64                            _abs 19EC  
                          _pad 170A                            wreg 000FE8                           l1103 1A22  
                         l2001 167A                           l1041 17D4                           l1106 1A2A  
                         l2011 16E2                           l2003 168A                           ?_abs 0017  
                         l2021 16FC                           l2013 16E4                           l2005 16B0  
                         l1118 1678                           l1126 19A8                           l2023 1706  
                         l2015 16EE                           l2007 16B4                           l2031 1B78  
                         l1063 172C                           l1072 0E9E                           l2017 16F0  
                         l2009 16D8                           l2033 1B82                           l2025 1B6A  
                         l2201 10C0                           l1129 1C10                           l1074 0EA6  
                         l2019 16FA                           l2035 1B84                           l2027 1B74  
                         l2211 1102                           l2203 10C4                           l1067 1782  
                         l1075 0EEC                           l2037 1B86                           l2029 1B76  
                         l2053 1A92                           l2221 115C                           l2213 1120  
                         l2205 10D2                           l2301 0E76                           l1093 14C6  
                         l1086 108C                           l2039 1BE6                           l2055 1A96  
                         l2223 118A                           l2215 1128                           l2231 11C4  
                         l2207 10F2                           l2311 0ED4                           l2303 0E92  
                         l2057 1AA4                           l2233 11D4                           l2225 11AA  
                         l2217 113C                           l2209 10F6                           l2241 121A  
                         l2321 0F02                           l2313 0EE0                           l2305 0EAE  
                         l2401 14DA                           l2059 1AA8                           l2235 11F4  
                         l2227 11AC                           l2219 114A                           l2251 127A  
                         l2243 1228                           l2331 100E                           l2323 0F84  
                         l2315 0EE8                           l2307 0EBE                           l1099 1824  
                         l2411 14FA                           l2403 14DE                           l2229 11BE  
                         l2261 12F0                           l2253 1298                           l2245 1248  
                         l2181 15FC                           l2173 15B0                           l2341 106C  
                         l2333 102C                           l2325 0F8A                           l2317 0EF4  
                         l2309 0EC4                           l2421 1516                           l2413 14FE  
                         l2405 14E2                           l2271 1358                           l2263 1310  
                         l2255 12A0                           l2247 124C                           l2239 1216  
                         l2183 1632                           l2175 15C2                           l2191 1984  
                         l2335 1046                           l2327 0F90                           l2319 0EFC  
                         l2351 13BA                           l2431 152E                           l2423 151E  
                         l2415 1502                           l2407 14EA                           l2265 1322  
                         l2257 12B4                           l2249 125A                           l2177 15D4  
                         l2193 1988                           l2281 1738                           l2337 1056  
                         l2329 0FF4                           l2361 145C                           l2353 13BE  
                         l2345 137A                           l2441 1538                           l2433 1530  
                         l2425 1522                           l2417 1506                           l2409 14F2  
                         l2195 108E                           l2259 12C2                           l2267 1328  
                         l2291 1A06                           l2179 15DE                           l2187 1966  
                         l2283 174C                           l2275 170A                           l2339 105C  
                         l2355 13CE                           l2347 139E                           l2451 156A  
                         l2443 153A                           l2435 1532                           l2427 1526  
                         l2419 150E                           l2197 1092                           l2269 1338  
                         l2189 1972                           l2285 1750                           l2277 1718  
                         l2293 0E12                           l2365 148C                           l2357 13EA  
                         l2349 13AC                           l2381 181A                           l2453 15A0  
                         l2445 1546                           l2437 1534                           l2429 152A  
                         l1823 1B42                           l2199 10A0                           l2287 176E  
                         l2279 1724                           l2295 0E32                           l2359 1406  
                         l2375 17D6                           l2391 17A6                           l2447 1552  
                         l2439 1536                           l1921 1AEE                           l1825 1B52  
                         l2289 19EC                           l2297 0E46                           l2369 149E  
                         l2377 17E2                           l2393 17C2                           l2385 1784  
                         l2449 155E                           l1931 1B04                           l1923 1AF8  
                         l2299 0E56                           l2379 17FE                           l2387 1796  
                         l1925 1AFE                           l1933 1B8C                           l1941 19B0  
                         l2389 179E                           l2397 14C8                           l1927 1B00  
                         l1943 19B8                           l1935 1BF2                           l2399 14D4  
                         l1929 1B02                           l1881 1C0A                           l1945 19C0  
                         l1937 1BF6                           l1953 1BAC                           l1883 1BDC  
                         l1971 1A3A                           l1947 19E6                           l1939 19AC  
                         l1955 1BBC                           l1885 1BE0                           l1973 1A4A  
                         l1949 19E8                           ?_pad 0015                           l1879 1C06  
                         l1887 1BFC                           l1975 1A54                           l1967 1A2C  
                         l1983 1916                           l1991 18BC                           l1889 1C00  
                         l1969 1A30                           l1985 195C                           l1977 1826  
                         l1995 18C6                           l1979 186C                           l1997 190C  
                         l1989 1876                           STR_1 0E01                           u1000 19D4  
                         u1001 19CC                           u1020 1BBC                           u1021 1BB8  
                         u1040 1AC0                           u1200 10D2                           u1041 1ABC  
                         u1201 10CE                           u1018 19D6                           u1211 10FC  
                         u1220 1120                           u1300 12F0                           u1140 15C2  
                         u1221 111C                           u1301 12EC                           u1141 15BE  
                         u1230 114A                           u1310 1338                           u1150 15D4  
                         u1231 1146                           u1311 1334                           u1151 15D0  
                         u1240 118A                           u1160 15FC                           u1320 1718  
                         u1400 0ED4                           u1241 1186                           u1161 15F8  
                         u1321 1714                           u1401 0ED0                           u1250 11D4  
                         u1170 1632                           u1330 176E                           u1410 100E  
                         u1251 11D0                           u1171 162E                           u1331 176A  
                         u1411 100A                           u1260 1228                           u1340 1A06  
                         u1180 19A8                           u1420 102C                           u1261 1224  
                         u1341 1A02                           u1181 19A4                           u1421 1028  
                         u1190 10A0                           u1270 125A                           u1430 1046  
                         u1350 0E42                           u1191 109C                           u1271 1256  
                         u1431 1042                           u1351 0E3C                           u1280 1298  
                         u1440 1056                           u1360 0E44                   _BAUD4CONbits 000EE9  
                         u1281 1294                           u1441 1052                           u1290 12C2  
                         u1370 0E56                           u1450 139E                           u1291 12BE  
                         u1371 0E52                           u1451 139A                           u1380 0E92  
                         u1460 13EA                           u1381 0E8E                           u1461 13E6  
                         u1390 0EBE                           u1470 1406                           u1391 0EBA  
                         u1471 1402                           u1480 181A                           u1481 1816  
                         _T2PR 000FBC                           u1497 1A40                           abs@a 0017  
                         _dbuf 00DA                           _main 14C8                           _dtoa 0E12  
                         _prec 00D7                           pad@i 001C                           pad@p 0019  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001E                           fsr2l 000FD9  
                         btemp 005B                           start 0076         __end_of_color_read_Red 1876  
              __end_of_HighISR 0076                   ___param_bank 000000                          ??_abs 0019  
                        ??_pad 001B                __end_of___aodiv 1216                          ?_main 0001  
                        ?_dtoa 0020                __end_of___aomod 137A                          i2l350 1BD8  
                        i2l343 1AEC                          i2l271 006A                          i2l336 1B40  
                        i2l269 0066                   vfpfcnvrt@fmt 0045        __end_of_sendCharSerial4 1BC2  
   __end_of_I2C_2_Master_Start 1C10     __end_of_I2C_2_Master_Write 1BE6                          _flags 00D9  
                        _fputc 15B0                          _fputs 1966                          pad@fp 0015  
                        main@B 00A9                          main@C 00AD                          main@G 00AB  
                        _width 00D5                          main@R 00A7                          _putch 1C10  
                        dtoa@d 0022                          dtoa@i 0041                          dtoa@n 0038  
                        dtoa@p 0034                          dtoa@s 0040                          dtoa@w 0036  
                        tablat 000FF5                          ttemp5 005C                          ttemp6 005F  
                        ttemp7 0063                          status 000FD8                          wtemp8 005C  
              __end_of_sprintf 17D6        __end_of_color_read_Blue 1966          _I2C_2_Master_RepStart 1BF2  
           putCharToRxBuf@byte 0001                ?_color_read_Red 0009                __initialization 1A60  
                 __end_of_main 15B0                   __end_of_dtoa 108E                         ??_main 0057  
                       ??_dtoa 002A                  __activetblptr 000001                         ?_fputc 0005  
                       ?_fputs 000E                         _CCPR1H 000FAA                         _CCPR2H 000FA6  
                       _CCPR3H 000F25                         _CCPR4H 000F21                         ?_putch 0001  
                       _RC0PPS 000E62                         _RC4REG 000EE3                         _RE2PPS 000E74  
                       _RD5PPS 000E6F                         _RC7PPS 000E69                         _RE4PPS 000E76  
                       _RD6PPS 000E70                         i2l2061 1B1A                         i2l2071 1AD2  
                       i2l2063 1B2A                         i2l2151 0046                         i2l2143 0012  
                       i2l2073 1AD6                         i2l2065 1B2E                         i2l2153 005A  
                       i2l2145 0022                         i2l2067 1B3E                         i2l2147 0028  
                       i2l2069 1AC2                         i2l2149 0038                         i2l1527 1BC2  
                       _RG6PPS 000E88                      ??_HighISR 0003       __end_of_color_click_init 1A60  
                       _RX4PPS 000E15                         _TX4REG 000EE4                   _CCPTMRS0bits 000FAD  
                 vfprintf@cfmt 0055               _getCharFromTxBuf 1AC2                      ??___aodiv 0015  
                    ??___aomod 0015                         clear_0 1A66                         clear_1 1A72  
                       isa$std 000001                         pad@buf 0017                         dtoa@fp 0020  
                       fputc@c 0005                         fputs@c 0012                         fputs@i 0013  
                       fputs@s 000E                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8               ?_sendCharSerial4 0001  
                       putch@c 0001               __end_of_vfprintf 1826              ??_initDCmotorsPWM 0007  
                    ??_sprintf 0057          __end_of_isDataInTxBuf 1BDA                     __accesstop 0060  
      __end_of__initialization 1A80       __end_of_color_read_Clear 1916       __end_of_color_read_Green 18C6  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001               ?_color_read_Blue 0009  
              _Interrupts_init 1BE6                 __pcstackCOMRAM 0001                  __end_of_fputc 167A  
                __end_of_fputs 19AA                  __end_of_putch 1C12                        ??_fputc 0009  
                      ??_fputs 0012                        ??_putch 0005                     __pbssBANK0 00C1  
                   __pbssBANK1 0100              _color_writetoaddr 1B8A                   _T2CLKCONbits 000FBF  
           ?_color_writetoaddr 0007            ??_color_writetoaddr 0008                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5                        i2u45_40 1BD6                        i2u45_41 1BD0  
                      i2u46_40 1BD8                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
      __end_of_Interrupts_init 1BF2         color_writetoaddr@value 0007               ??_color_read_Red 000B  
                      _HighISR 0008      __end_of_color_writetoaddr 1BAA             _I2C_2_Master_Start 1C06  
                   _initUSART4 1B6A             _I2C_2_Master_Write 1BDA                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000E        sendStringSerial4@string 0006  
                      ___aodiv 108E                        ___aomod 1216            ?_I2C_2_Master_Start 0001  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 0060                   __psmallconst 0E00  
                      __pcinit 1A60                        __ramtop 0E00                        __ptext0 14C8  
                      __ptext1 1784                        __ptext2 17D6                        __ptext3 137A  
                      __ptext4 0E12                        __ptext5 170A                        __ptext6 1966  
                      __ptext7 15B0                        __ptext8 1C10                        __ptext9 19EC  
                    _T2CONbits 000FBD                      _T2HLTbits 000FBE                  _RxBufWriteCnt 005A  
     __end_of_getCharFromTxBuf 1AEE                        main@buf 007F                        _sprintf 1784  
         ??_I2C_2_Master_Start 0006           ??_I2C_2_Master_Write 0006           end_of_initialization 1A80  
                      fputc@fp 0007                        fputs@fp 0010              ?_color_click_init 0001  
           ??_color_click_init 0009              __end_of_vfpfcnvrt 14C8                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
             vfpfcnvrt@convarg 004B                     ??_vfprintf 0055                _initDCmotorsPWM 167A  
                    _TRISAbits 000F81                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISFbits 000F86                      _TRISGbits 000F87  
     color_writetoaddr@address 0008        ??_I2C_2_Master_RepStart 0006               ?_Interrupts_init 0001  
                  _CCP1CONbits 000FAB              ?_color_read_Clear 0009                   _EUSART4RXbuf 00C1  
                 _EUSART4TXbuf 0100                    _CCP2CONbits 000FA7              ?_color_read_Green 0009  
                  _CCP3CONbits 000F26                    ?_initUSART4 0001                    _CCP4CONbits 000F22  
    sendCharSerial4@charToSend 0005                     main@motorL 00AF                     main@motorR 00B8  
           ??_color_read_Clear 000B             ??_color_read_Green 000B                    vfpfcnvrt@ap 0047  
                  vfpfcnvrt@cp 0053                    vfpfcnvrt@fp 0043            color_read_Clear@tmp 000E  
          start_initialization 1A60                    __end_of_abs 1A2C                    __end_of_pad 1784  
                _TxBufWriteCnt 0058            color_read_Green@tmp 000E        __end_of_initDCmotorsPWM 170A  
                  vfprintf@fmt 0062                 _putCharToRxBuf 1B18                    __pbssCOMRAM 0057  
                __pcstackBANK0 0060               ___aodiv@dividend 0005                       ?_HighISR 0001  
                    _dtoa$2080 0032         __end_of_putCharToRxBuf 1B42                      __pintcode 0008  
                     ?___aodiv 0005                       ?___aomod 0005               ___aodiv@quotient 0017  
         I2C_2_Master_Read@ack 0007           I2C_2_Master_Read@tmp 0008                    __smallconst 0E00  
            _I2C_2_Master_Idle 1B42              _I2C_2_Master_Init 1AEE              _I2C_2_Master_Read 19AA  
            _I2C_2_Master_Stop 1BFC                   _RxBufReadCnt 0059             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
     initDCmotorsPWM@PWMperiod 0005                       ?_sprintf 0066              ?_getCharFromTxBuf 0001  
           ??_getCharFromTxBuf 0001              _sendStringSerial4 1A92            ??_I2C_2_Master_Idle 0005  
          ??_I2C_2_Master_Init 0005            ??_I2C_2_Master_Read 0006                       _LATAbits 000F79  
          ??_I2C_2_Master_Stop 0006                       _LATCbits 000F7B                  _isDataInTxBuf 1BC2  
                     _LATEbits 000F7D                       _LATFbits 000F7E                       _LATGbits 000F7F  
           ?_sendStringSerial4 0006                       _PIE4bits 000E2D                       i2u110_40 0046  
                     i2u110_41 0042                       i2u111_40 005A                       i2u111_41 0056  
                     i2u105_40 1B2A                       i2u105_41 1B26                       i2u106_40 1AD2  
                     i2u106_41 1ACE                       i2u108_40 0022                       i2u108_41 001E  
                     i2u109_40 0038                       i2u109_41 0034                       _PIR4bits 000E37  
              ?_putCharToRxBuf 0001               ?_initDCmotorsPWM 0005              ??_sendCharSerial4 0005  
                     _SSP2CON2 000EDA            ??_sendStringSerial4 0008                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 137A      __end_of_I2C_2_Master_Idle 1B6A      __end_of_I2C_2_Master_Init 1B18  
    __end_of_I2C_2_Master_Read 19EC      __end_of_I2C_2_Master_Stop 1C06    I2C_2_Master_Write@data_byte 0006  
            ??_color_read_Blue 000B                   _TxBufReadCnt 0057      __end_of_sendStringSerial4 1AC2  
               ?_isDataInTxBuf 0001  __end_of_I2C_2_Master_RepStart 1BFC             color_read_Blue@tmp 000E  
                 ??_initUSART4 0005                       __Hrparam 0000                     vfprintf@ap 0064  
                     __Lrparam 0000                     vfprintf@fp 0060                   __Lsmallconst 0E00  
                   ?_vfpfcnvrt 0043                ___aodiv@divisor 000D                ___aodiv@counter 0015  
                   _ANSELDbits 000EA7                     sprintf@fmt 0068             __end_of_initUSART4 1B8A  
                     __ptext10 1216                       __ptext11 108E                       __ptext20 1BF2  
                     __ptext12 1A92                       __ptext21 19AA                       __ptext13 1BAA  
                     __ptext22 1A2C                       __ptext14 1B6A                       __ptext31 1B18  
                     __ptext23 1B8A                       __ptext15 167A                       __ptext32 1BC2  
                     __ptext24 1BDA                       __ptext16 1826                       __ptext33 1AC2  
                     __ptext25 1BFC                       __ptext17 1876                       __ptext26 1C06  
                     __ptext18 18C6                       __ptext27 1B42                       __ptext19 1916  
                     __ptext28 1AEE                       __ptext29 1BE6                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                       isa$xinst 000000                     _RC4STAbits 000EE7  
                     int$flags 005B                       _vfprintf 17D6               ___aomod@dividend 0005  
                   _INTCONbits 000FF2                ??_isDataInTxBuf 0001                       intlevel2 0000  
                    sprintf@ap 0072                ___aomod@divisor 000D                    ??_vfpfcnvrt 0049  
              ___aomod@counter 0015               _color_click_init 1A2C                       sprintf@f 0074  
                     sprintf@s 0066                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
                   _TX4STAbits 000EE8                   ___aodiv@sign 0016                _sendCharSerial4 1BAA  
             ??_putCharToRxBuf 0001                   ___aomod@sign 0016  
